var wS=Object.defineProperty;var WS=(e,E,t)=>E in e?wS(e,E,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[E]=t;var je=(e,E,t)=>(WS(e,typeof E!="symbol"?E+"":E,t),t);var qE=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function PT(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function lA(e){return e instanceof Map?e.clear=e.delete=e.set=function(){throw new Error("map is read-only")}:e instanceof Set&&(e.add=e.clear=e.delete=function(){throw new Error("set is read-only")}),Object.freeze(e),Object.getOwnPropertyNames(e).forEach(E=>{const t=e[E],T=typeof t;(T==="object"||T==="function")&&!Object.isFrozen(t)&&lA(t)}),e}class _s{constructor(E){E.data===void 0&&(E.data={}),this.data=E.data,this.isMatchIgnored=!1}ignoreMatch(){this.isMatchIgnored=!0}}function CA(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")}function LE(e,...E){const t=Object.create(null);for(const T in e)t[T]=e[T];return E.forEach(function(T){for(const r in T)t[r]=T[r]}),t}const XS="</span>",ls=e=>!!e.scope,$S=(e,{prefix:E})=>{if(e.startsWith("language:"))return e.replace("language:","language-");if(e.includes(".")){const t=e.split(".");return[`${E}${t.shift()}`,...t.map((T,r)=>`${T}${"_".repeat(r+1)}`)].join(" ")}return`${E}${e}`};class KS{constructor(E,t){this.buffer="",this.classPrefix=t.classPrefix,E.walk(this)}addText(E){this.buffer+=CA(E)}openNode(E){if(!ls(E))return;const t=$S(E.scope,{prefix:this.classPrefix});this.span(t)}closeNode(E){ls(E)&&(this.buffer+=XS)}value(){return this.buffer}span(E){this.buffer+=`<span class="${E}">`}}const Cs=(e={})=>{const E={children:[]};return Object.assign(E,e),E};class Ur{constructor(){this.rootNode=Cs(),this.stack=[this.rootNode]}get top(){return this.stack[this.stack.length-1]}get root(){return this.rootNode}add(E){this.top.children.push(E)}openNode(E){const t=Cs({scope:E});this.add(t),this.stack.push(t)}closeNode(){if(this.stack.length>1)return this.stack.pop()}closeAllNodes(){for(;this.closeNode(););}toJSON(){return JSON.stringify(this.rootNode,null,4)}walk(E){return this.constructor._walk(E,this.rootNode)}static _walk(E,t){return typeof t=="string"?E.addText(t):t.children&&(E.openNode(t),t.children.forEach(T=>this._walk(E,T)),E.closeNode(t)),E}static _collapse(E){typeof E!="string"&&E.children&&(E.children.every(t=>typeof t=="string")?E.children=[E.children.join("")]:E.children.forEach(t=>{Ur._collapse(t)}))}}class JS extends Ur{constructor(E){super(),this.options=E}addText(E){E!==""&&this.add(E)}startScope(E){this.openNode(E)}endScope(){this.closeNode()}__addSublanguage(E,t){const T=E.root;t&&(T.scope=`language:${t}`),this.add(T)}toHTML(){return new KS(this,this.options).value()}finalize(){return this.closeAllNodes(),!0}}function bt(e){return e?typeof e=="string"?e:e.source:null}function LA(e){return wE("(?=",e,")")}function kS(e){return wE("(?:",e,")*")}function jS(e){return wE("(?:",e,")?")}function wE(...e){return e.map(t=>bt(t)).join("")}function qS(e){const E=e[e.length-1];return typeof E=="object"&&E.constructor===Object?(e.splice(e.length-1,1),E):{}}function dr(...e){return"("+(qS(e).capture?"":"?:")+e.map(T=>bt(T)).join("|")+")"}function cA(e){return new RegExp(e.toString()+"|").exec("").length-1}function QS(e,E){const t=e&&e.exec(E);return t&&t.index===0}const ZS=/\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./;function hr(e,{joinWith:E}){let t=0;return e.map(T=>{t+=1;const r=t;let s=bt(T),R="";for(;s.length>0;){const A=ZS.exec(s);if(!A){R+=s;break}R+=s.substring(0,A.index),s=s.substring(A.index+A[0].length),A[0][0]==="\\"&&A[1]?R+="\\"+String(Number(A[1])+r):(R+=A[0],A[0]==="("&&t++)}return R}).map(T=>`(${T})`).join(E)}const zS=/\b\B/,uA="[a-zA-Z]\\w*",Gr="[a-zA-Z_]\\w*",PA="\\b\\d+(\\.\\d+)?",DA="(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)",fA="\\b(0b[01]+)",ei="!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~",Ei=(e={})=>{const E=/^#![ ]*\//;return e.binary&&(e.begin=wE(E,/.*\b/,e.binary,/\b.*/)),LE({scope:"meta",begin:E,end:/$/,relevance:0,"on:begin":(t,T)=>{t.index!==0&&T.ignoreMatch()}},e)},Ft={begin:"\\\\[\\s\\S]",relevance:0},ti={scope:"string",begin:"'",end:"'",illegal:"\\n",contains:[Ft]},Ti={scope:"string",begin:'"',end:'"',illegal:"\\n",contains:[Ft]},ri={begin:/\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/},DT=function(e,E,t={}){const T=LE({scope:"comment",begin:e,end:E,contains:[]},t);T.contains.push({scope:"doctag",begin:"[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)",end:/(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,excludeBegin:!0,relevance:0});const r=dr("I","a","is","so","us","to","at","if","in","it","on",/[A-Za-z]+['](d|ve|re|ll|t|s|n)/,/[A-Za-z]+[-][a-z]+/,/[A-Za-z][a-z]{2,}/);return T.contains.push({begin:wE(/[ ]+/,"(",r,/[.]?[:]?([.][ ]|[ ])/,"){3}")}),T},si=DT("//","$"),Ri=DT("/\\*","\\*/"),Ai=DT("#","$"),ni={scope:"number",begin:PA,relevance:0},Si={scope:"number",begin:DA,relevance:0},ii={scope:"number",begin:fA,relevance:0},oi={scope:"regexp",begin:/\/(?=[^/\n]*\/)/,end:/\/[gimuy]*/,contains:[Ft,{begin:/\[/,end:/\]/,relevance:0,contains:[Ft]}]},Oi={scope:"title",begin:uA,relevance:0},Ii={scope:"title",begin:Gr,relevance:0},Ni={begin:"\\.\\s*"+Gr,relevance:0},ai=function(e){return Object.assign(e,{"on:begin":(E,t)=>{t.data._beginMatch=E[1]},"on:end":(E,t)=>{t.data._beginMatch!==E[1]&&t.ignoreMatch()}})};var qt=Object.freeze({__proto__:null,APOS_STRING_MODE:ti,BACKSLASH_ESCAPE:Ft,BINARY_NUMBER_MODE:ii,BINARY_NUMBER_RE:fA,COMMENT:DT,C_BLOCK_COMMENT_MODE:Ri,C_LINE_COMMENT_MODE:si,C_NUMBER_MODE:Si,C_NUMBER_RE:DA,END_SAME_AS_BEGIN:ai,HASH_COMMENT_MODE:Ai,IDENT_RE:uA,MATCH_NOTHING_RE:zS,METHOD_GUARD:Ni,NUMBER_MODE:ni,NUMBER_RE:PA,PHRASAL_WORDS_MODE:ri,QUOTE_STRING_MODE:Ti,REGEXP_MODE:oi,RE_STARTERS_RE:ei,SHEBANG:Ei,TITLE_MODE:Oi,UNDERSCORE_IDENT_RE:Gr,UNDERSCORE_TITLE_MODE:Ii});function _i(e,E){e.input[e.index-1]==="."&&E.ignoreMatch()}function li(e,E){e.className!==void 0&&(e.scope=e.className,delete e.className)}function Ci(e,E){E&&e.beginKeywords&&(e.begin="\\b("+e.beginKeywords.split(" ").join("|")+")(?!\\.)(?=\\b|\\s)",e.__beforeBegin=_i,e.keywords=e.keywords||e.beginKeywords,delete e.beginKeywords,e.relevance===void 0&&(e.relevance=0))}function Li(e,E){Array.isArray(e.illegal)&&(e.illegal=dr(...e.illegal))}function ci(e,E){if(e.match){if(e.begin||e.end)throw new Error("begin & end are not supported with match");e.begin=e.match,delete e.match}}function ui(e,E){e.relevance===void 0&&(e.relevance=1)}const Pi=(e,E)=>{if(!e.beforeMatch)return;if(e.starts)throw new Error("beforeMatch cannot be used with starts");const t=Object.assign({},e);Object.keys(e).forEach(T=>{delete e[T]}),e.keywords=t.keywords,e.begin=wE(t.beforeMatch,LA(t.begin)),e.starts={relevance:0,contains:[Object.assign(t,{endsParent:!0})]},e.relevance=0,delete t.beforeMatch},Di=["of","and","for","in","not","or","if","then","parent","list","value"],fi="keyword";function MA(e,E,t=fi){const T=Object.create(null);return typeof e=="string"?r(t,e.split(" ")):Array.isArray(e)?r(t,e):Object.keys(e).forEach(function(s){Object.assign(T,MA(e[s],E,s))}),T;function r(s,R){E&&(R=R.map(A=>A.toLowerCase())),R.forEach(function(A){const S=A.split("|");T[S[0]]=[s,Mi(S[0],S[1])]})}}function Mi(e,E){return E?Number(E):pi(e)?0:1}function pi(e){return Di.includes(e.toLowerCase())}const Ls={},yE=e=>{console.error(e)},cs=(e,...E)=>{console.log(`WARN: ${e}`,...E)},KE=(e,E)=>{Ls[`${e}/${E}`]||(console.log(`Deprecated as of ${e}. ${E}`),Ls[`${e}/${E}`]=!0)},ST=new Error;function pA(e,E,{key:t}){let T=0;const r=e[t],s={},R={};for(let A=1;A<=E.length;A++)R[A+T]=r[A],s[A+T]=!0,T+=cA(E[A-1]);e[t]=R,e[t]._emit=s,e[t]._multi=!0}function Ui(e){if(Array.isArray(e.begin)){if(e.skip||e.excludeBegin||e.returnBegin)throw yE("skip, excludeBegin, returnBegin not compatible with beginScope: {}"),ST;if(typeof e.beginScope!="object"||e.beginScope===null)throw yE("beginScope must be object"),ST;pA(e,e.begin,{key:"beginScope"}),e.begin=hr(e.begin,{joinWith:""})}}function di(e){if(Array.isArray(e.end)){if(e.skip||e.excludeEnd||e.returnEnd)throw yE("skip, excludeEnd, returnEnd not compatible with endScope: {}"),ST;if(typeof e.endScope!="object"||e.endScope===null)throw yE("endScope must be object"),ST;pA(e,e.end,{key:"endScope"}),e.end=hr(e.end,{joinWith:""})}}function hi(e){e.scope&&typeof e.scope=="object"&&e.scope!==null&&(e.beginScope=e.scope,delete e.scope)}function Gi(e){hi(e),typeof e.beginScope=="string"&&(e.beginScope={_wrap:e.beginScope}),typeof e.endScope=="string"&&(e.endScope={_wrap:e.endScope}),Ui(e),di(e)}function gi(e){function E(R,A){return new RegExp(bt(R),"m"+(e.case_insensitive?"i":"")+(e.unicodeRegex?"u":"")+(A?"g":""))}class t{constructor(){this.matchIndexes={},this.regexes=[],this.matchAt=1,this.position=0}addRule(A,S){S.position=this.position++,this.matchIndexes[this.matchAt]=S,this.regexes.push([S,A]),this.matchAt+=cA(A)+1}compile(){this.regexes.length===0&&(this.exec=()=>null);const A=this.regexes.map(S=>S[1]);this.matcherRe=E(hr(A,{joinWith:"|"}),!0),this.lastIndex=0}exec(A){this.matcherRe.lastIndex=this.lastIndex;const S=this.matcherRe.exec(A);if(!S)return null;const n=S.findIndex((O,I)=>I>0&&O!==void 0),i=this.matchIndexes[n];return S.splice(0,n),Object.assign(S,i)}}class T{constructor(){this.rules=[],this.multiRegexes=[],this.count=0,this.lastIndex=0,this.regexIndex=0}getMatcher(A){if(this.multiRegexes[A])return this.multiRegexes[A];const S=new t;return this.rules.slice(A).forEach(([n,i])=>S.addRule(n,i)),S.compile(),this.multiRegexes[A]=S,S}resumingScanAtSamePosition(){return this.regexIndex!==0}considerAll(){this.regexIndex=0}addRule(A,S){this.rules.push([A,S]),S.type==="begin"&&this.count++}exec(A){const S=this.getMatcher(this.regexIndex);S.lastIndex=this.lastIndex;let n=S.exec(A);if(this.resumingScanAtSamePosition()&&!(n&&n.index===this.lastIndex)){const i=this.getMatcher(0);i.lastIndex=this.lastIndex+1,n=i.exec(A)}return n&&(this.regexIndex+=n.position+1,this.regexIndex===this.count&&this.considerAll()),n}}function r(R){const A=new T;return R.contains.forEach(S=>A.addRule(S.begin,{rule:S,type:"begin"})),R.terminatorEnd&&A.addRule(R.terminatorEnd,{type:"end"}),R.illegal&&A.addRule(R.illegal,{type:"illegal"}),A}function s(R,A){const S=R;if(R.isCompiled)return S;[li,ci,Gi,Pi].forEach(i=>i(R,A)),e.compilerExtensions.forEach(i=>i(R,A)),R.__beforeBegin=null,[Ci,Li,ui].forEach(i=>i(R,A)),R.isCompiled=!0;let n=null;return typeof R.keywords=="object"&&R.keywords.$pattern&&(R.keywords=Object.assign({},R.keywords),n=R.keywords.$pattern,delete R.keywords.$pattern),n=n||/\w+/,R.keywords&&(R.keywords=MA(R.keywords,e.case_insensitive)),S.keywordPatternRe=E(n,!0),A&&(R.begin||(R.begin=/\B|\b/),S.beginRe=E(S.begin),!R.end&&!R.endsWithParent&&(R.end=/\B|\b/),R.end&&(S.endRe=E(S.end)),S.terminatorEnd=bt(S.end)||"",R.endsWithParent&&A.terminatorEnd&&(S.terminatorEnd+=(R.end?"|":"")+A.terminatorEnd)),R.illegal&&(S.illegalRe=E(R.illegal)),R.contains||(R.contains=[]),R.contains=[].concat(...R.contains.map(function(i){return mi(i==="self"?R:i)})),R.contains.forEach(function(i){s(i,S)}),R.starts&&s(R.starts,A),S.matcher=r(S),S}if(e.compilerExtensions||(e.compilerExtensions=[]),e.contains&&e.contains.includes("self"))throw new Error("ERR: contains `self` is not supported at the top-level of a language.  See documentation.");return e.classNameAliases=LE(e.classNameAliases||{}),s(e)}function UA(e){return e?e.endsWithParent||UA(e.starts):!1}function mi(e){return e.variants&&!e.cachedVariants&&(e.cachedVariants=e.variants.map(function(E){return LE(e,{variants:null},E)})),e.cachedVariants?e.cachedVariants:UA(e)?LE(e,{starts:e.starts?LE(e.starts):null}):Object.isFrozen(e)?LE(e):e}var Hi="11.9.0";class Bi extends Error{constructor(E,t){super(E),this.name="HTMLInjectionError",this.html=t}}const WT=CA,us=LE,Ps=Symbol("nomatch"),bi=7,dA=function(e){const E=Object.create(null),t=Object.create(null),T=[];let r=!0;const s="Could not find the language '{}', did you forget to load/include a language module?",R={disableAutodetect:!0,name:"Plain text",contains:[]};let A={ignoreUnescapedHTML:!1,throwUnescapedHTML:!1,noHighlightRe:/^(no-?highlight)$/i,languageDetectRe:/\blang(?:uage)?-([\w-]+)\b/i,classPrefix:"hljs-",cssSelector:"pre code",languages:null,__emitter:JS};function S(L){return A.noHighlightRe.test(L)}function n(L){let G=L.className+" ";G+=L.parentNode?L.parentNode.className:"";const Ee=A.languageDetectRe.exec(G);if(Ee){const Oe=k(Ee[1]);return Oe||(cs(s.replace("{}",Ee[1])),cs("Falling back to no-highlight mode for this block.",L)),Oe?Ee[1]:"no-highlight"}return G.split(/\s+/).find(Oe=>S(Oe)||k(Oe))}function i(L,G,Ee){let Oe="",Ne="";typeof G=="object"?(Oe=L,Ee=G.ignoreIllegals,Ne=G.language):(KE("10.7.0","highlight(lang, code, ...args) has been deprecated."),KE("10.7.0",`Please use highlight(code, options) instead.
https://github.com/highlightjs/highlight.js/issues/2277`),Ne=L,Oe=G),Ee===void 0&&(Ee=!0);const De={code:Oe,language:Ne};_e("before:highlight",De);const ke=De.result?De.result:O(De.language,De.code,Ee);return ke.code=De.code,_e("after:highlight",ke),ke}function O(L,G,Ee,Oe){const Ne=Object.create(null);function De(p,h){return p.keywords[h]}function ke(){if(!a.keywords){u.addText(H);return}let p=0;a.keywordPatternRe.lastIndex=0;let h=a.keywordPatternRe.exec(H),W="";for(;h;){W+=H.substring(p,h.index);const te=P.case_insensitive?h[0].toLowerCase():h[0],Pe=De(a,te);if(Pe){const[Ke,GE]=Pe;if(u.addText(W),W="",Ne[te]=(Ne[te]||0)+1,Ne[te]<=bi&&(Y+=GE),Ke.startsWith("_"))W+=h[0];else{const jt=P.classNameAliases[Ke]||Ke;Me(h[0],jt)}}else W+=h[0];p=a.keywordPatternRe.lastIndex,h=a.keywordPatternRe.exec(H)}W+=H.substring(p),u.addText(W)}function $E(){if(H==="")return;let p=null;if(typeof a.subLanguage=="string"){if(!E[a.subLanguage]){u.addText(H);return}p=O(a.subLanguage,H,!0,m[a.subLanguage]),m[a.subLanguage]=p._top}else p=D(H,a.subLanguage.length?a.subLanguage:null);a.relevance>0&&(Y+=p.relevance),u.__addSublanguage(p._emitter,p.language)}function ye(){a.subLanguage!=null?$E():ke(),H=""}function Me(p,h){p!==""&&(u.startScope(h),u.addText(p),u.endScope())}function hE(p,h){let W=1;const te=h.length-1;for(;W<=te;){if(!p._emit[W]){W++;continue}const Pe=P.classNameAliases[p[W]]||p[W],Ke=h[W];Pe?Me(Ke,Pe):(H=Ke,ke(),H=""),W++}}function Ct(p,h){return p.scope&&typeof p.scope=="string"&&u.openNode(P.classNameAliases[p.scope]||p.scope),p.beginScope&&(p.beginScope._wrap?(Me(H,P.classNameAliases[p.beginScope._wrap]||p.beginScope._wrap),H=""):p.beginScope._multi&&(hE(p.beginScope,h),H="")),a=Object.create(p,{parent:{value:a}}),a}function SE(p,h,W){let te=QS(p.endRe,W);if(te){if(p["on:end"]){const Pe=new _s(p);p["on:end"](h,Pe),Pe.isMatchIgnored&&(te=!1)}if(te){for(;p.endsParent&&p.parent;)p=p.parent;return p}}if(p.endsWithParent)return SE(p.parent,h,W)}function Lt(p){return a.matcher.regexIndex===0?(H+=p[0],1):(se=!0,0)}function ct(p){const h=p[0],W=p.rule,te=new _s(W),Pe=[W.__beforeBegin,W["on:begin"]];for(const Ke of Pe)if(Ke&&(Ke(p,te),te.isMatchIgnored))return Lt(h);return W.skip?H+=h:(W.excludeBegin&&(H+=h),ye(),!W.returnBegin&&!W.excludeBegin&&(H=h)),Ct(W,p),W.returnBegin?0:h.length}function o(p){const h=p[0],W=G.substring(p.index),te=SE(a,p,W);if(!te)return Ps;const Pe=a;a.endScope&&a.endScope._wrap?(ye(),Me(h,a.endScope._wrap)):a.endScope&&a.endScope._multi?(ye(),hE(a.endScope,p)):Pe.skip?H+=h:(Pe.returnEnd||Pe.excludeEnd||(H+=h),ye(),Pe.excludeEnd&&(H=h));do a.scope&&u.closeNode(),!a.skip&&!a.subLanguage&&(Y+=a.relevance),a=a.parent;while(a!==te.parent);return te.starts&&Ct(te.starts,p),Pe.returnEnd?0:h.length}function N(){const p=[];for(let h=a;h!==P;h=h.parent)h.scope&&p.unshift(h.scope);p.forEach(h=>u.openNode(h))}let l={};function f(p,h){const W=h&&h[0];if(H+=p,W==null)return ye(),0;if(l.type==="begin"&&h.type==="end"&&l.index===h.index&&W===""){if(H+=G.slice(h.index,h.index+1),!r){const te=new Error(`0 width match regex (${L})`);throw te.languageName=L,te.badRule=l.rule,te}return 1}if(l=h,h.type==="begin")return ct(h);if(h.type==="illegal"&&!Ee){const te=new Error('Illegal lexeme "'+W+'" for mode "'+(a.scope||"<unnamed>")+'"');throw te.mode=a,te}else if(h.type==="end"){const te=o(h);if(te!==Ps)return te}if(h.type==="illegal"&&W==="")return 1;if(q>1e5&&q>h.index*3)throw new Error("potential infinite loop, way more iterations than matches");return H+=W,W.length}const P=k(L);if(!P)throw yE(s.replace("{}",L)),new Error('Unknown language: "'+L+'"');const g=gi(P);let F="",a=Oe||g;const m={},u=new A.__emitter(A);N();let H="",Y=0,w=0,q=0,se=!1;try{if(P.__emitTokens)P.__emitTokens(G,u);else{for(a.matcher.considerAll();;){q++,se?se=!1:a.matcher.considerAll(),a.matcher.lastIndex=w;const p=a.matcher.exec(G);if(!p)break;const h=G.substring(w,p.index),W=f(h,p);w=p.index+W}f(G.substring(w))}return u.finalize(),F=u.toHTML(),{language:L,value:F,relevance:Y,illegal:!1,_emitter:u,_top:a}}catch(p){if(p.message&&p.message.includes("Illegal"))return{language:L,value:WT(G),illegal:!0,relevance:0,_illegalBy:{message:p.message,index:w,context:G.slice(w-100,w+100),mode:p.mode,resultSoFar:F},_emitter:u};if(r)return{language:L,value:WT(G),illegal:!1,relevance:0,errorRaised:p,_emitter:u,_top:a};throw p}}function I(L){const G={value:WT(L),illegal:!1,relevance:0,_top:R,_emitter:new A.__emitter(A)};return G._emitter.addText(L),G}function D(L,G){G=G||A.languages||Object.keys(E);const Ee=I(L),Oe=G.filter(k).filter(c).map(ye=>O(ye,L,!1));Oe.unshift(Ee);const Ne=Oe.sort((ye,Me)=>{if(ye.relevance!==Me.relevance)return Me.relevance-ye.relevance;if(ye.language&&Me.language){if(k(ye.language).supersetOf===Me.language)return 1;if(k(Me.language).supersetOf===ye.language)return-1}return 0}),[De,ke]=Ne,$E=De;return $E.secondBest=ke,$E}function d(L,G,Ee){const Oe=G&&t[G]||Ee;L.classList.add("hljs"),L.classList.add(`language-${Oe}`)}function b(L){let G=null;const Ee=n(L);if(S(Ee))return;if(_e("before:highlightElement",{el:L,language:Ee}),L.dataset.highlighted){console.log("Element previously highlighted. To highlight again, first unset `dataset.highlighted`.",L);return}if(L.children.length>0&&(A.ignoreUnescapedHTML||(console.warn("One of your code blocks includes unescaped HTML. This is a potentially serious security risk."),console.warn("https://github.com/highlightjs/highlight.js/wiki/security"),console.warn("The element with unescaped HTML:"),console.warn(L)),A.throwUnescapedHTML))throw new Bi("One of your code blocks includes unescaped HTML.",L.innerHTML);G=L;const Oe=G.textContent,Ne=Ee?i(Oe,{language:Ee,ignoreIllegals:!0}):D(Oe);L.innerHTML=Ne.value,L.dataset.highlighted="yes",d(L,Ee,Ne.language),L.result={language:Ne.language,re:Ne.relevance,relevance:Ne.relevance},Ne.secondBest&&(L.secondBest={language:Ne.secondBest.language,relevance:Ne.secondBest.relevance}),_e("after:highlightElement",{el:L,result:Ne,text:Oe})}function x(L){A=us(A,L)}const $=()=>{v(),KE("10.6.0","initHighlighting() deprecated.  Use highlightAll() now.")};function J(){v(),KE("10.6.0","initHighlightingOnLoad() deprecated.  Use highlightAll() now.")}let V=!1;function v(){if(document.readyState==="loading"){V=!0;return}document.querySelectorAll(A.cssSelector).forEach(b)}function re(){V&&v()}typeof window<"u"&&window.addEventListener&&window.addEventListener("DOMContentLoaded",re,!1);function ue(L,G){let Ee=null;try{Ee=G(e)}catch(Oe){if(yE("Language definition for '{}' could not be registered.".replace("{}",L)),r)yE(Oe);else throw Oe;Ee=R}Ee.name||(Ee.name=L),E[L]=Ee,Ee.rawDefinition=G.bind(null,e),Ee.aliases&&_(Ee.aliases,{languageName:L})}function ne(L){delete E[L];for(const G of Object.keys(t))t[G]===L&&delete t[G]}function ee(){return Object.keys(E)}function k(L){return L=(L||"").toLowerCase(),E[L]||E[t[L]]}function _(L,{languageName:G}){typeof L=="string"&&(L=[L]),L.forEach(Ee=>{t[Ee.toLowerCase()]=G})}function c(L){const G=k(L);return G&&!G.disableAutodetect}function C(L){L["before:highlightBlock"]&&!L["before:highlightElement"]&&(L["before:highlightElement"]=G=>{L["before:highlightBlock"](Object.assign({block:G.el},G))}),L["after:highlightBlock"]&&!L["after:highlightElement"]&&(L["after:highlightElement"]=G=>{L["after:highlightBlock"](Object.assign({block:G.el},G))})}function y(L){C(L),T.push(L)}function K(L){const G=T.indexOf(L);G!==-1&&T.splice(G,1)}function _e(L,G){const Ee=L;T.forEach(function(Oe){Oe[Ee]&&Oe[Ee](G)})}function Z(L){return KE("10.7.0","highlightBlock will be removed entirely in v12.0"),KE("10.7.0","Please use highlightElement now."),b(L)}Object.assign(e,{highlight:i,highlightAuto:D,highlightAll:v,highlightElement:b,highlightBlock:Z,configure:x,initHighlighting:$,initHighlightingOnLoad:J,registerLanguage:ue,unregisterLanguage:ne,listLanguages:ee,getLanguage:k,registerAliases:_,autoDetection:c,inherit:us,addPlugin:y,removePlugin:K}),e.debugMode=function(){r=!1},e.safeMode=function(){r=!0},e.versionString=Hi,e.regex={concat:wE,lookahead:LA,either:dr,optional:jS,anyNumberOfTimes:kS};for(const L in qt)typeof qt[L]=="object"&&lA(qt[L]);return Object.assign(e,qt),e},tt=dA({});tt.newInstance=()=>dA({});var Fi=tt;tt.HighlightJS=tt;tt.default=tt;const Ut=PT(Fi);function yi(e){const E=e.regex,t=e.COMMENT("--","$"),T={className:"string",variants:[{begin:/'/,end:/'/,contains:[{begin:/''/}]}]},r={begin:/"/,end:/"/,contains:[{begin:/""/}]},s=["true","false","unknown"],R=["double precision","large object","with timezone","without timezone"],A=["bigint","binary","blob","boolean","char","character","clob","date","dec","decfloat","decimal","float","int","integer","interval","nchar","nclob","national","numeric","real","row","smallint","time","timestamp","varchar","varying","varbinary"],S=["add","asc","collation","desc","final","first","last","view"],n=["abs","acos","all","allocate","alter","and","any","are","array","array_agg","array_max_cardinality","as","asensitive","asin","asymmetric","at","atan","atomic","authorization","avg","begin","begin_frame","begin_partition","between","bigint","binary","blob","boolean","both","by","call","called","cardinality","cascaded","case","cast","ceil","ceiling","char","char_length","character","character_length","check","classifier","clob","close","coalesce","collate","collect","column","commit","condition","connect","constraint","contains","convert","copy","corr","corresponding","cos","cosh","count","covar_pop","covar_samp","create","cross","cube","cume_dist","current","current_catalog","current_date","current_default_transform_group","current_path","current_role","current_row","current_schema","current_time","current_timestamp","current_path","current_role","current_transform_group_for_type","current_user","cursor","cycle","date","day","deallocate","dec","decimal","decfloat","declare","default","define","delete","dense_rank","deref","describe","deterministic","disconnect","distinct","double","drop","dynamic","each","element","else","empty","end","end_frame","end_partition","end-exec","equals","escape","every","except","exec","execute","exists","exp","external","extract","false","fetch","filter","first_value","float","floor","for","foreign","frame_row","free","from","full","function","fusion","get","global","grant","group","grouping","groups","having","hold","hour","identity","in","indicator","initial","inner","inout","insensitive","insert","int","integer","intersect","intersection","interval","into","is","join","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","language","large","last_value","lateral","lead","leading","left","like","like_regex","listagg","ln","local","localtime","localtimestamp","log","log10","lower","match","match_number","match_recognize","matches","max","member","merge","method","min","minute","mod","modifies","module","month","multiset","national","natural","nchar","nclob","new","no","none","normalize","not","nth_value","ntile","null","nullif","numeric","octet_length","occurrences_regex","of","offset","old","omit","on","one","only","open","or","order","out","outer","over","overlaps","overlay","parameter","partition","pattern","per","percent","percent_rank","percentile_cont","percentile_disc","period","portion","position","position_regex","power","precedes","precision","prepare","primary","procedure","ptf","range","rank","reads","real","recursive","ref","references","referencing","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","release","result","return","returns","revoke","right","rollback","rollup","row","row_number","rows","running","savepoint","scope","scroll","search","second","seek","select","sensitive","session_user","set","show","similar","sin","sinh","skip","smallint","some","specific","specifictype","sql","sqlexception","sqlstate","sqlwarning","sqrt","start","static","stddev_pop","stddev_samp","submultiset","subset","substring","substring_regex","succeeds","sum","symmetric","system","system_time","system_user","table","tablesample","tan","tanh","then","time","timestamp","timezone_hour","timezone_minute","to","trailing","translate","translate_regex","translation","treat","trigger","trim","trim_array","true","truncate","uescape","union","unique","unknown","unnest","update","upper","user","using","value","values","value_of","var_pop","var_samp","varbinary","varchar","varying","versioning","when","whenever","where","width_bucket","window","with","within","without","year"],i=["abs","acos","array_agg","asin","atan","avg","cast","ceil","ceiling","coalesce","corr","cos","cosh","count","covar_pop","covar_samp","cume_dist","dense_rank","deref","element","exp","extract","first_value","floor","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","last_value","lead","listagg","ln","log","log10","lower","max","min","mod","nth_value","ntile","nullif","percent_rank","percentile_cont","percentile_disc","position","position_regex","power","rank","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","row_number","sin","sinh","sqrt","stddev_pop","stddev_samp","substring","substring_regex","sum","tan","tanh","translate","translate_regex","treat","trim","trim_array","unnest","upper","value_of","var_pop","var_samp","width_bucket"],O=["current_catalog","current_date","current_default_transform_group","current_path","current_role","current_schema","current_transform_group_for_type","current_user","session_user","system_time","system_user","current_time","localtime","current_timestamp","localtimestamp"],I=["create table","insert into","primary key","foreign key","not null","alter table","add constraint","grouping sets","on overflow","character set","respect nulls","ignore nulls","nulls first","nulls last","depth first","breadth first"],D=i,d=[...n,...S].filter(V=>!i.includes(V)),b={className:"variable",begin:/@[a-z0-9][a-z0-9_]*/},x={className:"operator",begin:/[-+*/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,relevance:0},$={begin:E.concat(/\b/,E.either(...D),/\s*\(/),relevance:0,keywords:{built_in:D}};function J(V,{exceptions:v,when:re}={}){const ue=re;return v=v||[],V.map(ne=>ne.match(/\|\d+$/)||v.includes(ne)?ne:ue(ne)?`${ne}|0`:ne)}return{name:"SQL",case_insensitive:!0,illegal:/[{}]|<\//,keywords:{$pattern:/\b[\w\.]+/,keyword:J(d,{when:V=>V.length<3}),literal:s,type:A,built_in:O},contains:[{begin:E.either(...I),relevance:0,keywords:{$pattern:/[\w\.]+/,keyword:d.concat(I),literal:s,type:A}},{className:"type",begin:E.either(...R)},$,b,T,r,e.C_NUMBER_MODE,e.C_BLOCK_COMMENT_MODE,t,x]}}function vi(e){const E={className:"attr",begin:/"(\\.|[^\\"\r\n])*"(?=\s*:)/,relevance:1.01},t={match:/[{}[\],:]/,className:"punctuation",relevance:0},T=["true","false","null"],r={scope:"literal",beginKeywords:T.join(" ")};return{name:"JSON",keywords:{literal:T},contains:[E,t,e.QUOTE_STRING_MODE,r,e.C_NUMBER_MODE,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE],illegal:"\\S"}}function gr(e,E){const t=Object.create(null),T=e.split(",");for(let r=0;r<T.length;r++)t[T[r]]=!0;return E?r=>!!t[r.toLowerCase()]:r=>!!t[r]}const Ce={},ZE=[],RE=()=>{},Yi=()=>!1,fT=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&(e.charCodeAt(2)>122||e.charCodeAt(2)<97),mr=e=>e.startsWith("onUpdate:"),He=Object.assign,Hr=(e,E)=>{const t=e.indexOf(E);t>-1&&e.splice(t,1)},Vi=Object.prototype.hasOwnProperty,ie=(e,E)=>Vi.call(e,E),z=Array.isArray,zE=e=>MT(e)==="[object Map]",hA=e=>MT(e)==="[object Set]",Te=e=>typeof e=="function",pe=e=>typeof e=="string",At=e=>typeof e=="symbol",ce=e=>e!==null&&typeof e=="object",GA=e=>(ce(e)||Te(e))&&Te(e.then)&&Te(e.catch),gA=Object.prototype.toString,MT=e=>gA.call(e),xi=e=>MT(e).slice(8,-1),mA=e=>MT(e)==="[object Object]",Br=e=>pe(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,rT=gr(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),pT=e=>{const E=Object.create(null);return t=>E[t]||(E[t]=e(t))},wi=/-(\w)/g,AE=pT(e=>e.replace(wi,(E,t)=>t?t.toUpperCase():"")),Wi=/\B([A-Z])/g,nt=pT(e=>e.replace(Wi,"-$1").toLowerCase()),UT=pT(e=>e.charAt(0).toUpperCase()+e.slice(1)),XT=pT(e=>e?`on${UT(e)}`:""),VE=(e,E)=>!Object.is(e,E),$T=(e,E)=>{for(let t=0;t<e.length;t++)e[t](E)},iT=(e,E,t)=>{Object.defineProperty(e,E,{configurable:!0,enumerable:!1,value:t})},Xi=e=>{const E=parseFloat(e);return isNaN(E)?e:E};let Ds;const Tr=()=>Ds||(Ds=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function dT(e){if(z(e)){const E={};for(let t=0;t<e.length;t++){const T=e[t],r=pe(T)?ki(T):dT(T);if(r)for(const s in r)E[s]=r[s]}return E}else if(pe(e)||ce(e))return e}const $i=/;(?![^(]*\))/g,Ki=/:([^]+)/,Ji=/\/\*[^]*?\*\//g;function ki(e){const E={};return e.replace(Ji,"").split($i).forEach(t=>{if(t){const T=t.split(Ki);T.length>1&&(E[T[0].trim()]=T[1].trim())}}),E}function $e(e){let E="";if(pe(e))E=e;else if(z(e))for(let t=0;t<e.length;t++){const T=$e(e[t]);T&&(E+=T+" ")}else if(ce(e))for(const t in e)e[t]&&(E+=t+" ");return E.trim()}const ji="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",qi=gr(ji);function HA(e){return!!e||e===""}const Re=e=>pe(e)?e:e==null?"":z(e)||ce(e)&&(e.toString===gA||!Te(e.toString))?JSON.stringify(e,BA,2):String(e),BA=(e,E)=>E&&E.__v_isRef?BA(e,E.value):zE(E)?{[`Map(${E.size})`]:[...E.entries()].reduce((t,[T,r],s)=>(t[KT(T,s)+" =>"]=r,t),{})}:hA(E)?{[`Set(${E.size})`]:[...E.values()].map(t=>KT(t))}:At(E)?KT(E):ce(E)&&!z(E)&&!mA(E)?String(E):E,KT=(e,E="")=>{var t;return At(e)?`Symbol(${(t=e.description)!=null?t:E})`:e};let Xe;class bA{constructor(E=!1){this.detached=E,this._active=!0,this.effects=[],this.cleanups=[],this.parent=Xe,!E&&Xe&&(this.index=(Xe.scopes||(Xe.scopes=[])).push(this)-1)}get active(){return this._active}run(E){if(this._active){const t=Xe;try{return Xe=this,E()}finally{Xe=t}}}on(){Xe=this}off(){Xe=this.parent}stop(E){if(this._active){let t,T;for(t=0,T=this.effects.length;t<T;t++)this.effects[t].stop();for(t=0,T=this.cleanups.length;t<T;t++)this.cleanups[t]();if(this.scopes)for(t=0,T=this.scopes.length;t<T;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!E){const r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0,this._active=!1}}}function FA(e){return new bA(e)}function Qi(e,E=Xe){E&&E.active&&E.effects.push(e)}function yA(){return Xe}function Zi(e){Xe&&Xe.cleanups.push(e)}const br=e=>{const E=new Set(e);return E.w=0,E.n=0,E},vA=e=>(e.w&fE)>0,YA=e=>(e.n&fE)>0,zi=({deps:e})=>{if(e.length)for(let E=0;E<e.length;E++)e[E].w|=fE},eo=e=>{const{deps:E}=e;if(E.length){let t=0;for(let T=0;T<E.length;T++){const r=E[T];vA(r)&&!YA(r)?r.delete(e):E[t++]=r,r.w&=~fE,r.n&=~fE}E.length=t}},oT=new WeakMap;let Mt=0,fE=1;const rr=30;let Qe;const vE=Symbol(""),sr=Symbol("");class Fr{constructor(E,t=null,T){this.fn=E,this.scheduler=t,this.active=!0,this.deps=[],this.parent=void 0,Qi(this,T)}run(){if(!this.active)return this.fn();let E=Qe,t=uE;for(;E;){if(E===this)return;E=E.parent}try{return this.parent=Qe,Qe=this,uE=!0,fE=1<<++Mt,Mt<=rr?zi(this):fs(this),this.fn()}finally{Mt<=rr&&eo(this),fE=1<<--Mt,Qe=this.parent,uE=t,this.parent=void 0,this.deferStop&&this.stop()}}stop(){Qe===this?this.deferStop=!0:this.active&&(fs(this),this.onStop&&this.onStop(),this.active=!1)}}function fs(e){const{deps:E}=e;if(E.length){for(let t=0;t<E.length;t++)E[t].delete(e);E.length=0}}let uE=!0;const VA=[];function St(){VA.push(uE),uE=!1}function it(){const e=VA.pop();uE=e===void 0?!0:e}function we(e,E,t){if(uE&&Qe){let T=oT.get(e);T||oT.set(e,T=new Map);let r=T.get(t);r||T.set(t,r=br()),xA(r)}}function xA(e,E){let t=!1;Mt<=rr?YA(e)||(e.n|=fE,t=!vA(e)):t=!e.has(Qe),t&&(e.add(Qe),Qe.deps.push(e))}function oE(e,E,t,T,r,s){const R=oT.get(e);if(!R)return;let A=[];if(E==="clear")A=[...R.values()];else if(t==="length"&&z(e)){const S=Number(T);R.forEach((n,i)=>{(i==="length"||!At(i)&&i>=S)&&A.push(n)})}else switch(t!==void 0&&A.push(R.get(t)),E){case"add":z(e)?Br(t)&&A.push(R.get("length")):(A.push(R.get(vE)),zE(e)&&A.push(R.get(sr)));break;case"delete":z(e)||(A.push(R.get(vE)),zE(e)&&A.push(R.get(sr)));break;case"set":zE(e)&&A.push(R.get(vE));break}if(A.length===1)A[0]&&Rr(A[0]);else{const S=[];for(const n of A)n&&S.push(...n);Rr(br(S))}}function Rr(e,E){const t=z(e)?e:[...e];for(const T of t)T.computed&&Ms(T);for(const T of t)T.computed||Ms(T)}function Ms(e,E){(e!==Qe||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}function Eo(e,E){var t;return(t=oT.get(e))==null?void 0:t.get(E)}const to=gr("__proto__,__v_isRef,__isVue"),wA=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(At)),ps=To();function To(){const e={};return["includes","indexOf","lastIndexOf"].forEach(E=>{e[E]=function(...t){const T=oe(this);for(let s=0,R=this.length;s<R;s++)we(T,"get",s+"");const r=T[E](...t);return r===-1||r===!1?T[E](...t.map(oe)):r}}),["push","pop","shift","unshift","splice"].forEach(E=>{e[E]=function(...t){St();const T=oe(this)[E].apply(this,t);return it(),T}}),e}function ro(e){const E=oe(this);return we(E,"has",e),E.hasOwnProperty(e)}class WA{constructor(E=!1,t=!1){this._isReadonly=E,this._shallow=t}get(E,t,T){const r=this._isReadonly,s=this._shallow;if(t==="__v_isReactive")return!r;if(t==="__v_isReadonly")return r;if(t==="__v_isShallow")return s;if(t==="__v_raw")return T===(r?s?lo:JA:s?KA:$A).get(E)||Object.getPrototypeOf(E)===Object.getPrototypeOf(T)?E:void 0;const R=z(E);if(!r){if(R&&ie(ps,t))return Reflect.get(ps,t,T);if(t==="hasOwnProperty")return ro}const A=Reflect.get(E,t,T);return(At(t)?wA.has(t):to(t))||(r||we(E,"get",t),s)?A:Ue(A)?R&&Br(t)?A:A.value:ce(A)?r?kA(A):pE(A):A}}class XA extends WA{constructor(E=!1){super(!1,E)}set(E,t,T,r){let s=E[t];if(!this._shallow){const S=Tt(s);if(!OT(T)&&!Tt(T)&&(s=oe(s),T=oe(T)),!z(E)&&Ue(s)&&!Ue(T))return S?!1:(s.value=T,!0)}const R=z(E)&&Br(t)?Number(t)<E.length:ie(E,t),A=Reflect.set(E,t,T,r);return E===oe(r)&&(R?VE(T,s)&&oE(E,"set",t,T):oE(E,"add",t,T)),A}deleteProperty(E,t){const T=ie(E,t);E[t];const r=Reflect.deleteProperty(E,t);return r&&T&&oE(E,"delete",t,void 0),r}has(E,t){const T=Reflect.has(E,t);return(!At(t)||!wA.has(t))&&we(E,"has",t),T}ownKeys(E){return we(E,"iterate",z(E)?"length":vE),Reflect.ownKeys(E)}}class so extends WA{constructor(E=!1){super(!0,E)}set(E,t){return!0}deleteProperty(E,t){return!0}}const Ro=new XA,Ao=new so,no=new XA(!0),yr=e=>e,hT=e=>Reflect.getPrototypeOf(e);function Qt(e,E,t=!1,T=!1){e=e.__v_raw;const r=oe(e),s=oe(E);t||(VE(E,s)&&we(r,"get",E),we(r,"get",s));const{has:R}=hT(r),A=T?yr:t?Vr:yt;if(R.call(r,E))return A(e.get(E));if(R.call(r,s))return A(e.get(s));e!==r&&e.get(E)}function Zt(e,E=!1){const t=this.__v_raw,T=oe(t),r=oe(e);return E||(VE(e,r)&&we(T,"has",e),we(T,"has",r)),e===r?t.has(e):t.has(e)||t.has(r)}function zt(e,E=!1){return e=e.__v_raw,!E&&we(oe(e),"iterate",vE),Reflect.get(e,"size",e)}function Us(e){e=oe(e);const E=oe(this);return hT(E).has.call(E,e)||(E.add(e),oE(E,"add",e,e)),this}function ds(e,E){E=oe(E);const t=oe(this),{has:T,get:r}=hT(t);let s=T.call(t,e);s||(e=oe(e),s=T.call(t,e));const R=r.call(t,e);return t.set(e,E),s?VE(E,R)&&oE(t,"set",e,E):oE(t,"add",e,E),this}function hs(e){const E=oe(this),{has:t,get:T}=hT(E);let r=t.call(E,e);r||(e=oe(e),r=t.call(E,e)),T&&T.call(E,e);const s=E.delete(e);return r&&oE(E,"delete",e,void 0),s}function Gs(){const e=oe(this),E=e.size!==0,t=e.clear();return E&&oE(e,"clear",void 0,void 0),t}function eT(e,E){return function(T,r){const s=this,R=s.__v_raw,A=oe(R),S=E?yr:e?Vr:yt;return!e&&we(A,"iterate",vE),R.forEach((n,i)=>T.call(r,S(n),S(i),s))}}function ET(e,E,t){return function(...T){const r=this.__v_raw,s=oe(r),R=zE(s),A=e==="entries"||e===Symbol.iterator&&R,S=e==="keys"&&R,n=r[e](...T),i=t?yr:E?Vr:yt;return!E&&we(s,"iterate",S?sr:vE),{next(){const{value:O,done:I}=n.next();return I?{value:O,done:I}:{value:A?[i(O[0]),i(O[1])]:i(O),done:I}},[Symbol.iterator](){return this}}}}function aE(e){return function(...E){return e==="delete"?!1:e==="clear"?void 0:this}}function So(){const e={get(s){return Qt(this,s)},get size(){return zt(this)},has:Zt,add:Us,set:ds,delete:hs,clear:Gs,forEach:eT(!1,!1)},E={get(s){return Qt(this,s,!1,!0)},get size(){return zt(this)},has:Zt,add:Us,set:ds,delete:hs,clear:Gs,forEach:eT(!1,!0)},t={get(s){return Qt(this,s,!0)},get size(){return zt(this,!0)},has(s){return Zt.call(this,s,!0)},add:aE("add"),set:aE("set"),delete:aE("delete"),clear:aE("clear"),forEach:eT(!0,!1)},T={get(s){return Qt(this,s,!0,!0)},get size(){return zt(this,!0)},has(s){return Zt.call(this,s,!0)},add:aE("add"),set:aE("set"),delete:aE("delete"),clear:aE("clear"),forEach:eT(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(s=>{e[s]=ET(s,!1,!1),t[s]=ET(s,!0,!1),E[s]=ET(s,!1,!0),T[s]=ET(s,!0,!0)}),[e,t,E,T]}const[io,oo,Oo,Io]=So();function vr(e,E){const t=E?e?Io:Oo:e?oo:io;return(T,r,s)=>r==="__v_isReactive"?!e:r==="__v_isReadonly"?e:r==="__v_raw"?T:Reflect.get(ie(t,r)&&r in T?t:T,r,s)}const No={get:vr(!1,!1)},ao={get:vr(!1,!0)},_o={get:vr(!0,!1)},$A=new WeakMap,KA=new WeakMap,JA=new WeakMap,lo=new WeakMap;function Co(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Lo(e){return e.__v_skip||!Object.isExtensible(e)?0:Co(xi(e))}function pE(e){return Tt(e)?e:Yr(e,!1,Ro,No,$A)}function co(e){return Yr(e,!1,no,ao,KA)}function kA(e){return Yr(e,!0,Ao,_o,JA)}function Yr(e,E,t,T,r){if(!ce(e)||e.__v_raw&&!(E&&e.__v_isReactive))return e;const s=r.get(e);if(s)return s;const R=Lo(e);if(R===0)return e;const A=new Proxy(e,R===2?T:t);return r.set(e,A),A}function PE(e){return Tt(e)?PE(e.__v_raw):!!(e&&e.__v_isReactive)}function Tt(e){return!!(e&&e.__v_isReadonly)}function OT(e){return!!(e&&e.__v_isShallow)}function jA(e){return PE(e)||Tt(e)}function oe(e){const E=e&&e.__v_raw;return E?oe(E):e}function GT(e){return iT(e,"__v_skip",!0),e}const yt=e=>ce(e)?pE(e):e,Vr=e=>ce(e)?kA(e):e;function qA(e){uE&&Qe&&(e=oe(e),xA(e.dep||(e.dep=br())))}function QA(e,E){e=oe(e);const t=e.dep;t&&Rr(t)}function Ue(e){return!!(e&&e.__v_isRef===!0)}function cE(e){return uo(e,!1)}function uo(e,E){return Ue(e)?e:new Po(e,E)}class Po{constructor(E,t){this.__v_isShallow=t,this.dep=void 0,this.__v_isRef=!0,this._rawValue=t?E:oe(E),this._value=t?E:yt(E)}get value(){return qA(this),this._value}set value(E){const t=this.__v_isShallow||OT(E)||Tt(E);E=t?E:oe(E),VE(E,this._rawValue)&&(this._rawValue=E,this._value=t?E:yt(E),QA(this))}}function Ae(e){return Ue(e)?e.value:e}const Do={get:(e,E,t)=>Ae(Reflect.get(e,E,t)),set:(e,E,t,T)=>{const r=e[E];return Ue(r)&&!Ue(t)?(r.value=t,!0):Reflect.set(e,E,t,T)}};function ZA(e){return PE(e)?e:new Proxy(e,Do)}function fo(e){const E=z(e)?new Array(e.length):{};for(const t in e)E[t]=po(e,t);return E}class Mo{constructor(E,t,T){this._object=E,this._key=t,this._defaultValue=T,this.__v_isRef=!0}get value(){const E=this._object[this._key];return E===void 0?this._defaultValue:E}set value(E){this._object[this._key]=E}get dep(){return Eo(oe(this._object),this._key)}}function po(e,E,t){const T=e[E];return Ue(T)?T:new Mo(e,E,t)}class Uo{constructor(E,t,T,r){this._setter=t,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this._dirty=!0,this.effect=new Fr(E,()=>{this._dirty||(this._dirty=!0,QA(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!r,this.__v_isReadonly=T}get value(){const E=oe(this);return qA(E),(E._dirty||!E._cacheable)&&(E._dirty=!1,E._value=E.effect.run()),E._value}set value(E){this._setter(E)}}function ho(e,E,t=!1){let T,r;const s=Te(e);return s?(T=e,r=RE):(T=e.get,r=e.set),new Uo(T,r,s||!r,t)}function DE(e,E,t,T){let r;try{r=T?e(...T):e()}catch(s){gT(s,E,t)}return r}function ze(e,E,t,T){if(Te(e)){const s=DE(e,E,t,T);return s&&GA(s)&&s.catch(R=>{gT(R,E,t)}),s}const r=[];for(let s=0;s<e.length;s++)r.push(ze(e[s],E,t,T));return r}function gT(e,E,t,T=!0){const r=E?E.vnode:null;if(E){let s=E.parent;const R=E.proxy,A=t;for(;s;){const n=s.ec;if(n){for(let i=0;i<n.length;i++)if(n[i](e,R,A)===!1)return}s=s.parent}const S=E.appContext.config.errorHandler;if(S){DE(S,null,10,[e,R,A]);return}}Go(e,t,r,T)}function Go(e,E,t,T=!0){console.error(e)}let vt=!1,Ar=!1;const be=[];let rE=0;const et=[];let iE=null,bE=0;const zA=Promise.resolve();let xr=null;function en(e){const E=xr||zA;return e?E.then(this?e.bind(this):e):E}function go(e){let E=rE+1,t=be.length;for(;E<t;){const T=E+t>>>1,r=be[T],s=Yt(r);s<e||s===e&&r.pre?E=T+1:t=T}return E}function wr(e){(!be.length||!be.includes(e,vt&&e.allowRecurse?rE+1:rE))&&(e.id==null?be.push(e):be.splice(go(e.id),0,e),En())}function En(){!vt&&!Ar&&(Ar=!0,xr=zA.then(Tn))}function mo(e){const E=be.indexOf(e);E>rE&&be.splice(E,1)}function Ho(e){z(e)?et.push(...e):(!iE||!iE.includes(e,e.allowRecurse?bE+1:bE))&&et.push(e),En()}function gs(e,E,t=vt?rE+1:0){for(;t<be.length;t++){const T=be[t];if(T&&T.pre){if(e&&T.id!==e.uid)continue;be.splice(t,1),t--,T()}}}function tn(e){if(et.length){const E=[...new Set(et)];if(et.length=0,iE){iE.push(...E);return}for(iE=E,iE.sort((t,T)=>Yt(t)-Yt(T)),bE=0;bE<iE.length;bE++)iE[bE]();iE=null,bE=0}}const Yt=e=>e.id==null?1/0:e.id,Bo=(e,E)=>{const t=Yt(e)-Yt(E);if(t===0){if(e.pre&&!E.pre)return-1;if(E.pre&&!e.pre)return 1}return t};function Tn(e){Ar=!1,vt=!0,be.sort(Bo);try{for(rE=0;rE<be.length;rE++){const E=be[rE];E&&E.active!==!1&&DE(E,null,14)}}finally{rE=0,be.length=0,tn(),vt=!1,xr=null,(be.length||et.length)&&Tn()}}function bo(e,E,...t){if(e.isUnmounted)return;const T=e.vnode.props||Ce;let r=t;const s=E.startsWith("update:"),R=s&&E.slice(7);if(R&&R in T){const i=`${R==="modelValue"?"model":R}Modifiers`,{number:O,trim:I}=T[i]||Ce;I&&(r=t.map(D=>pe(D)?D.trim():D)),O&&(r=t.map(Xi))}let A,S=T[A=XT(E)]||T[A=XT(AE(E))];!S&&s&&(S=T[A=XT(nt(E))]),S&&ze(S,e,6,r);const n=T[A+"Once"];if(n){if(!e.emitted)e.emitted={};else if(e.emitted[A])return;e.emitted[A]=!0,ze(n,e,6,r)}}function rn(e,E,t=!1){const T=E.emitsCache,r=T.get(e);if(r!==void 0)return r;const s=e.emits;let R={},A=!1;if(!Te(e)){const S=n=>{const i=rn(n,E,!0);i&&(A=!0,He(R,i))};!t&&E.mixins.length&&E.mixins.forEach(S),e.extends&&S(e.extends),e.mixins&&e.mixins.forEach(S)}return!s&&!A?(ce(e)&&T.set(e,null),null):(z(s)?s.forEach(S=>R[S]=null):He(R,s),ce(e)&&T.set(e,R),R)}function mT(e,E){return!e||!fT(E)?!1:(E=E.slice(2).replace(/Once$/,""),ie(e,E[0].toLowerCase()+E.slice(1))||ie(e,nt(E))||ie(e,E))}let Fe=null,sn=null;function IT(e){const E=Fe;return Fe=e,sn=e&&e.type.__scopeId||null,E}function Ie(e,E=Fe,t){if(!E||e._n)return e;const T=(...r)=>{T._d&&Ws(-1);const s=IT(E);let R;try{R=e(...r)}finally{IT(s),T._d&&Ws(1)}return R};return T._n=!0,T._c=!0,T._d=!0,T}function JT(e){const{type:E,vnode:t,proxy:T,withProxy:r,props:s,propsOptions:[R],slots:A,attrs:S,emit:n,render:i,renderCache:O,data:I,setupState:D,ctx:d,inheritAttrs:b}=e;let x,$;const J=IT(e);try{if(t.shapeFlag&4){const v=r||T,re=v;x=TE(i.call(re,v,O,s,D,I,d)),$=S}else{const v=E;x=TE(v.length>1?v(s,{attrs:S,slots:A,emit:n}):v(s,null)),$=E.props?S:Fo(S)}}catch(v){mt.length=0,gT(v,e,1),x=Q(ME)}let V=x;if($&&b!==!1){const v=Object.keys($),{shapeFlag:re}=V;v.length&&re&7&&(R&&v.some(mr)&&($=yo($,R)),V=rt(V,$))}return t.dirs&&(V=rt(V),V.dirs=V.dirs?V.dirs.concat(t.dirs):t.dirs),t.transition&&(V.transition=t.transition),x=V,IT(J),x}const Fo=e=>{let E;for(const t in e)(t==="class"||t==="style"||fT(t))&&((E||(E={}))[t]=e[t]);return E},yo=(e,E)=>{const t={};for(const T in e)(!mr(T)||!(T.slice(9)in E))&&(t[T]=e[T]);return t};function vo(e,E,t){const{props:T,children:r,component:s}=e,{props:R,children:A,patchFlag:S}=E,n=s.emitsOptions;if(E.dirs||E.transition)return!0;if(t&&S>=0){if(S&1024)return!0;if(S&16)return T?ms(T,R,n):!!R;if(S&8){const i=E.dynamicProps;for(let O=0;O<i.length;O++){const I=i[O];if(R[I]!==T[I]&&!mT(n,I))return!0}}}else return(r||A)&&(!A||!A.$stable)?!0:T===R?!1:T?R?ms(T,R,n):!0:!!R;return!1}function ms(e,E,t){const T=Object.keys(E);if(T.length!==Object.keys(e).length)return!0;for(let r=0;r<T.length;r++){const s=T[r];if(E[s]!==e[s]&&!mT(t,s))return!0}return!1}function Yo({vnode:e,parent:E},t){for(;E&&E.subTree===e;)(e=E.vnode).el=t,E=E.parent}const Rn="components";function Xt(e,E){return xo(Rn,e,!0,E)||e}const Vo=Symbol.for("v-ndc");function xo(e,E,t=!0,T=!1){const r=Fe||ge;if(r){const s=r.type;if(e===Rn){const A=bO(s,!1);if(A&&(A===E||A===AE(E)||A===UT(AE(E))))return s}const R=Hs(r[e]||s[e],E)||Hs(r.appContext[e],E);return!R&&T?s:R}}function Hs(e,E){return e&&(e[E]||e[AE(E)]||e[UT(AE(E))])}const wo=e=>e.__isSuspense;function Wo(e,E){E&&E.pendingBranch?z(e)?E.effects.push(...e):E.effects.push(e):Ho(e)}const tT={};function Et(e,E,t){return An(e,E,t)}function An(e,E,{immediate:t,deep:T,flush:r,onTrack:s,onTrigger:R}=Ce){var A;const S=yA()===((A=ge)==null?void 0:A.scope)?ge:null;let n,i=!1,O=!1;if(Ue(e)?(n=()=>e.value,i=OT(e)):PE(e)?(n=()=>e,T=!0):z(e)?(O=!0,i=e.some(v=>PE(v)||OT(v)),n=()=>e.map(v=>{if(Ue(v))return v.value;if(PE(v))return QE(v);if(Te(v))return DE(v,S,2)})):Te(e)?E?n=()=>DE(e,S,2):n=()=>{if(!(S&&S.isUnmounted))return I&&I(),ze(e,S,3,[D])}:n=RE,E&&T){const v=n;n=()=>QE(v())}let I,D=v=>{I=J.onStop=()=>{DE(v,S,4),I=J.onStop=void 0}},d;if(wt)if(D=RE,E?t&&ze(E,S,3,[n(),O?[]:void 0,D]):n(),r==="sync"){const v=vO();d=v.__watcherHandles||(v.__watcherHandles=[])}else return RE;let b=O?new Array(e.length).fill(tT):tT;const x=()=>{if(J.active)if(E){const v=J.run();(T||i||(O?v.some((re,ue)=>VE(re,b[ue])):VE(v,b)))&&(I&&I(),ze(E,S,3,[v,b===tT?void 0:O&&b[0]===tT?[]:b,D]),b=v)}else J.run()};x.allowRecurse=!!E;let $;r==="sync"?$=x:r==="post"?$=()=>xe(x,S&&S.suspense):(x.pre=!0,S&&(x.id=S.uid),$=()=>wr(x));const J=new Fr(n,$);E?t?x():b=J.run():r==="post"?xe(J.run.bind(J),S&&S.suspense):J.run();const V=()=>{J.stop(),S&&S.scope&&Hr(S.scope.effects,J)};return d&&d.push(V),V}function Xo(e,E,t){const T=this.proxy,r=pe(e)?e.includes(".")?nn(T,e):()=>T[e]:e.bind(T,T);let s;Te(E)?s=E:(s=E.handler,t=E);const R=ge;st(this);const A=An(r,s.bind(T),t);return R?st(R):YE(),A}function nn(e,E){const t=E.split(".");return()=>{let T=e;for(let r=0;r<t.length&&T;r++)T=T[t[r]];return T}}function QE(e,E){if(!ce(e)||e.__v_skip||(E=E||new Set,E.has(e)))return e;if(E.add(e),Ue(e))QE(e.value,E);else if(z(e))for(let t=0;t<e.length;t++)QE(e[t],E);else if(hA(e)||zE(e))e.forEach(t=>{QE(t,E)});else if(mA(e))for(const t in e)QE(e[t],E);return e}function gE(e,E,t,T){const r=e.dirs,s=E&&E.dirs;for(let R=0;R<r.length;R++){const A=r[R];s&&(A.oldValue=s[R].value);let S=A.dir[T];S&&(St(),ze(S,t,8,[e.el,A,e,E]),it())}}/*! #__NO_SIDE_EFFECTS__ */function me(e,E){return Te(e)?He({name:e.name},E,{setup:e}):e}const dt=e=>!!e.type.__asyncLoader,Sn=e=>e.type.__isKeepAlive;function $o(e,E){on(e,"a",E)}function Ko(e,E){on(e,"da",E)}function on(e,E,t=ge){const T=e.__wdc||(e.__wdc=()=>{let r=t;for(;r;){if(r.isDeactivated)return;r=r.parent}return e()});if(HT(E,T,t),t){let r=t.parent;for(;r&&r.parent;)Sn(r.parent.vnode)&&Jo(T,E,t,r),r=r.parent}}function Jo(e,E,t,T){const r=HT(E,e,T,!0);In(()=>{Hr(T[E],r)},t)}function HT(e,E,t=ge,T=!1){if(t){const r=t[e]||(t[e]=[]),s=E.__weh||(E.__weh=(...R)=>{if(t.isUnmounted)return;St(),st(t);const A=ze(E,t,e,R);return YE(),it(),A});return T?r.unshift(s):r.push(s),s}}const IE=e=>(E,t=ge)=>(!wt||e==="sp")&&HT(e,(...T)=>E(...T),t),On=IE("bm"),Wr=IE("m"),ko=IE("bu"),jo=IE("u"),qo=IE("bum"),In=IE("um"),Qo=IE("sp"),Zo=IE("rtg"),zo=IE("rtc");function eO(e,E=ge){HT("ec",e,E)}function Je(e,E,t,T){let r;const s=t&&t[T];if(z(e)||pe(e)){r=new Array(e.length);for(let R=0,A=e.length;R<A;R++)r[R]=E(e[R],R,void 0,s&&s[R])}else if(typeof e=="number"){r=new Array(e);for(let R=0;R<e;R++)r[R]=E(R+1,R,void 0,s&&s[R])}else if(ce(e))if(e[Symbol.iterator])r=Array.from(e,(R,A)=>E(R,A,void 0,s&&s[A]));else{const R=Object.keys(e);r=new Array(R.length);for(let A=0,S=R.length;A<S;A++){const n=R[A];r[A]=E(e[n],n,A,s&&s[A])}}else r=[];return t&&(t[T]=r),r}function $t(e,E,t={},T,r){if(Fe.isCE||Fe.parent&&dt(Fe.parent)&&Fe.parent.isCE)return E!=="default"&&(t.name=E),Q("slot",t,T&&T());let s=e[E];s&&s._c&&(s._d=!1),B();const R=s&&Nn(s(t)),A=fe(Le,{key:t.key||R&&R.key||`_${E}`},R||(T?T():[]),R&&e._===1?64:-2);return!r&&A.scopeId&&(A.slotScopeIds=[A.scopeId+"-s"]),s&&s._c&&(s._d=!0),A}function Nn(e){return e.some(E=>aT(E)?!(E.type===ME||E.type===Le&&!Nn(E.children)):!0)?e:null}const nr=e=>e?Mn(e)?jr(e)||e.proxy:nr(e.parent):null,ht=He(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>nr(e.parent),$root:e=>nr(e.root),$emit:e=>e.emit,$options:e=>Xr(e),$forceUpdate:e=>e.f||(e.f=()=>wr(e.update)),$nextTick:e=>e.n||(e.n=en.bind(e.proxy)),$watch:e=>Xo.bind(e)}),kT=(e,E)=>e!==Ce&&!e.__isScriptSetup&&ie(e,E),EO={get({_:e},E){const{ctx:t,setupState:T,data:r,props:s,accessCache:R,type:A,appContext:S}=e;let n;if(E[0]!=="$"){const D=R[E];if(D!==void 0)switch(D){case 1:return T[E];case 2:return r[E];case 4:return t[E];case 3:return s[E]}else{if(kT(T,E))return R[E]=1,T[E];if(r!==Ce&&ie(r,E))return R[E]=2,r[E];if((n=e.propsOptions[0])&&ie(n,E))return R[E]=3,s[E];if(t!==Ce&&ie(t,E))return R[E]=4,t[E];Sr&&(R[E]=0)}}const i=ht[E];let O,I;if(i)return E==="$attrs"&&we(e,"get",E),i(e);if((O=A.__cssModules)&&(O=O[E]))return O;if(t!==Ce&&ie(t,E))return R[E]=4,t[E];if(I=S.config.globalProperties,ie(I,E))return I[E]},set({_:e},E,t){const{data:T,setupState:r,ctx:s}=e;return kT(r,E)?(r[E]=t,!0):T!==Ce&&ie(T,E)?(T[E]=t,!0):ie(e.props,E)||E[0]==="$"&&E.slice(1)in e?!1:(s[E]=t,!0)},has({_:{data:e,setupState:E,accessCache:t,ctx:T,appContext:r,propsOptions:s}},R){let A;return!!t[R]||e!==Ce&&ie(e,R)||kT(E,R)||(A=s[0])&&ie(A,R)||ie(T,R)||ie(ht,R)||ie(r.config.globalProperties,R)},defineProperty(e,E,t){return t.get!=null?e._.accessCache[E]=0:ie(t,"value")&&this.set(e,E,t.value,null),Reflect.defineProperty(e,E,t)}};function Bs(e){return z(e)?e.reduce((E,t)=>(E[t]=null,E),{}):e}let Sr=!0;function tO(e){const E=Xr(e),t=e.proxy,T=e.ctx;Sr=!1,E.beforeCreate&&bs(E.beforeCreate,e,"bc");const{data:r,computed:s,methods:R,watch:A,provide:S,inject:n,created:i,beforeMount:O,mounted:I,beforeUpdate:D,updated:d,activated:b,deactivated:x,beforeDestroy:$,beforeUnmount:J,destroyed:V,unmounted:v,render:re,renderTracked:ue,renderTriggered:ne,errorCaptured:ee,serverPrefetch:k,expose:_,inheritAttrs:c,components:C,directives:y,filters:K}=E;if(n&&TO(n,T,null),R)for(const L in R){const G=R[L];Te(G)&&(T[L]=G.bind(t))}if(r){const L=r.call(t,t);ce(L)&&(e.data=pE(L))}if(Sr=!0,s)for(const L in s){const G=s[L],Ee=Te(G)?G.bind(t,t):Te(G.get)?G.get.bind(t,t):RE,Oe=!Te(G)&&Te(G.set)?G.set.bind(t):RE,Ne=sE({get:Ee,set:Oe});Object.defineProperty(T,L,{enumerable:!0,configurable:!0,get:()=>Ne.value,set:De=>Ne.value=De})}if(A)for(const L in A)an(A[L],T,t,L);if(S){const L=Te(S)?S.call(t):S;Reflect.ownKeys(L).forEach(G=>{SO(G,L[G])})}i&&bs(i,e,"c");function Z(L,G){z(G)?G.forEach(Ee=>L(Ee.bind(t))):G&&L(G.bind(t))}if(Z(On,O),Z(Wr,I),Z(ko,D),Z(jo,d),Z($o,b),Z(Ko,x),Z(eO,ee),Z(zo,ue),Z(Zo,ne),Z(qo,J),Z(In,v),Z(Qo,k),z(_))if(_.length){const L=e.exposed||(e.exposed={});_.forEach(G=>{Object.defineProperty(L,G,{get:()=>t[G],set:Ee=>t[G]=Ee})})}else e.exposed||(e.exposed={});re&&e.render===RE&&(e.render=re),c!=null&&(e.inheritAttrs=c),C&&(e.components=C),y&&(e.directives=y)}function TO(e,E,t=RE){z(e)&&(e=ir(e));for(const T in e){const r=e[T];let s;ce(r)?"default"in r?s=Gt(r.from||T,r.default,!0):s=Gt(r.from||T):s=Gt(r),Ue(s)?Object.defineProperty(E,T,{enumerable:!0,configurable:!0,get:()=>s.value,set:R=>s.value=R}):E[T]=s}}function bs(e,E,t){ze(z(e)?e.map(T=>T.bind(E.proxy)):e.bind(E.proxy),E,t)}function an(e,E,t,T){const r=T.includes(".")?nn(t,T):()=>t[T];if(pe(e)){const s=E[e];Te(s)&&Et(r,s)}else if(Te(e))Et(r,e.bind(t));else if(ce(e))if(z(e))e.forEach(s=>an(s,E,t,T));else{const s=Te(e.handler)?e.handler.bind(t):E[e.handler];Te(s)&&Et(r,s,e)}}function Xr(e){const E=e.type,{mixins:t,extends:T}=E,{mixins:r,optionsCache:s,config:{optionMergeStrategies:R}}=e.appContext,A=s.get(E);let S;return A?S=A:!r.length&&!t&&!T?S=E:(S={},r.length&&r.forEach(n=>NT(S,n,R,!0)),NT(S,E,R)),ce(E)&&s.set(E,S),S}function NT(e,E,t,T=!1){const{mixins:r,extends:s}=E;s&&NT(e,s,t,!0),r&&r.forEach(R=>NT(e,R,t,!0));for(const R in E)if(!(T&&R==="expose")){const A=rO[R]||t&&t[R];e[R]=A?A(e[R],E[R]):E[R]}return e}const rO={data:Fs,props:ys,emits:ys,methods:pt,computed:pt,beforeCreate:ve,created:ve,beforeMount:ve,mounted:ve,beforeUpdate:ve,updated:ve,beforeDestroy:ve,beforeUnmount:ve,destroyed:ve,unmounted:ve,activated:ve,deactivated:ve,errorCaptured:ve,serverPrefetch:ve,components:pt,directives:pt,watch:RO,provide:Fs,inject:sO};function Fs(e,E){return E?e?function(){return He(Te(e)?e.call(this,this):e,Te(E)?E.call(this,this):E)}:E:e}function sO(e,E){return pt(ir(e),ir(E))}function ir(e){if(z(e)){const E={};for(let t=0;t<e.length;t++)E[e[t]]=e[t];return E}return e}function ve(e,E){return e?[...new Set([].concat(e,E))]:E}function pt(e,E){return e?He(Object.create(null),e,E):E}function ys(e,E){return e?z(e)&&z(E)?[...new Set([...e,...E])]:He(Object.create(null),Bs(e),Bs(E??{})):E}function RO(e,E){if(!e)return E;if(!E)return e;const t=He(Object.create(null),e);for(const T in E)t[T]=ve(e[T],E[T]);return t}function _n(){return{app:null,config:{isNativeTag:Yi,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let AO=0;function nO(e,E){return function(T,r=null){Te(T)||(T=He({},T)),r!=null&&!ce(r)&&(r=null);const s=_n(),R=new WeakSet;let A=!1;const S=s.app={_uid:AO++,_component:T,_props:r,_container:null,_context:s,_instance:null,version:YO,get config(){return s.config},set config(n){},use(n,...i){return R.has(n)||(n&&Te(n.install)?(R.add(n),n.install(S,...i)):Te(n)&&(R.add(n),n(S,...i))),S},mixin(n){return s.mixins.includes(n)||s.mixins.push(n),S},component(n,i){return i?(s.components[n]=i,S):s.components[n]},directive(n,i){return i?(s.directives[n]=i,S):s.directives[n]},mount(n,i,O){if(!A){const I=Q(T,r);return I.appContext=s,i&&E?E(I,n):e(I,n,O),A=!0,S._container=n,n.__vue_app__=S,jr(I.component)||I.component.proxy}},unmount(){A&&(e(null,S._container),delete S._container.__vue_app__)},provide(n,i){return s.provides[n]=i,S},runWithContext(n){Vt=S;try{return n()}finally{Vt=null}}};return S}}let Vt=null;function SO(e,E){if(ge){let t=ge.provides;const T=ge.parent&&ge.parent.provides;T===t&&(t=ge.provides=Object.create(T)),t[e]=E}}function Gt(e,E,t=!1){const T=ge||Fe;if(T||Vt){const r=T?T.parent==null?T.vnode.appContext&&T.vnode.appContext.provides:T.parent.provides:Vt._context.provides;if(r&&e in r)return r[e];if(arguments.length>1)return t&&Te(E)?E.call(T&&T.proxy):E}}function iO(){return!!(ge||Fe||Vt)}function oO(e,E,t,T=!1){const r={},s={};iT(s,bT,1),e.propsDefaults=Object.create(null),ln(e,E,r,s);for(const R in e.propsOptions[0])R in r||(r[R]=void 0);t?e.props=T?r:co(r):e.type.props?e.props=r:e.props=s,e.attrs=s}function OO(e,E,t,T){const{props:r,attrs:s,vnode:{patchFlag:R}}=e,A=oe(r),[S]=e.propsOptions;let n=!1;if((T||R>0)&&!(R&16)){if(R&8){const i=e.vnode.dynamicProps;for(let O=0;O<i.length;O++){let I=i[O];if(mT(e.emitsOptions,I))continue;const D=E[I];if(S)if(ie(s,I))D!==s[I]&&(s[I]=D,n=!0);else{const d=AE(I);r[d]=or(S,A,d,D,e,!1)}else D!==s[I]&&(s[I]=D,n=!0)}}}else{ln(e,E,r,s)&&(n=!0);let i;for(const O in A)(!E||!ie(E,O)&&((i=nt(O))===O||!ie(E,i)))&&(S?t&&(t[O]!==void 0||t[i]!==void 0)&&(r[O]=or(S,A,O,void 0,e,!0)):delete r[O]);if(s!==A)for(const O in s)(!E||!ie(E,O))&&(delete s[O],n=!0)}n&&oE(e,"set","$attrs")}function ln(e,E,t,T){const[r,s]=e.propsOptions;let R=!1,A;if(E)for(let S in E){if(rT(S))continue;const n=E[S];let i;r&&ie(r,i=AE(S))?!s||!s.includes(i)?t[i]=n:(A||(A={}))[i]=n:mT(e.emitsOptions,S)||(!(S in T)||n!==T[S])&&(T[S]=n,R=!0)}if(s){const S=oe(t),n=A||Ce;for(let i=0;i<s.length;i++){const O=s[i];t[O]=or(r,S,O,n[O],e,!ie(n,O))}}return R}function or(e,E,t,T,r,s){const R=e[t];if(R!=null){const A=ie(R,"default");if(A&&T===void 0){const S=R.default;if(R.type!==Function&&!R.skipFactory&&Te(S)){const{propsDefaults:n}=r;t in n?T=n[t]:(st(r),T=n[t]=S.call(null,E),YE())}else T=S}R[0]&&(s&&!A?T=!1:R[1]&&(T===""||T===nt(t))&&(T=!0))}return T}function Cn(e,E,t=!1){const T=E.propsCache,r=T.get(e);if(r)return r;const s=e.props,R={},A=[];let S=!1;if(!Te(e)){const i=O=>{S=!0;const[I,D]=Cn(O,E,!0);He(R,I),D&&A.push(...D)};!t&&E.mixins.length&&E.mixins.forEach(i),e.extends&&i(e.extends),e.mixins&&e.mixins.forEach(i)}if(!s&&!S)return ce(e)&&T.set(e,ZE),ZE;if(z(s))for(let i=0;i<s.length;i++){const O=AE(s[i]);vs(O)&&(R[O]=Ce)}else if(s)for(const i in s){const O=AE(i);if(vs(O)){const I=s[i],D=R[O]=z(I)||Te(I)?{type:I}:He({},I);if(D){const d=xs(Boolean,D.type),b=xs(String,D.type);D[0]=d>-1,D[1]=b<0||d<b,(d>-1||ie(D,"default"))&&A.push(O)}}}const n=[R,A];return ce(e)&&T.set(e,n),n}function vs(e){return e[0]!=="$"}function Ys(e){const E=e&&e.toString().match(/^\s*(function|class) (\w+)/);return E?E[2]:e===null?"null":""}function Vs(e,E){return Ys(e)===Ys(E)}function xs(e,E){return z(E)?E.findIndex(t=>Vs(t,e)):Te(E)&&Vs(E,e)?0:-1}const Ln=e=>e[0]==="_"||e==="$stable",$r=e=>z(e)?e.map(TE):[TE(e)],IO=(e,E,t)=>{if(E._n)return E;const T=Ie((...r)=>$r(E(...r)),t);return T._c=!1,T},cn=(e,E,t)=>{const T=e._ctx;for(const r in e){if(Ln(r))continue;const s=e[r];if(Te(s))E[r]=IO(r,s,T);else if(s!=null){const R=$r(s);E[r]=()=>R}}},un=(e,E)=>{const t=$r(E);e.slots.default=()=>t},NO=(e,E)=>{if(e.vnode.shapeFlag&32){const t=E._;t?(e.slots=oe(E),iT(E,"_",t)):cn(E,e.slots={})}else e.slots={},E&&un(e,E);iT(e.slots,bT,1)},aO=(e,E,t)=>{const{vnode:T,slots:r}=e;let s=!0,R=Ce;if(T.shapeFlag&32){const A=E._;A?t&&A===1?s=!1:(He(r,E),!t&&A===1&&delete r._):(s=!E.$stable,cn(E,r)),R=E}else E&&(un(e,E),R={default:1});if(s)for(const A in r)!Ln(A)&&R[A]==null&&delete r[A]};function Or(e,E,t,T,r=!1){if(z(e)){e.forEach((I,D)=>Or(I,E&&(z(E)?E[D]:E),t,T,r));return}if(dt(T)&&!r)return;const s=T.shapeFlag&4?jr(T.component)||T.component.proxy:T.el,R=r?null:s,{i:A,r:S}=e,n=E&&E.r,i=A.refs===Ce?A.refs={}:A.refs,O=A.setupState;if(n!=null&&n!==S&&(pe(n)?(i[n]=null,ie(O,n)&&(O[n]=null)):Ue(n)&&(n.value=null)),Te(S))DE(S,A,12,[R,i]);else{const I=pe(S),D=Ue(S);if(I||D){const d=()=>{if(e.f){const b=I?ie(O,S)?O[S]:i[S]:S.value;r?z(b)&&Hr(b,s):z(b)?b.includes(s)||b.push(s):I?(i[S]=[s],ie(O,S)&&(O[S]=i[S])):(S.value=[s],e.k&&(i[e.k]=S.value))}else I?(i[S]=R,ie(O,S)&&(O[S]=R)):D&&(S.value=R,e.k&&(i[e.k]=R))};R?(d.id=-1,xe(d,t)):d()}}}const xe=Wo;function _O(e){return lO(e)}function lO(e,E){const t=Tr();t.__VUE__=!0;const{insert:T,remove:r,patchProp:s,createElement:R,createText:A,createComment:S,setText:n,setElementText:i,parentNode:O,nextSibling:I,setScopeId:D=RE,insertStaticContent:d}=e,b=(o,N,l,f=null,P=null,g=null,F=!1,a=null,m=!!N.dynamicChildren)=>{if(o===N)return;o&&!ut(o,N)&&(f=hE(o),De(o,P,g,!0),o=null),N.patchFlag===-2&&(m=!1,N.dynamicChildren=null);const{type:u,ref:H,shapeFlag:Y}=N;switch(u){case BT:x(o,N,l,f);break;case ME:$(o,N,l,f);break;case jT:o==null&&J(N,l,f,F);break;case Le:C(o,N,l,f,P,g,F,a,m);break;default:Y&1?re(o,N,l,f,P,g,F,a,m):Y&6?y(o,N,l,f,P,g,F,a,m):(Y&64||Y&128)&&u.process(o,N,l,f,P,g,F,a,m,SE)}H!=null&&P&&Or(H,o&&o.ref,g,N||o,!N)},x=(o,N,l,f)=>{if(o==null)T(N.el=A(N.children),l,f);else{const P=N.el=o.el;N.children!==o.children&&n(P,N.children)}},$=(o,N,l,f)=>{o==null?T(N.el=S(N.children||""),l,f):N.el=o.el},J=(o,N,l,f)=>{[o.el,o.anchor]=d(o.children,N,l,f,o.el,o.anchor)},V=({el:o,anchor:N},l,f)=>{let P;for(;o&&o!==N;)P=I(o),T(o,l,f),o=P;T(N,l,f)},v=({el:o,anchor:N})=>{let l;for(;o&&o!==N;)l=I(o),r(o),o=l;r(N)},re=(o,N,l,f,P,g,F,a,m)=>{F=F||N.type==="svg",o==null?ue(N,l,f,P,g,F,a,m):k(o,N,P,g,F,a,m)},ue=(o,N,l,f,P,g,F,a)=>{let m,u;const{type:H,props:Y,shapeFlag:w,transition:q,dirs:se}=o;if(m=o.el=R(o.type,g,Y&&Y.is,Y),w&8?i(m,o.children):w&16&&ee(o.children,m,null,f,P,g&&H!=="foreignObject",F,a),se&&gE(o,null,f,"created"),ne(m,o,o.scopeId,F,f),Y){for(const h in Y)h!=="value"&&!rT(h)&&s(m,h,null,Y[h],g,o.children,f,P,Me);"value"in Y&&s(m,"value",null,Y.value),(u=Y.onVnodeBeforeMount)&&tE(u,f,o)}se&&gE(o,null,f,"beforeMount");const p=CO(P,q);p&&q.beforeEnter(m),T(m,N,l),((u=Y&&Y.onVnodeMounted)||p||se)&&xe(()=>{u&&tE(u,f,o),p&&q.enter(m),se&&gE(o,null,f,"mounted")},P)},ne=(o,N,l,f,P)=>{if(l&&D(o,l),f)for(let g=0;g<f.length;g++)D(o,f[g]);if(P){let g=P.subTree;if(N===g){const F=P.vnode;ne(o,F,F.scopeId,F.slotScopeIds,P.parent)}}},ee=(o,N,l,f,P,g,F,a,m=0)=>{for(let u=m;u<o.length;u++){const H=o[u]=a?CE(o[u]):TE(o[u]);b(null,H,N,l,f,P,g,F,a)}},k=(o,N,l,f,P,g,F)=>{const a=N.el=o.el;let{patchFlag:m,dynamicChildren:u,dirs:H}=N;m|=o.patchFlag&16;const Y=o.props||Ce,w=N.props||Ce;let q;l&&mE(l,!1),(q=w.onVnodeBeforeUpdate)&&tE(q,l,N,o),H&&gE(N,o,l,"beforeUpdate"),l&&mE(l,!0);const se=P&&N.type!=="foreignObject";if(u?_(o.dynamicChildren,u,a,l,f,se,g):F||G(o,N,a,null,l,f,se,g,!1),m>0){if(m&16)c(a,N,Y,w,l,f,P);else if(m&2&&Y.class!==w.class&&s(a,"class",null,w.class,P),m&4&&s(a,"style",Y.style,w.style,P),m&8){const p=N.dynamicProps;for(let h=0;h<p.length;h++){const W=p[h],te=Y[W],Pe=w[W];(Pe!==te||W==="value")&&s(a,W,te,Pe,P,o.children,l,f,Me)}}m&1&&o.children!==N.children&&i(a,N.children)}else!F&&u==null&&c(a,N,Y,w,l,f,P);((q=w.onVnodeUpdated)||H)&&xe(()=>{q&&tE(q,l,N,o),H&&gE(N,o,l,"updated")},f)},_=(o,N,l,f,P,g,F)=>{for(let a=0;a<N.length;a++){const m=o[a],u=N[a],H=m.el&&(m.type===Le||!ut(m,u)||m.shapeFlag&70)?O(m.el):l;b(m,u,H,null,f,P,g,F,!0)}},c=(o,N,l,f,P,g,F)=>{if(l!==f){if(l!==Ce)for(const a in l)!rT(a)&&!(a in f)&&s(o,a,l[a],null,F,N.children,P,g,Me);for(const a in f){if(rT(a))continue;const m=f[a],u=l[a];m!==u&&a!=="value"&&s(o,a,u,m,F,N.children,P,g,Me)}"value"in f&&s(o,"value",l.value,f.value)}},C=(o,N,l,f,P,g,F,a,m)=>{const u=N.el=o?o.el:A(""),H=N.anchor=o?o.anchor:A("");let{patchFlag:Y,dynamicChildren:w,slotScopeIds:q}=N;q&&(a=a?a.concat(q):q),o==null?(T(u,l,f),T(H,l,f),ee(N.children,l,H,P,g,F,a,m)):Y>0&&Y&64&&w&&o.dynamicChildren?(_(o.dynamicChildren,w,l,P,g,F,a),(N.key!=null||P&&N===P.subTree)&&Kr(o,N,!0)):G(o,N,l,H,P,g,F,a,m)},y=(o,N,l,f,P,g,F,a,m)=>{N.slotScopeIds=a,o==null?N.shapeFlag&512?P.ctx.activate(N,l,f,F,m):K(N,l,f,P,g,F,m):_e(o,N,m)},K=(o,N,l,f,P,g,F)=>{const a=o.component=GO(o,f,P);if(Sn(o)&&(a.ctx.renderer=SE),gO(a),a.asyncDep){if(P&&P.registerDep(a,Z),!o.el){const m=a.subTree=Q(ME);$(null,m,N,l)}return}Z(a,o,N,l,P,g,F)},_e=(o,N,l)=>{const f=N.component=o.component;if(vo(o,N,l))if(f.asyncDep&&!f.asyncResolved){L(f,N,l);return}else f.next=N,mo(f.update),f.update();else N.el=o.el,f.vnode=N},Z=(o,N,l,f,P,g,F)=>{const a=()=>{if(o.isMounted){let{next:H,bu:Y,u:w,parent:q,vnode:se}=o,p=H,h;mE(o,!1),H?(H.el=se.el,L(o,H,F)):H=se,Y&&$T(Y),(h=H.props&&H.props.onVnodeBeforeUpdate)&&tE(h,q,H,se),mE(o,!0);const W=JT(o),te=o.subTree;o.subTree=W,b(te,W,O(te.el),hE(te),o,P,g),H.el=W.el,p===null&&Yo(o,W.el),w&&xe(w,P),(h=H.props&&H.props.onVnodeUpdated)&&xe(()=>tE(h,q,H,se),P)}else{let H;const{el:Y,props:w}=N,{bm:q,m:se,parent:p}=o,h=dt(N);if(mE(o,!1),q&&$T(q),!h&&(H=w&&w.onVnodeBeforeMount)&&tE(H,p,N),mE(o,!0),Y&&ct){const W=()=>{o.subTree=JT(o),ct(Y,o.subTree,o,P,null)};h?N.type.__asyncLoader().then(()=>!o.isUnmounted&&W()):W()}else{const W=o.subTree=JT(o);b(null,W,l,f,o,P,g),N.el=W.el}if(se&&xe(se,P),!h&&(H=w&&w.onVnodeMounted)){const W=N;xe(()=>tE(H,p,W),P)}(N.shapeFlag&256||p&&dt(p.vnode)&&p.vnode.shapeFlag&256)&&o.a&&xe(o.a,P),o.isMounted=!0,N=l=f=null}},m=o.effect=new Fr(a,()=>wr(u),o.scope),u=o.update=()=>m.run();u.id=o.uid,mE(o,!0),u()},L=(o,N,l)=>{N.component=o;const f=o.vnode.props;o.vnode=N,o.next=null,OO(o,N.props,f,l),aO(o,N.children,l),St(),gs(o),it()},G=(o,N,l,f,P,g,F,a,m=!1)=>{const u=o&&o.children,H=o?o.shapeFlag:0,Y=N.children,{patchFlag:w,shapeFlag:q}=N;if(w>0){if(w&128){Oe(u,Y,l,f,P,g,F,a,m);return}else if(w&256){Ee(u,Y,l,f,P,g,F,a,m);return}}q&8?(H&16&&Me(u,P,g),Y!==u&&i(l,Y)):H&16?q&16?Oe(u,Y,l,f,P,g,F,a,m):Me(u,P,g,!0):(H&8&&i(l,""),q&16&&ee(Y,l,f,P,g,F,a,m))},Ee=(o,N,l,f,P,g,F,a,m)=>{o=o||ZE,N=N||ZE;const u=o.length,H=N.length,Y=Math.min(u,H);let w;for(w=0;w<Y;w++){const q=N[w]=m?CE(N[w]):TE(N[w]);b(o[w],q,l,null,P,g,F,a,m)}u>H?Me(o,P,g,!0,!1,Y):ee(N,l,f,P,g,F,a,m,Y)},Oe=(o,N,l,f,P,g,F,a,m)=>{let u=0;const H=N.length;let Y=o.length-1,w=H-1;for(;u<=Y&&u<=w;){const q=o[u],se=N[u]=m?CE(N[u]):TE(N[u]);if(ut(q,se))b(q,se,l,null,P,g,F,a,m);else break;u++}for(;u<=Y&&u<=w;){const q=o[Y],se=N[w]=m?CE(N[w]):TE(N[w]);if(ut(q,se))b(q,se,l,null,P,g,F,a,m);else break;Y--,w--}if(u>Y){if(u<=w){const q=w+1,se=q<H?N[q].el:f;for(;u<=w;)b(null,N[u]=m?CE(N[u]):TE(N[u]),l,se,P,g,F,a,m),u++}}else if(u>w)for(;u<=Y;)De(o[u],P,g,!0),u++;else{const q=u,se=u,p=new Map;for(u=se;u<=w;u++){const We=N[u]=m?CE(N[u]):TE(N[u]);We.key!=null&&p.set(We.key,u)}let h,W=0;const te=w-se+1;let Pe=!1,Ke=0;const GE=new Array(te);for(u=0;u<te;u++)GE[u]=0;for(u=q;u<=Y;u++){const We=o[u];if(W>=te){De(We,P,g,!0);continue}let EE;if(We.key!=null)EE=p.get(We.key);else for(h=se;h<=w;h++)if(GE[h-se]===0&&ut(We,N[h])){EE=h;break}EE===void 0?De(We,P,g,!0):(GE[EE-se]=u+1,EE>=Ke?Ke=EE:Pe=!0,b(We,N[EE],l,null,P,g,F,a,m),W++)}const jt=Pe?LO(GE):ZE;for(h=jt.length-1,u=te-1;u>=0;u--){const We=se+u,EE=N[We],as=We+1<H?N[We+1].el:f;GE[u]===0?b(null,EE,l,as,P,g,F,a,m):Pe&&(h<0||u!==jt[h]?Ne(EE,l,as,2):h--)}}},Ne=(o,N,l,f,P=null)=>{const{el:g,type:F,transition:a,children:m,shapeFlag:u}=o;if(u&6){Ne(o.component.subTree,N,l,f);return}if(u&128){o.suspense.move(N,l,f);return}if(u&64){F.move(o,N,l,SE);return}if(F===Le){T(g,N,l);for(let Y=0;Y<m.length;Y++)Ne(m[Y],N,l,f);T(o.anchor,N,l);return}if(F===jT){V(o,N,l);return}if(f!==2&&u&1&&a)if(f===0)a.beforeEnter(g),T(g,N,l),xe(()=>a.enter(g),P);else{const{leave:Y,delayLeave:w,afterLeave:q}=a,se=()=>T(g,N,l),p=()=>{Y(g,()=>{se(),q&&q()})};w?w(g,se,p):p()}else T(g,N,l)},De=(o,N,l,f=!1,P=!1)=>{const{type:g,props:F,ref:a,children:m,dynamicChildren:u,shapeFlag:H,patchFlag:Y,dirs:w}=o;if(a!=null&&Or(a,null,l,o,!0),H&256){N.ctx.deactivate(o);return}const q=H&1&&w,se=!dt(o);let p;if(se&&(p=F&&F.onVnodeBeforeUnmount)&&tE(p,N,o),H&6)ye(o.component,l,f);else{if(H&128){o.suspense.unmount(l,f);return}q&&gE(o,null,N,"beforeUnmount"),H&64?o.type.remove(o,N,l,P,SE,f):u&&(g!==Le||Y>0&&Y&64)?Me(u,N,l,!1,!0):(g===Le&&Y&384||!P&&H&16)&&Me(m,N,l),f&&ke(o)}(se&&(p=F&&F.onVnodeUnmounted)||q)&&xe(()=>{p&&tE(p,N,o),q&&gE(o,null,N,"unmounted")},l)},ke=o=>{const{type:N,el:l,anchor:f,transition:P}=o;if(N===Le){$E(l,f);return}if(N===jT){v(o);return}const g=()=>{r(l),P&&!P.persisted&&P.afterLeave&&P.afterLeave()};if(o.shapeFlag&1&&P&&!P.persisted){const{leave:F,delayLeave:a}=P,m=()=>F(l,g);a?a(o.el,g,m):m()}else g()},$E=(o,N)=>{let l;for(;o!==N;)l=I(o),r(o),o=l;r(N)},ye=(o,N,l)=>{const{bum:f,scope:P,update:g,subTree:F,um:a}=o;f&&$T(f),P.stop(),g&&(g.active=!1,De(F,o,N,l)),a&&xe(a,N),xe(()=>{o.isUnmounted=!0},N),N&&N.pendingBranch&&!N.isUnmounted&&o.asyncDep&&!o.asyncResolved&&o.suspenseId===N.pendingId&&(N.deps--,N.deps===0&&N.resolve())},Me=(o,N,l,f=!1,P=!1,g=0)=>{for(let F=g;F<o.length;F++)De(o[F],N,l,f,P)},hE=o=>o.shapeFlag&6?hE(o.component.subTree):o.shapeFlag&128?o.suspense.next():I(o.anchor||o.el),Ct=(o,N,l)=>{o==null?N._vnode&&De(N._vnode,null,null,!0):b(N._vnode||null,o,N,null,null,null,l),gs(),tn(),N._vnode=o},SE={p:b,um:De,m:Ne,r:ke,mt:K,mc:ee,pc:G,pbc:_,n:hE,o:e};let Lt,ct;return E&&([Lt,ct]=E(SE)),{render:Ct,hydrate:Lt,createApp:nO(Ct,Lt)}}function mE({effect:e,update:E},t){e.allowRecurse=E.allowRecurse=t}function CO(e,E){return(!e||e&&!e.pendingBranch)&&E&&!E.persisted}function Kr(e,E,t=!1){const T=e.children,r=E.children;if(z(T)&&z(r))for(let s=0;s<T.length;s++){const R=T[s];let A=r[s];A.shapeFlag&1&&!A.dynamicChildren&&((A.patchFlag<=0||A.patchFlag===32)&&(A=r[s]=CE(r[s]),A.el=R.el),t||Kr(R,A)),A.type===BT&&(A.el=R.el)}}function LO(e){const E=e.slice(),t=[0];let T,r,s,R,A;const S=e.length;for(T=0;T<S;T++){const n=e[T];if(n!==0){if(r=t[t.length-1],e[r]<n){E[T]=r,t.push(T);continue}for(s=0,R=t.length-1;s<R;)A=s+R>>1,e[t[A]]<n?s=A+1:R=A;n<e[t[s]]&&(s>0&&(E[T]=t[s-1]),t[s]=T)}}for(s=t.length,R=t[s-1];s-- >0;)t[s]=R,R=E[R];return t}const cO=e=>e.__isTeleport,gt=e=>e&&(e.disabled||e.disabled===""),ws=e=>typeof SVGElement<"u"&&e instanceof SVGElement,Ir=(e,E)=>{const t=e&&e.to;return pe(t)?E?E(t):null:t},uO={name:"Teleport",__isTeleport:!0,process(e,E,t,T,r,s,R,A,S,n){const{mc:i,pc:O,pbc:I,o:{insert:D,querySelector:d,createText:b,createComment:x}}=n,$=gt(E.props);let{shapeFlag:J,children:V,dynamicChildren:v}=E;if(e==null){const re=E.el=b(""),ue=E.anchor=b("");D(re,t,T),D(ue,t,T);const ne=E.target=Ir(E.props,d),ee=E.targetAnchor=b("");ne&&(D(ee,ne),R=R||ws(ne));const k=(_,c)=>{J&16&&i(V,_,c,r,s,R,A,S)};$?k(t,ue):ne&&k(ne,ee)}else{E.el=e.el;const re=E.anchor=e.anchor,ue=E.target=e.target,ne=E.targetAnchor=e.targetAnchor,ee=gt(e.props),k=ee?t:ue,_=ee?re:ne;if(R=R||ws(ue),v?(I(e.dynamicChildren,v,k,r,s,R,A),Kr(e,E,!0)):S||O(e,E,k,_,r,s,R,A,!1),$)ee?E.props&&e.props&&E.props.to!==e.props.to&&(E.props.to=e.props.to):TT(E,t,re,n,1);else if((E.props&&E.props.to)!==(e.props&&e.props.to)){const c=E.target=Ir(E.props,d);c&&TT(E,c,null,n,0)}else ee&&TT(E,ue,ne,n,1)}Pn(E)},remove(e,E,t,T,{um:r,o:{remove:s}},R){const{shapeFlag:A,children:S,anchor:n,targetAnchor:i,target:O,props:I}=e;if(O&&s(i),R&&s(n),A&16){const D=R||!gt(I);for(let d=0;d<S.length;d++){const b=S[d];r(b,E,t,D,!!b.dynamicChildren)}}},move:TT,hydrate:PO};function TT(e,E,t,{o:{insert:T},m:r},s=2){s===0&&T(e.targetAnchor,E,t);const{el:R,anchor:A,shapeFlag:S,children:n,props:i}=e,O=s===2;if(O&&T(R,E,t),(!O||gt(i))&&S&16)for(let I=0;I<n.length;I++)r(n[I],E,t,2);O&&T(A,E,t)}function PO(e,E,t,T,r,s,{o:{nextSibling:R,parentNode:A,querySelector:S}},n){const i=E.target=Ir(E.props,S);if(i){const O=i._lpa||i.firstChild;if(E.shapeFlag&16)if(gt(E.props))E.anchor=n(R(e),E,A(e),t,T,r,s),E.targetAnchor=O;else{E.anchor=R(e);let I=O;for(;I;)if(I=R(I),I&&I.nodeType===8&&I.data==="teleport anchor"){E.targetAnchor=I,i._lpa=E.targetAnchor&&R(E.targetAnchor);break}n(O,E,i,t,T,r,s)}Pn(E)}return E.anchor&&R(E.anchor)}const DO=uO;function Pn(e){const E=e.ctx;if(E&&E.ut){let t=e.children[0].el;for(;t&&t!==e.targetAnchor;)t.nodeType===1&&t.setAttribute("data-v-owner",E.uid),t=t.nextSibling;E.ut()}}const Le=Symbol.for("v-fgt"),BT=Symbol.for("v-txt"),ME=Symbol.for("v-cmt"),jT=Symbol.for("v-stc"),mt=[];let Ze=null;function B(e=!1){mt.push(Ze=e?null:[])}function fO(){mt.pop(),Ze=mt[mt.length-1]||null}let xt=1;function Ws(e){xt+=e}function Dn(e){return e.dynamicChildren=xt>0?Ze||ZE:null,fO(),xt>0&&Ze&&Ze.push(e),e}function X(e,E,t,T,r,s){return Dn(U(e,E,t,T,r,s,!0))}function fe(e,E,t,T,r){return Dn(Q(e,E,t,T,r,!0))}function aT(e){return e?e.__v_isVNode===!0:!1}function ut(e,E){return e.type===E.type&&e.key===E.key}const bT="__vInternal",fn=({key:e})=>e??null,sT=({ref:e,ref_key:E,ref_for:t})=>(typeof e=="number"&&(e=""+e),e!=null?pe(e)||Ue(e)||Te(e)?{i:Fe,r:e,k:E,f:!!t}:e:null);function U(e,E=null,t=null,T=0,r=null,s=e===Le?0:1,R=!1,A=!1){const S={__v_isVNode:!0,__v_skip:!0,type:e,props:E,key:E&&fn(E),ref:E&&sT(E),scopeId:sn,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:s,patchFlag:T,dynamicProps:r,dynamicChildren:null,appContext:null,ctx:Fe};return A?(Jr(S,t),s&128&&e.normalize(S)):t&&(S.shapeFlag|=pe(t)?8:16),xt>0&&!R&&Ze&&(S.patchFlag>0||s&6)&&S.patchFlag!==32&&Ze.push(S),S}const Q=MO;function MO(e,E=null,t=null,T=0,r=null,s=!1){if((!e||e===Vo)&&(e=ME),aT(e)){const A=rt(e,E,!0);return t&&Jr(A,t),xt>0&&!s&&Ze&&(A.shapeFlag&6?Ze[Ze.indexOf(e)]=A:Ze.push(A)),A.patchFlag|=-2,A}if(FO(e)&&(e=e.__vccOpts),E){E=pO(E);let{class:A,style:S}=E;A&&!pe(A)&&(E.class=$e(A)),ce(S)&&(jA(S)&&!z(S)&&(S=He({},S)),E.style=dT(S))}const R=pe(e)?1:wo(e)?128:cO(e)?64:ce(e)?4:Te(e)?2:0;return U(e,E,t,T,r,R,s,!0)}function pO(e){return e?jA(e)||bT in e?He({},e):e:null}function rt(e,E,t=!1){const{props:T,ref:r,patchFlag:s,children:R}=e,A=E?UO(T||{},E):T;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:A,key:A&&fn(A),ref:E&&E.ref?t&&r?z(r)?r.concat(sT(E)):[r,sT(E)]:sT(E):r,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:R,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:E&&e.type!==Le?s===-1?16:s|16:s,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&rt(e.ssContent),ssFallback:e.ssFallback&&rt(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx,ce:e.ce}}function Ye(e=" ",E=0){return Q(BT,null,e,E)}function Se(e="",E=!1){return E?(B(),fe(ME,null,e)):Q(ME,null,e)}function TE(e){return e==null||typeof e=="boolean"?Q(ME):z(e)?Q(Le,null,e.slice()):typeof e=="object"?CE(e):Q(BT,null,String(e))}function CE(e){return e.el===null&&e.patchFlag!==-1||e.memo?e:rt(e)}function Jr(e,E){let t=0;const{shapeFlag:T}=e;if(E==null)E=null;else if(z(E))t=16;else if(typeof E=="object")if(T&65){const r=E.default;r&&(r._c&&(r._d=!1),Jr(e,r()),r._c&&(r._d=!0));return}else{t=32;const r=E._;!r&&!(bT in E)?E._ctx=Fe:r===3&&Fe&&(Fe.slots._===1?E._=1:(E._=2,e.patchFlag|=1024))}else Te(E)?(E={default:E,_ctx:Fe},t=32):(E=String(E),T&64?(t=16,E=[Ye(E)]):t=8);e.children=E,e.shapeFlag|=t}function UO(...e){const E={};for(let t=0;t<e.length;t++){const T=e[t];for(const r in T)if(r==="class")E.class!==T.class&&(E.class=$e([E.class,T.class]));else if(r==="style")E.style=dT([E.style,T.style]);else if(fT(r)){const s=E[r],R=T[r];R&&s!==R&&!(z(s)&&s.includes(R))&&(E[r]=s?[].concat(s,R):R)}else r!==""&&(E[r]=T[r])}return E}function tE(e,E,t,T=null){ze(e,E,7,[t,T])}const dO=_n();let hO=0;function GO(e,E,t){const T=e.type,r=(E?E.appContext:e.appContext)||dO,s={uid:hO++,vnode:e,type:T,parent:E,appContext:r,root:null,next:null,subTree:null,effect:null,update:null,scope:new bA(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:E?E.provides:Object.create(r.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Cn(T,r),emitsOptions:rn(T,r),emit:null,emitted:null,propsDefaults:Ce,inheritAttrs:T.inheritAttrs,ctx:Ce,data:Ce,props:Ce,attrs:Ce,slots:Ce,refs:Ce,setupState:Ce,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return s.ctx={_:s},s.root=E?E.root:s,s.emit=bo.bind(null,s),e.ce&&e.ce(s),s}let ge=null,kr,JE,Xs="__VUE_INSTANCE_SETTERS__";(JE=Tr()[Xs])||(JE=Tr()[Xs]=[]),JE.push(e=>ge=e),kr=e=>{JE.length>1?JE.forEach(E=>E(e)):JE[0](e)};const st=e=>{kr(e),e.scope.on()},YE=()=>{ge&&ge.scope.off(),kr(null)};function Mn(e){return e.vnode.shapeFlag&4}let wt=!1;function gO(e,E=!1){wt=E;const{props:t,children:T}=e.vnode,r=Mn(e);oO(e,t,r,E),NO(e,T);const s=r?mO(e,E):void 0;return wt=!1,s}function mO(e,E){const t=e.type;e.accessCache=Object.create(null),e.proxy=GT(new Proxy(e.ctx,EO));const{setup:T}=t;if(T){const r=e.setupContext=T.length>1?BO(e):null;st(e),St();const s=DE(T,e,0,[e.props,r]);if(it(),YE(),GA(s)){if(s.then(YE,YE),E)return s.then(R=>{$s(e,R,E)}).catch(R=>{gT(R,e,0)});e.asyncDep=s}else $s(e,s,E)}else pn(e,E)}function $s(e,E,t){Te(E)?e.type.__ssrInlineRender?e.ssrRender=E:e.render=E:ce(E)&&(e.setupState=ZA(E)),pn(e,t)}let Ks;function pn(e,E,t){const T=e.type;if(!e.render){if(!E&&Ks&&!T.render){const r=T.template||Xr(e).template;if(r){const{isCustomElement:s,compilerOptions:R}=e.appContext.config,{delimiters:A,compilerOptions:S}=T,n=He(He({isCustomElement:s,delimiters:A},R),S);T.render=Ks(r,n)}}e.render=T.render||RE}{st(e),St();try{tO(e)}finally{it(),YE()}}}function HO(e){return e.attrsProxy||(e.attrsProxy=new Proxy(e.attrs,{get(E,t){return we(e,"get","$attrs"),E[t]}}))}function BO(e){const E=t=>{e.exposed=t||{}};return{get attrs(){return HO(e)},slots:e.slots,emit:e.emit,expose:E}}function jr(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(ZA(GT(e.exposed)),{get(E,t){if(t in E)return E[t];if(t in ht)return ht[t](e)},has(E,t){return t in E||t in ht}}))}function bO(e,E=!0){return Te(e)?e.displayName||e.name:e.name||E&&e.__name}function FO(e){return Te(e)&&"__vccOpts"in e}const sE=(e,E)=>ho(e,E,wt);function Wt(e,E,t){const T=arguments.length;return T===2?ce(E)&&!z(E)?aT(E)?Q(e,null,[E]):Q(e,E):Q(e,null,E):(T>3?t=Array.prototype.slice.call(arguments,2):T===3&&aT(t)&&(t=[t]),Q(e,E,t))}const yO=Symbol.for("v-scx"),vO=()=>Gt(yO),YO="3.3.13",VO="http://www.w3.org/2000/svg",FE=typeof document<"u"?document:null,Js=FE&&FE.createElement("template"),xO={insert:(e,E,t)=>{E.insertBefore(e,t||null)},remove:e=>{const E=e.parentNode;E&&E.removeChild(e)},createElement:(e,E,t,T)=>{const r=E?FE.createElementNS(VO,e):FE.createElement(e,t?{is:t}:void 0);return e==="select"&&T&&T.multiple!=null&&r.setAttribute("multiple",T.multiple),r},createText:e=>FE.createTextNode(e),createComment:e=>FE.createComment(e),setText:(e,E)=>{e.nodeValue=E},setElementText:(e,E)=>{e.textContent=E},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>FE.querySelector(e),setScopeId(e,E){e.setAttribute(E,"")},insertStaticContent(e,E,t,T,r,s){const R=t?t.previousSibling:E.lastChild;if(r&&(r===s||r.nextSibling))for(;E.insertBefore(r.cloneNode(!0),t),!(r===s||!(r=r.nextSibling)););else{Js.innerHTML=T?`<svg>${e}</svg>`:e;const A=Js.content;if(T){const S=A.firstChild;for(;S.firstChild;)A.appendChild(S.firstChild);A.removeChild(S)}E.insertBefore(A,t)}return[R?R.nextSibling:E.firstChild,t?t.previousSibling:E.lastChild]}},wO=Symbol("_vtc");function WO(e,E,t){const T=e[wO];T&&(E=(E?[E,...T]:[...T]).join(" ")),E==null?e.removeAttribute("class"):t?e.setAttribute("class",E):e.className=E}const XO=Symbol("_vod"),$O=Symbol("");function KO(e,E,t){const T=e.style,r=pe(t);if(t&&!r){if(E&&!pe(E))for(const s in E)t[s]==null&&Nr(T,s,"");for(const s in t)Nr(T,s,t[s])}else{const s=T.display;if(r){if(E!==t){const R=T[$O];R&&(t+=";"+R),T.cssText=t}}else E&&e.removeAttribute("style");XO in e&&(T.display=s)}}const ks=/\s*!important$/;function Nr(e,E,t){if(z(t))t.forEach(T=>Nr(e,E,T));else if(t==null&&(t=""),E.startsWith("--"))e.setProperty(E,t);else{const T=JO(e,E);ks.test(t)?e.setProperty(nt(T),t.replace(ks,""),"important"):e[T]=t}}const js=["Webkit","Moz","ms"],qT={};function JO(e,E){const t=qT[E];if(t)return t;let T=AE(E);if(T!=="filter"&&T in e)return qT[E]=T;T=UT(T);for(let r=0;r<js.length;r++){const s=js[r]+T;if(s in e)return qT[E]=s}return E}const qs="http://www.w3.org/1999/xlink";function kO(e,E,t,T,r){if(T&&E.startsWith("xlink:"))t==null?e.removeAttributeNS(qs,E.slice(6,E.length)):e.setAttributeNS(qs,E,t);else{const s=qi(E);t==null||s&&!HA(t)?e.removeAttribute(E):e.setAttribute(E,s?"":t)}}function jO(e,E,t,T,r,s,R){if(E==="innerHTML"||E==="textContent"){T&&R(T,r,s),e[E]=t??"";return}const A=e.tagName;if(E==="value"&&A!=="PROGRESS"&&!A.includes("-")){e._value=t;const n=A==="OPTION"?e.getAttribute("value"):e.value,i=t??"";n!==i&&(e.value=i),t==null&&e.removeAttribute(E);return}let S=!1;if(t===""||t==null){const n=typeof e[E];n==="boolean"?t=HA(t):t==null&&n==="string"?(t="",S=!0):n==="number"&&(t=0,S=!0)}try{e[E]=t}catch{}S&&e.removeAttribute(E)}function qO(e,E,t,T){e.addEventListener(E,t,T)}function QO(e,E,t,T){e.removeEventListener(E,t,T)}const Qs=Symbol("_vei");function ZO(e,E,t,T,r=null){const s=e[Qs]||(e[Qs]={}),R=s[E];if(T&&R)R.value=T;else{const[A,S]=zO(E);if(T){const n=s[E]=tI(T,r);qO(e,A,n,S)}else R&&(QO(e,A,R,S),s[E]=void 0)}}const Zs=/(?:Once|Passive|Capture)$/;function zO(e){let E;if(Zs.test(e)){E={};let T;for(;T=e.match(Zs);)e=e.slice(0,e.length-T[0].length),E[T[0].toLowerCase()]=!0}return[e[2]===":"?e.slice(3):nt(e.slice(2)),E]}let QT=0;const eI=Promise.resolve(),EI=()=>QT||(eI.then(()=>QT=0),QT=Date.now());function tI(e,E){const t=T=>{if(!T._vts)T._vts=Date.now();else if(T._vts<=t.attached)return;ze(TI(T,t.value),E,5,[T])};return t.value=e,t.attached=EI(),t}function TI(e,E){if(z(E)){const t=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{t.call(e),e._stopped=!0},E.map(T=>r=>!r._stopped&&T&&T(r))}else return E}const zs=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&e.charCodeAt(2)>96&&e.charCodeAt(2)<123,rI=(e,E,t,T,r=!1,s,R,A,S)=>{E==="class"?WO(e,T,r):E==="style"?KO(e,t,T):fT(E)?mr(E)||ZO(e,E,t,T,R):(E[0]==="."?(E=E.slice(1),!0):E[0]==="^"?(E=E.slice(1),!1):sI(e,E,T,r))?jO(e,E,T,s,R,A,S):(E==="true-value"?e._trueValue=T:E==="false-value"&&(e._falseValue=T),kO(e,E,T,r))};function sI(e,E,t,T){if(T)return!!(E==="innerHTML"||E==="textContent"||E in e&&zs(E)&&Te(t));if(E==="spellcheck"||E==="draggable"||E==="translate"||E==="form"||E==="list"&&e.tagName==="INPUT"||E==="type"&&e.tagName==="TEXTAREA")return!1;if(E==="width"||E==="height"){const r=e.tagName;if(r==="IMG"||r==="VIDEO"||r==="CANVAS"||r==="SOURCE")return!1}return zs(E)&&pe(t)?!1:E in e}const RI=He({patchProp:rI},xO);let eR;function AI(){return eR||(eR=_O(RI))}const nI=(...e)=>{const E=AI().createApp(...e),{mount:t}=E;return E.mount=T=>{const r=SI(T);if(!r)return;const s=E._component;!Te(s)&&!s.render&&!s.template&&(s.template=r.innerHTML),r.innerHTML="";const R=t(r,!1,r instanceof SVGElement);return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),R},E};function SI(e){return pe(e)?document.querySelector(e):e}var ER=me({props:{code:{type:String,required:!0},language:{type:String,default:""},autodetect:{type:Boolean,default:!0},ignoreIllegals:{type:Boolean,default:!0}},setup:function(e){var E=cE(e.language);Et(function(){return e.language},function(r){E.value=r});var t=sE(function(){return e.autodetect||!E.value}),T=sE(function(){return!t.value&&!Ut.getLanguage(E.value)});return{className:sE(function(){return T.value?"":"hljs "+E.value}),highlightedCode:sE(function(){var r;if(T.value)return console.warn('The language "'+E.value+'" you specified could not be found.'),e.code.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;");if(t.value){var s=Ut.highlightAuto(e.code);return E.value=(r=s.language)!==null&&r!==void 0?r:"",s.value}return(s=Ut.highlight(e.code,{language:E.value,ignoreIllegals:e.ignoreIllegals})).value})}},render:function(){return Wt("pre",{},[Wt("code",{class:this.className,innerHTML:this.highlightedCode})])}}),iI={install:function(e){e.component("highlightjs",ER)},component:ER},oI=!1;/*!
 * pinia v2.1.7
 * (c) 2023 Eduardo San Martin Morote
 * @license MIT
 */let Un;const FT=e=>Un=e,dn=Symbol();function ar(e){return e&&typeof e=="object"&&Object.prototype.toString.call(e)==="[object Object]"&&typeof e.toJSON!="function"}var Ht;(function(e){e.direct="direct",e.patchObject="patch object",e.patchFunction="patch function"})(Ht||(Ht={}));function OI(){const e=FA(!0),E=e.run(()=>cE({}));let t=[],T=[];const r=GT({install(s){FT(r),r._a=s,s.provide(dn,r),s.config.globalProperties.$pinia=r,T.forEach(R=>t.push(R)),T=[]},use(s){return!this._a&&!oI?T.push(s):t.push(s),this},_p:t,_a:null,_e:e,_s:new Map,state:E});return r}const hn=()=>{};function tR(e,E,t,T=hn){e.push(E);const r=()=>{const s=e.indexOf(E);s>-1&&(e.splice(s,1),T())};return!t&&yA()&&Zi(r),r}function kE(e,...E){e.slice().forEach(t=>{t(...E)})}const II=e=>e();function _r(e,E){e instanceof Map&&E instanceof Map&&E.forEach((t,T)=>e.set(T,t)),e instanceof Set&&E instanceof Set&&E.forEach(e.add,e);for(const t in E){if(!E.hasOwnProperty(t))continue;const T=E[t],r=e[t];ar(r)&&ar(T)&&e.hasOwnProperty(t)&&!Ue(T)&&!PE(T)?e[t]=_r(r,T):e[t]=T}return e}const NI=Symbol();function aI(e){return!ar(e)||!e.hasOwnProperty(NI)}const{assign:lE}=Object;function _I(e){return!!(Ue(e)&&e.effect)}function lI(e,E,t,T){const{state:r,actions:s,getters:R}=E,A=t.state.value[e];let S;function n(){A||(t.state.value[e]=r?r():{});const i=fo(t.state.value[e]);return lE(i,s,Object.keys(R||{}).reduce((O,I)=>(O[I]=GT(sE(()=>{FT(t);const D=t._s.get(e);return R[I].call(D,D)})),O),{}))}return S=Gn(e,n,E,t,T,!0),S}function Gn(e,E,t={},T,r,s){let R;const A=lE({actions:{}},t),S={deep:!0};let n,i,O=[],I=[],D;const d=T.state.value[e];!s&&!d&&(T.state.value[e]={}),cE({});let b;function x(ee){let k;n=i=!1,typeof ee=="function"?(ee(T.state.value[e]),k={type:Ht.patchFunction,storeId:e,events:D}):(_r(T.state.value[e],ee),k={type:Ht.patchObject,payload:ee,storeId:e,events:D});const _=b=Symbol();en().then(()=>{b===_&&(n=!0)}),i=!0,kE(O,k,T.state.value[e])}const $=s?function(){const{state:k}=t,_=k?k():{};this.$patch(c=>{lE(c,_)})}:hn;function J(){R.stop(),O=[],I=[],T._s.delete(e)}function V(ee,k){return function(){FT(T);const _=Array.from(arguments),c=[],C=[];function y(Z){c.push(Z)}function K(Z){C.push(Z)}kE(I,{args:_,name:ee,store:re,after:y,onError:K});let _e;try{_e=k.apply(this&&this.$id===e?this:re,_)}catch(Z){throw kE(C,Z),Z}return _e instanceof Promise?_e.then(Z=>(kE(c,Z),Z)).catch(Z=>(kE(C,Z),Promise.reject(Z))):(kE(c,_e),_e)}}const v={_p:T,$id:e,$onAction:tR.bind(null,I),$patch:x,$reset:$,$subscribe(ee,k={}){const _=tR(O,ee,k.detached,()=>c()),c=R.run(()=>Et(()=>T.state.value[e],C=>{(k.flush==="sync"?i:n)&&ee({storeId:e,type:Ht.direct,events:D},C)},lE({},S,k)));return _},$dispose:J},re=pE(v);T._s.set(e,re);const ne=(T._a&&T._a.runWithContext||II)(()=>T._e.run(()=>(R=FA()).run(E)));for(const ee in ne){const k=ne[ee];if(Ue(k)&&!_I(k)||PE(k))s||(d&&aI(k)&&(Ue(k)?k.value=d[ee]:_r(k,d[ee])),T.state.value[e][ee]=k);else if(typeof k=="function"){const _=V(ee,k);ne[ee]=_,A.actions[ee]=k}}return lE(re,ne),lE(oe(re),ne),Object.defineProperty(re,"$state",{get:()=>T.state.value[e],set:ee=>{x(k=>{lE(k,ee)})}}),T._p.forEach(ee=>{lE(re,R.run(()=>ee({store:re,app:T._a,pinia:T,options:A})))}),d&&s&&t.hydrate&&t.hydrate(re.$state,d),n=!0,i=!0,re}function gn(e,E,t){let T,r;const s=typeof E=="function";typeof e=="string"?(T=e,r=s?t:E):(r=e,T=e.id);function R(A,S){const n=iO();return A=A||(n?Gt(dn,null):null),A&&FT(A),A=Un,A._s.has(T)||(s?Gn(T,E,r,A):lI(T,r,A)),A._s.get(T)}return R.$id=T,R}function CI(e,E){return lr(e,e.childNodes,E)}function lr(e,E,{mode:t="open",delegatesFocus:T=!1}={mode:"open"}){try{const r=e.shadowRoot;if(r!=null){console.error("[shadow] Attach shadow multiple times",e,E,r);return}else{const s=e.attachShadow({mode:t,delegatesFocus:T});return E&&LI(s,E),s}}catch(r){console.error("[shadow] make shadow-root failed",e,E),console.error(r)}}function LI(e,E){const t=document.createDocumentFragment();for(const T of E)t.appendChild(T);e.appendChild(t)}const cI=document.createDocumentFragment(),_T=me({props:{media:String,nonce:String},setup(e,{slots:E}){return()=>{var t;return Wt("style",{media:e.media,nonce:e.nonce},(t=E.default)==null?void 0:t.call(E))}}}),lT=uI()(me({props:{mode:{type:String,default:"open"},delegatesFocus:{type:Boolean,default:!1},abstract:{type:Boolean,default:!1},tag:{type:String,default:"div"},adoptedStyleSheets:{type:Array}},emits:["error"],setup(e,{slots:E,expose:t,emit:T}){const r=cE(!1),s=cE(),R=cE(),A=cE(),S=sE(()=>A.value??cI),n=pE({shadow_root:A});return t(n),On(()=>{r.value=e.abstract}),Wr(()=>{var i;try{r.value?R.value.parentElement.shadowRoot?A.value=R.value.parentElement.shadowRoot:A.value=lr(R.value.parentElement,void 0,{mode:e.mode,delegatesFocus:e.delegatesFocus}):A.value=lr(s.value,void 0,{mode:e.mode,delegatesFocus:e.delegatesFocus}),(i=A.value)==null||i.styleSheets}catch(O){console.error(O),T("error",O)}}),Et([A,()=>e.adoptedStyleSheets],([i,O])=>{if(!(!i||!O))try{i.adoptedStyleSheets=O}catch(I){console.error(I),T("error",I)}}),()=>{var O;const i=Wt(DO,{ref:R,to:S.value},[(O=E.default)==null?void 0:O.call(E)]);return r.value?i:Wt(e.tag,{ref:s},i)}},install:mn,Style:_T}));function uI(){return e=>e}function mn(e){e.component("shadow-root",lT),e.directive("shadow",{beforeMount(E){console.warn("[VueShadowDom] Deprecated v-shadow directive, use <shadow-root> component"),CI(E)}})}var PI={ShadowRoot:lT,ShadowStyle:_T,shadow_root:lT,shadow_style:_T,install:mn};const Hn="/assets/ruby-logo-kn_8RniZ.svg";var Cr={exports:{}};(function(e,E){(function(t,T){T(E)})(qE,function(t){var T={logger:self.console,WebSocket:self.WebSocket},r={log:function(){if(this.enabled){for(var c,C=arguments.length,y=Array(C),K=0;K<C;K++)y[K]=arguments[K];y.push(Date.now()),(c=T.logger).log.apply(c,["[ActionCable]"].concat(y))}}},s=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(_){return typeof _}:function(_){return _&&typeof Symbol=="function"&&_.constructor===Symbol&&_!==Symbol.prototype?"symbol":typeof _},R=function(_,c){if(!(_ instanceof c))throw new TypeError("Cannot call a class as a function")},A=function(){function _(c,C){for(var y=0;y<C.length;y++){var K=C[y];K.enumerable=K.enumerable||!1,K.configurable=!0,"value"in K&&(K.writable=!0),Object.defineProperty(c,K.key,K)}}return function(c,C,y){return C&&_(c.prototype,C),y&&_(c,y),c}}(),S=function(){return new Date().getTime()},n=function(c){return(S()-c)/1e3},i=function(c,C,y){return Math.max(C,Math.min(y,c))},O=function(){function _(c){R(this,_),this.visibilityDidChange=this.visibilityDidChange.bind(this),this.connection=c,this.reconnectAttempts=0}return _.prototype.start=function(){this.isRunning()||(this.startedAt=S(),delete this.stoppedAt,this.startPolling(),addEventListener("visibilitychange",this.visibilityDidChange),r.log("ConnectionMonitor started. pollInterval = "+this.getPollInterval()+" ms"))},_.prototype.stop=function(){this.isRunning()&&(this.stoppedAt=S(),this.stopPolling(),removeEventListener("visibilitychange",this.visibilityDidChange),r.log("ConnectionMonitor stopped"))},_.prototype.isRunning=function(){return this.startedAt&&!this.stoppedAt},_.prototype.recordPing=function(){this.pingedAt=S()},_.prototype.recordConnect=function(){this.reconnectAttempts=0,this.recordPing(),delete this.disconnectedAt,r.log("ConnectionMonitor recorded connect")},_.prototype.recordDisconnect=function(){this.disconnectedAt=S(),r.log("ConnectionMonitor recorded disconnect")},_.prototype.startPolling=function(){this.stopPolling(),this.poll()},_.prototype.stopPolling=function(){clearTimeout(this.pollTimeout)},_.prototype.poll=function(){var C=this;this.pollTimeout=setTimeout(function(){C.reconnectIfStale(),C.poll()},this.getPollInterval())},_.prototype.getPollInterval=function(){var C=this.constructor.pollInterval,y=C.min,K=C.max,_e=C.multiplier,Z=_e*Math.log(this.reconnectAttempts+1);return Math.round(i(Z,y,K)*1e3)},_.prototype.reconnectIfStale=function(){this.connectionIsStale()&&(r.log("ConnectionMonitor detected stale connection. reconnectAttempts = "+this.reconnectAttempts+", pollInterval = "+this.getPollInterval()+" ms, time disconnected = "+n(this.disconnectedAt)+" s, stale threshold = "+this.constructor.staleThreshold+" s"),this.reconnectAttempts++,this.disconnectedRecently()?r.log("ConnectionMonitor skipping reopening recent disconnect"):(r.log("ConnectionMonitor reopening"),this.connection.reopen()))},_.prototype.connectionIsStale=function(){return n(this.pingedAt?this.pingedAt:this.startedAt)>this.constructor.staleThreshold},_.prototype.disconnectedRecently=function(){return this.disconnectedAt&&n(this.disconnectedAt)<this.constructor.staleThreshold},_.prototype.visibilityDidChange=function(){var C=this;document.visibilityState==="visible"&&setTimeout(function(){(C.connectionIsStale()||!C.connection.isOpen())&&(r.log("ConnectionMonitor reopening stale connection on visibilitychange. visibilityState = "+document.visibilityState),C.connection.reopen())},200)},_}();O.pollInterval={min:3,max:30,multiplier:5},O.staleThreshold=6;var I={message_types:{welcome:"welcome",disconnect:"disconnect",ping:"ping",confirmation:"confirm_subscription",rejection:"reject_subscription"},disconnect_reasons:{unauthorized:"unauthorized",invalid_request:"invalid_request",server_restart:"server_restart"},default_mount_path:"/cable",protocols:["actioncable-v1-json","actioncable-unsupported"]},D=I.message_types,d=I.protocols,b=d.slice(0,d.length-1),x=[].indexOf,$=function(){function _(c){R(this,_),this.open=this.open.bind(this),this.consumer=c,this.subscriptions=this.consumer.subscriptions,this.monitor=new O(this),this.disconnected=!0}return _.prototype.send=function(C){return this.isOpen()?(this.webSocket.send(JSON.stringify(C)),!0):!1},_.prototype.open=function(){return this.isActive()?(r.log("Attempted to open WebSocket, but existing socket is "+this.getState()),!1):(r.log("Opening WebSocket, current state is "+this.getState()+", subprotocols: "+d),this.webSocket&&this.uninstallEventHandlers(),this.webSocket=new T.WebSocket(this.consumer.url,d),this.installEventHandlers(),this.monitor.start(),!0)},_.prototype.close=function(){var C=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{allowReconnect:!0},y=C.allowReconnect;if(y||this.monitor.stop(),this.isActive())return this.webSocket.close()},_.prototype.reopen=function(){if(r.log("Reopening WebSocket, current state is "+this.getState()),this.isActive())try{return this.close()}catch(C){r.log("Failed to reopen WebSocket",C)}finally{r.log("Reopening WebSocket in "+this.constructor.reopenDelay+"ms"),setTimeout(this.open,this.constructor.reopenDelay)}else return this.open()},_.prototype.getProtocol=function(){if(this.webSocket)return this.webSocket.protocol},_.prototype.isOpen=function(){return this.isState("open")},_.prototype.isActive=function(){return this.isState("open","connecting")},_.prototype.isProtocolSupported=function(){return x.call(b,this.getProtocol())>=0},_.prototype.isState=function(){for(var C=arguments.length,y=Array(C),K=0;K<C;K++)y[K]=arguments[K];return x.call(y,this.getState())>=0},_.prototype.getState=function(){if(this.webSocket){for(var C in T.WebSocket)if(T.WebSocket[C]===this.webSocket.readyState)return C.toLowerCase()}return null},_.prototype.installEventHandlers=function(){for(var C in this.events){var y=this.events[C].bind(this);this.webSocket["on"+C]=y}},_.prototype.uninstallEventHandlers=function(){for(var C in this.events)this.webSocket["on"+C]=function(){}},_}();$.reopenDelay=500,$.prototype.events={message:function(c){if(this.isProtocolSupported()){var C=JSON.parse(c.data),y=C.identifier,K=C.message,_e=C.reason,Z=C.reconnect,L=C.type;switch(L){case D.welcome:return this.monitor.recordConnect(),this.subscriptions.reload();case D.disconnect:return r.log("Disconnecting. Reason: "+_e),this.close({allowReconnect:Z});case D.ping:return this.monitor.recordPing();case D.confirmation:return this.subscriptions.confirmSubscription(y),this.subscriptions.notify(y,"connected");case D.rejection:return this.subscriptions.reject(y);default:return this.subscriptions.notify(y,"received",K)}}},open:function(){if(r.log("WebSocket onopen event, using '"+this.getProtocol()+"' subprotocol"),this.disconnected=!1,!this.isProtocolSupported())return r.log("Protocol is unsupported. Stopping monitor and disconnecting."),this.close({allowReconnect:!1})},close:function(c){if(r.log("WebSocket onclose event"),!this.disconnected)return this.disconnected=!0,this.monitor.recordDisconnect(),this.subscriptions.notifyAll("disconnected",{willAttemptReconnect:this.monitor.isRunning()})},error:function(){r.log("WebSocket onerror event")}};var J=function(c,C){if(C!=null)for(var y in C){var K=C[y];c[y]=K}return c},V=function(){function _(c){var C=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},y=arguments[2];R(this,_),this.consumer=c,this.identifier=JSON.stringify(C),J(this,y)}return _.prototype.perform=function(C){var y=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};return y.action=C,this.send(y)},_.prototype.send=function(C){return this.consumer.send({command:"message",identifier:this.identifier,data:JSON.stringify(C)})},_.prototype.unsubscribe=function(){return this.consumer.subscriptions.remove(this)},_}(),v=function(){function _(c){R(this,_),this.subscriptions=c,this.pendingSubscriptions=[]}return _.prototype.guarantee=function(C){this.pendingSubscriptions.indexOf(C)==-1?(r.log("SubscriptionGuarantor guaranteeing "+C.identifier),this.pendingSubscriptions.push(C)):r.log("SubscriptionGuarantor already guaranteeing "+C.identifier),this.startGuaranteeing()},_.prototype.forget=function(C){r.log("SubscriptionGuarantor forgetting "+C.identifier),this.pendingSubscriptions=this.pendingSubscriptions.filter(function(y){return y!==C})},_.prototype.startGuaranteeing=function(){this.stopGuaranteeing(),this.retrySubscribing()},_.prototype.stopGuaranteeing=function(){clearTimeout(this.retryTimeout)},_.prototype.retrySubscribing=function(){var C=this;this.retryTimeout=setTimeout(function(){C.subscriptions&&typeof C.subscriptions.subscribe=="function"&&C.pendingSubscriptions.map(function(y){r.log("SubscriptionGuarantor resubscribing "+y.identifier),C.subscriptions.subscribe(y)})},500)},_}(),re=function(){function _(c){R(this,_),this.consumer=c,this.guarantor=new v(this),this.subscriptions=[]}return _.prototype.create=function(C,y){var K=C,_e=(typeof K>"u"?"undefined":s(K))==="object"?K:{channel:K},Z=new V(this.consumer,_e,y);return this.add(Z)},_.prototype.add=function(C){return this.subscriptions.push(C),this.consumer.ensureActiveConnection(),this.notify(C,"initialized"),this.subscribe(C),C},_.prototype.remove=function(C){return this.forget(C),this.findAll(C.identifier).length||this.sendCommand(C,"unsubscribe"),C},_.prototype.reject=function(C){var y=this;return this.findAll(C).map(function(K){return y.forget(K),y.notify(K,"rejected"),K})},_.prototype.forget=function(C){return this.guarantor.forget(C),this.subscriptions=this.subscriptions.filter(function(y){return y!==C}),C},_.prototype.findAll=function(C){return this.subscriptions.filter(function(y){return y.identifier===C})},_.prototype.reload=function(){var C=this;return this.subscriptions.map(function(y){return C.subscribe(y)})},_.prototype.notifyAll=function(C){for(var y=this,K=arguments.length,_e=Array(K>1?K-1:0),Z=1;Z<K;Z++)_e[Z-1]=arguments[Z];return this.subscriptions.map(function(L){return y.notify.apply(y,[L,C].concat(_e))})},_.prototype.notify=function(C,y){for(var K=arguments.length,_e=Array(K>2?K-2:0),Z=2;Z<K;Z++)_e[Z-2]=arguments[Z];var L=void 0;return typeof C=="string"?L=this.findAll(C):L=[C],L.map(function(G){return typeof G[y]=="function"?G[y].apply(G,_e):void 0})},_.prototype.subscribe=function(C){this.sendCommand(C,"subscribe")&&this.guarantor.guarantee(C)},_.prototype.confirmSubscription=function(C){var y=this;r.log("Subscription confirmed "+C),this.findAll(C).map(function(K){return y.guarantor.forget(K)})},_.prototype.sendCommand=function(C,y){var K=C.identifier;return this.consumer.send({command:y,identifier:K})},_}(),ue=function(){function _(c){R(this,_),this._url=c,this.subscriptions=new re(this),this.connection=new $(this)}return _.prototype.send=function(C){return this.connection.send(C)},_.prototype.connect=function(){return this.connection.open()},_.prototype.disconnect=function(){return this.connection.close({allowReconnect:!1})},_.prototype.ensureActiveConnection=function(){if(!this.connection.isActive())return this.connection.open()},A(_,[{key:"url",get:function(){return ne(this._url)}}]),_}();function ne(_){if(typeof _=="function"&&(_=_()),_&&!/^wss?:/i.test(_)){var c=document.createElement("a");return c.href=_,c.href=c.href,c.protocol=c.protocol.replace("http","ws"),c.href}else return _}function ee(){var _=arguments.length>0&&arguments[0]!==void 0?arguments[0]:k("url")||I.default_mount_path;return new ue(_)}function k(_){var c=document.head.querySelector("meta[name='action-cable-"+_+"']");if(c)return c.getAttribute("content")}t.Connection=$,t.ConnectionMonitor=O,t.Consumer=ue,t.INTERNAL=I,t.Subscription=V,t.Subscriptions=re,t.SubscriptionGuarantor=v,t.adapters=T,t.createWebSocketURL=ne,t.logger=r,t.createConsumer=ee,t.getConfig=k,Object.defineProperty(t,"__esModule",{value:!0})})})(Cr,Cr.exports);var DI=Cr.exports;function TR(e,E){return B(),X("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[U("path",{"fill-rule":"evenodd",d:"M11.78 4.22a.75.75 0 0 1 0 1.06L6.56 10.5h3.69a.75.75 0 0 1 0 1.5h-5.5a.75.75 0 0 1-.75-.75v-5.5a.75.75 0 0 1 1.5 0v3.69l5.22-5.22a.75.75 0 0 1 1.06 0Z","clip-rule":"evenodd"})])}function Bn(e,E){return B(),X("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[U("path",{"fill-rule":"evenodd",d:"M4.22 6.22a.75.75 0 0 1 1.06 0L8 8.94l2.72-2.72a.75.75 0 1 1 1.06 1.06l-3.25 3.25a.75.75 0 0 1-1.06 0L4.22 7.28a.75.75 0 0 1 0-1.06Z","clip-rule":"evenodd"})])}function fI(e,E){return B(),X("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[U("path",{"fill-rule":"evenodd",d:"M4.78 4.97a.75.75 0 0 1 0 1.06L2.81 8l1.97 1.97a.75.75 0 1 1-1.06 1.06l-2.5-2.5a.75.75 0 0 1 0-1.06l2.5-2.5a.75.75 0 0 1 1.06 0ZM11.22 4.97a.75.75 0 0 0 0 1.06L13.19 8l-1.97 1.97a.75.75 0 1 0 1.06 1.06l2.5-2.5a.75.75 0 0 0 0-1.06l-2.5-2.5a.75.75 0 0 0-1.06 0ZM8.856 2.008a.75.75 0 0 1 .636.848l-1.5 10.5a.75.75 0 0 1-1.484-.212l1.5-10.5a.75.75 0 0 1 .848-.636Z","clip-rule":"evenodd"})])}function MI(e,E){return B(),X("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[U("path",{"fill-rule":"evenodd",d:"M5 3.25V4H2.75a.75.75 0 0 0 0 1.5h.3l.815 8.15A1.5 1.5 0 0 0 5.357 15h5.285a1.5 1.5 0 0 0 1.493-1.35l.815-8.15h.3a.75.75 0 0 0 0-1.5H11v-.75A2.25 2.25 0 0 0 8.75 1h-1.5A2.25 2.25 0 0 0 5 3.25Zm2.25-.75a.75.75 0 0 0-.75.75V4h3v-.75a.75.75 0 0 0-.75-.75h-1.5ZM6.05 6a.75.75 0 0 1 .787.713l.275 5.5a.75.75 0 0 1-1.498.075l-.275-5.5A.75.75 0 0 1 6.05 6Zm3.9 0a.75.75 0 0 1 .712.787l-.275 5.5a.75.75 0 0 1-1.498-.075l.275-5.5a.75.75 0 0 1 .786-.711Z","clip-rule":"evenodd"})])}function pI(e,E){return B(),X("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[U("path",{"fill-rule":"evenodd",d:"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14Zm2.78-4.22a.75.75 0 0 1-1.06 0L8 9.06l-1.72 1.72a.75.75 0 1 1-1.06-1.06L6.94 8 5.22 6.28a.75.75 0 0 1 1.06-1.06L8 6.94l1.72-1.72a.75.75 0 1 1 1.06 1.06L9.06 8l1.72 1.72a.75.75 0 0 1 0 1.06Z","clip-rule":"evenodd"})])}const UI=["textContent"],dI=me({__name:"TabButton",props:{label:{},count:{},isActive:{type:Boolean}},setup(e){const E=e;return(t,T)=>(B(),X("button",{class:$e(["text-sm flex items-center space-x-1 px-3 py-2 border-0",{"bg-stone-300 rounded-sm":E.isActive}])},[U("span",{class:$e({"font-medium":E.isActive})},[$t(t.$slots,"default")],2),E.count!=null?(B(),X("span",{key:0,class:$e(["p-0.5 rounded-full text-xs",{"px-1.5":E.count<10,hidden:E.count==0,"bg-stone-300":E.count>0&&!E.isActive,"bg-stone-400":E.count>0&&E.isActive}]),textContent:Re(E.count)},null,10,UI)):Se("",!0)],2))}}),hI=(e,E)=>{const t=e.__vccOpts||e;for(const[T,r]of E)t[T]=r;return t},GI={},gI={class:"px-3 py-2"};function mI(e,E){return B(),X("div",gI,[$t(e.$slots,"default")])}const OE=hI(GI,[["render",mI]]),HI={key:0},BI=U("div",{class:"text-gray-500"},"No models were initialized.",-1),bI=[BI],FI={key:1,class:"divide-y divide-stone-300"},yI=U("thead",null,[U("tr",null,[U("th",{scope:"col",class:"w-36 py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-stone-900 sm:pl-0"}," Model "),U("th",{scope:"col",class:"px-3 py-3.5 text-left text-sm font-semibold text-stone-900"},"Count")])],-1),vI={class:"divide-y divide-stone-200"},YI={class:"whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-stone-900 sm:pl-0"},VI={class:"whitespace-nowrap px-3 py-4 text-sm text-stone-500 text-center"},xI=me({__name:"ModelsPanel",props:{models:{},count:{}},setup(e){const E=e;return(t,T)=>(B(),fe(OE,null,{default:Ie(()=>[E.count==0?(B(),X("div",HI,bI)):Se("",!0),E.count>0?(B(),X("table",FI,[yI,U("tbody",vI,[(B(!0),X(Le,null,Je(E.models,(r,s)=>(B(),X("tr",{key:s},[U("td",YI,Re(s),1),U("td",VI,Re(r),1)]))),128))])])):Se("",!0)]),_:1}))}});var bn={exports:{}};(function(e){(function(E,t){e.exports?e.exports=t():E.nearley=t()})(qE,function(){function E(n,i,O){return this.id=++E.highestId,this.name=n,this.symbols=i,this.postprocess=O,this}E.highestId=0,E.prototype.toString=function(n){var i=typeof n>"u"?this.symbols.map(S).join(" "):this.symbols.slice(0,n).map(S).join(" ")+" ● "+this.symbols.slice(n).map(S).join(" ");return this.name+" → "+i};function t(n,i,O,I){this.rule=n,this.dot=i,this.reference=O,this.data=[],this.wantedBy=I,this.isComplete=this.dot===n.symbols.length}t.prototype.toString=function(){return"{"+this.rule.toString(this.dot)+"}, from: "+(this.reference||0)},t.prototype.nextState=function(n){var i=new t(this.rule,this.dot+1,this.reference,this.wantedBy);return i.left=this,i.right=n,i.isComplete&&(i.data=i.build(),i.right=void 0),i},t.prototype.build=function(){var n=[],i=this;do n.push(i.right.data),i=i.left;while(i.left);return n.reverse(),n},t.prototype.finish=function(){this.rule.postprocess&&(this.data=this.rule.postprocess(this.data,this.reference,R.fail))};function T(n,i){this.grammar=n,this.index=i,this.states=[],this.wants={},this.scannable=[],this.completed={}}T.prototype.process=function(n){for(var i=this.states,O=this.wants,I=this.completed,D=0;D<i.length;D++){var d=i[D];if(d.isComplete){if(d.finish(),d.data!==R.fail){for(var b=d.wantedBy,x=b.length;x--;){var $=b[x];this.complete($,d)}if(d.reference===this.index){var J=d.rule.name;(this.completed[J]=this.completed[J]||[]).push(d)}}}else{var J=d.rule.symbols[d.dot];if(typeof J!="string"){this.scannable.push(d);continue}if(O[J]){if(O[J].push(d),I.hasOwnProperty(J))for(var V=I[J],x=0;x<V.length;x++){var v=V[x];this.complete(d,v)}}else O[J]=[d],this.predict(J)}}},T.prototype.predict=function(n){for(var i=this.grammar.byName[n]||[],O=0;O<i.length;O++){var I=i[O],D=this.wants[n],d=new t(I,0,this.index,D);this.states.push(d)}},T.prototype.complete=function(n,i){var O=n.nextState(i);this.states.push(O)};function r(n,i){this.rules=n,this.start=i||this.rules[0].name;var O=this.byName={};this.rules.forEach(function(I){O.hasOwnProperty(I.name)||(O[I.name]=[]),O[I.name].push(I)})}r.fromCompiled=function(I,i){var O=I.Lexer;I.ParserStart&&(i=I.ParserStart,I=I.ParserRules);var I=I.map(function(d){return new E(d.name,d.symbols,d.postprocess)}),D=new r(I,i);return D.lexer=O,D};function s(){this.reset("")}s.prototype.reset=function(n,i){this.buffer=n,this.index=0,this.line=i?i.line:1,this.lastLineBreak=i?-i.col:0},s.prototype.next=function(){if(this.index<this.buffer.length){var n=this.buffer[this.index++];return n===`
`&&(this.line+=1,this.lastLineBreak=this.index),{value:n}}},s.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak}},s.prototype.formatError=function(n,i){var O=this.buffer;if(typeof O=="string"){var I=O.split(`
`).slice(Math.max(0,this.line-5),this.line),D=O.indexOf(`
`,this.index);D===-1&&(D=O.length);var d=this.index-this.lastLineBreak,b=String(this.line).length;return i+=" at line "+this.line+" col "+d+`:

`,i+=I.map(function($,J){return x(this.line-I.length+J+1,b)+" "+$},this).join(`
`),i+=`
`+x("",b+d)+`^
`,i}else return i+" at index "+(this.index-1);function x($,J){var V=String($);return Array(J-V.length+1).join(" ")+V}};function R(n,i,O){if(n instanceof r)var I=n,O=i;else var I=r.fromCompiled(n,i);this.grammar=I,this.options={keepHistory:!1,lexer:I.lexer||new s};for(var D in O||{})this.options[D]=O[D];this.lexer=this.options.lexer,this.lexerState=void 0;var d=new T(I,0);this.table=[d],d.wants[I.start]=[],d.predict(I.start),d.process(),this.current=0}R.fail={},R.prototype.feed=function(n){var i=this.lexer;i.reset(n,this.lexerState);for(var O;;){try{if(O=i.next(),!O)break}catch(ne){var b=new T(this.grammar,this.current+1);this.table.push(b);var I=new Error(this.reportLexerError(ne));throw I.offset=this.current,I.token=ne.token,I}var D=this.table[this.current];this.options.keepHistory||delete this.table[this.current-1];var d=this.current+1,b=new T(this.grammar,d);this.table.push(b);for(var x=O.text!==void 0?O.text:O.value,$=i.constructor===s?O.value:O,J=D.scannable,V=J.length;V--;){var v=J[V],re=v.rule.symbols[v.dot];if(re.test?re.test($):re.type?re.type===O.type:re.literal===x){var ue=v.nextState({data:$,token:O,isToken:!0,reference:d-1});b.states.push(ue)}}if(b.process(),b.states.length===0){var I=new Error(this.reportError(O));throw I.offset=this.current,I.token=O,I}this.options.keepHistory&&(D.lexerState=i.save()),this.current++}return D&&(this.lexerState=i.save()),this.results=this.finish(),this},R.prototype.reportLexerError=function(n){var i,O,I=n.token;return I?(i="input "+JSON.stringify(I.text[0])+" (lexer error)",O=this.lexer.formatError(I,"Syntax error")):(i="input (lexer error)",O=n.message),this.reportErrorCommon(O,i)},R.prototype.reportError=function(n){var i=(n.type?n.type+" token: ":"")+JSON.stringify(n.value!==void 0?n.value:n),O=this.lexer.formatError(n,"Syntax error");return this.reportErrorCommon(O,i)},R.prototype.reportErrorCommon=function(n,i){var O=[];O.push(n);var I=this.table.length-2,D=this.table[I],d=D.states.filter(function(x){var $=x.rule.symbols[x.dot];return $&&typeof $!="string"});if(d.length===0)O.push("Unexpected "+i+`. I did not expect any more input. Here is the state of my parse table:
`),this.displayStateStack(D.states,O);else{O.push("Unexpected "+i+`. Instead, I was expecting to see one of the following:
`);var b=d.map(function(x){return this.buildFirstStateStack(x,[])||[x]},this);b.forEach(function(x){var $=x[0],J=$.rule.symbols[$.dot],V=this.getSymbolDisplay(J);O.push("A "+V+" based on:"),this.displayStateStack(x,O)},this)}return O.push(""),O.join(`
`)},R.prototype.displayStateStack=function(n,i){for(var O,I=0,D=0;D<n.length;D++){var d=n[D],b=d.rule.toString(d.dot);b===O?I++:(I>0&&i.push("    ^ "+I+" more lines identical to this"),I=0,i.push("    "+b)),O=b}},R.prototype.getSymbolDisplay=function(n){return A(n)},R.prototype.buildFirstStateStack=function(n,i){if(i.indexOf(n)!==-1)return null;if(n.wantedBy.length===0)return[n];var O=n.wantedBy[0],I=[n].concat(i),D=this.buildFirstStateStack(O,I);return D===null?null:[n].concat(D)},R.prototype.save=function(){var n=this.table[this.current];return n.lexerState=this.lexerState,n},R.prototype.restore=function(n){var i=n.index;this.current=i,this.table[i]=n,this.table.splice(i+1),this.lexerState=n.lexerState,this.results=this.finish()},R.prototype.rewind=function(n){if(!this.options.keepHistory)throw new Error("set option `keepHistory` to enable rewinding");this.restore(this.table[n])},R.prototype.finish=function(){var n=[],i=this.grammar.start,O=this.table[this.table.length-1];return O.states.forEach(function(I){I.rule.name===i&&I.dot===I.rule.symbols.length&&I.reference===0&&I.data!==R.fail&&n.push(I)}),n.map(function(I){return I.data})};function A(n){var i=typeof n;if(i==="string")return n;if(i==="object"){if(n.literal)return JSON.stringify(n.literal);if(n instanceof RegExp)return"character matching "+n;if(n.type)return n.type+" token";if(n.test)return"token matching "+String(n.test);throw new Error("Unknown symbol type: "+n)}}function S(n){var i=typeof n;if(i==="string")return n;if(i==="object"){if(n.literal)return JSON.stringify(n.literal);if(n instanceof RegExp)return n.toString();if(n.type)return"%"+n.type;if(n.test)return"<"+String(n.test)+">";throw new Error("Unknown symbol type: "+n)}}return{Parser:R,Grammar:r,Rule:E}})})(bn);var wI=bn.exports;const WI=PT(wI);var Fn=Object.defineProperty,XI=Object.defineProperties,$I=Object.getOwnPropertyDescriptors,CT=Object.getOwnPropertySymbols,yn=Object.prototype.hasOwnProperty,vn=Object.prototype.propertyIsEnumerable,rR=(e,E,t)=>E in e?Fn(e,E,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[E]=t,Be=(e,E)=>{for(var t in E||(E={}))yn.call(E,t)&&rR(e,t,E[t]);if(CT)for(var t of CT(E))vn.call(E,t)&&rR(e,t,E[t]);return e},Ve=(e,E)=>XI(e,$I(E)),KI=(e,E)=>{var t={};for(var T in e)yn.call(e,T)&&E.indexOf(T)<0&&(t[T]=e[T]);if(e!=null&&CT)for(var T of CT(e))E.indexOf(T)<0&&vn.call(e,T)&&(t[T]=e[T]);return t},JI=(e,E)=>{for(var t in E)Fn(e,t,{get:E[t],enumerable:!0})},Yn={};JI(Yn,{bigquery:()=>oN,db2:()=>fN,db2i:()=>HN,hive:()=>wN,mariadb:()=>QN,mysql:()=>Ra,n1ql:()=>aa,plsql:()=>fa,postgresql:()=>Ba,redshift:()=>Wa,singlestoredb:()=>X_,snowflake:()=>z_,spark:()=>Za,sql:()=>l_,sqlite:()=>n_,transactsql:()=>b_,trino:()=>p_});var M=e=>e.flatMap(kI),kI=e=>RT(qI(e)).map(jI),jI=e=>e.replace(/ +/g," ").trim(),qI=e=>({type:"mandatory_block",items:qr(e,0)[0]}),qr=(e,E,t)=>{const T=[];for(;e[E];){const[r,s]=QI(e,E);if(T.push(r),E=s,e[E]==="|")E++;else if(e[E]==="}"||e[E]==="]"){if(t!==e[E])throw new Error(`Unbalanced parenthesis in: ${e}`);return E++,[T,E]}else if(E===e.length){if(t)throw new Error(`Unbalanced parenthesis in: ${e}`);return[T,E]}else throw new Error(`Unexpected "${e[E]}"`)}return[T,E]},QI=(e,E)=>{const t=[];for(;;){const[T,r]=ZI(e,E);if(T)t.push(T),E=r;else break}return t.length===1?[t[0],E]:[{type:"concatenation",items:t},E]},ZI=(e,E)=>{if(e[E]==="{")return zI(e,E+1);if(e[E]==="[")return eN(e,E+1);{let t="";for(;e[E]&&/[A-Za-z0-9_ ]/.test(e[E]);)t+=e[E],E++;return[t,E]}},zI=(e,E)=>{const[t,T]=qr(e,E,"}");return[{type:"mandatory_block",items:t},T]},eN=(e,E)=>{const[t,T]=qr(e,E,"]");return[{type:"optional_block",items:t},T]},RT=e=>{if(typeof e=="string")return[e];if(e.type==="concatenation")return e.items.map(RT).reduce(EN,[""]);if(e.type==="mandatory_block")return e.items.flatMap(RT);if(e.type==="optional_block")return["",...e.items.flatMap(RT)];throw new Error(`Unknown node type: ${e}`)},EN=(e,E)=>{const t=[];for(const T of e)for(const r of E)t.push(T+r);return t},Vn=(e=>(e.QUOTED_IDENTIFIER="QUOTED_IDENTIFIER",e.IDENTIFIER="IDENTIFIER",e.STRING="STRING",e.VARIABLE="VARIABLE",e.RESERVED_DATA_TYPE="RESERVED_DATA_TYPE",e.RESERVED_PARAMETERIZED_DATA_TYPE="RESERVED_PARAMETERIZED_DATA_TYPE",e.RESERVED_KEYWORD="RESERVED_KEYWORD",e.RESERVED_FUNCTION_NAME="RESERVED_FUNCTION_NAME",e.RESERVED_PHRASE="RESERVED_PHRASE",e.RESERVED_SET_OPERATION="RESERVED_SET_OPERATION",e.RESERVED_CLAUSE="RESERVED_CLAUSE",e.RESERVED_SELECT="RESERVED_SELECT",e.RESERVED_JOIN="RESERVED_JOIN",e.ARRAY_IDENTIFIER="ARRAY_IDENTIFIER",e.ARRAY_KEYWORD="ARRAY_KEYWORD",e.CASE="CASE",e.END="END",e.WHEN="WHEN",e.ELSE="ELSE",e.THEN="THEN",e.LIMIT="LIMIT",e.BETWEEN="BETWEEN",e.AND="AND",e.OR="OR",e.XOR="XOR",e.OPERATOR="OPERATOR",e.COMMA="COMMA",e.ASTERISK="ASTERISK",e.DOT="DOT",e.OPEN_PAREN="OPEN_PAREN",e.CLOSE_PAREN="CLOSE_PAREN",e.LINE_COMMENT="LINE_COMMENT",e.BLOCK_COMMENT="BLOCK_COMMENT",e.NUMBER="NUMBER",e.NAMED_PARAMETER="NAMED_PARAMETER",e.QUOTED_PARAMETER="QUOTED_PARAMETER",e.NUMBERED_PARAMETER="NUMBERED_PARAMETER",e.POSITIONAL_PARAMETER="POSITIONAL_PARAMETER",e.CUSTOM_PARAMETER="CUSTOM_PARAMETER",e.DELIMITER="DELIMITER",e.EOF="EOF",e))(Vn||{}),xn=e=>({type:"EOF",raw:"«EOF»",text:"«EOF»",start:e}),Rt=xn(1/0),jE=e=>E=>E.type===e.type&&E.text===e.text,xE={ARRAY:jE({text:"ARRAY",type:"RESERVED_DATA_TYPE"}),BY:jE({text:"BY",type:"RESERVED_KEYWORD"}),SET:jE({text:"SET",type:"RESERVED_CLAUSE"}),STRUCT:jE({text:"STRUCT",type:"RESERVED_DATA_TYPE"}),WINDOW:jE({text:"WINDOW",type:"RESERVED_CLAUSE"}),VALUES:jE({text:"VALUES",type:"RESERVED_CLAUSE"})},wn=e=>e==="RESERVED_DATA_TYPE"||e==="RESERVED_KEYWORD"||e==="RESERVED_FUNCTION_NAME"||e==="RESERVED_PHRASE"||e==="RESERVED_CLAUSE"||e==="RESERVED_SELECT"||e==="RESERVED_SET_OPERATION"||e==="RESERVED_JOIN"||e==="ARRAY_KEYWORD"||e==="CASE"||e==="END"||e==="WHEN"||e==="ELSE"||e==="THEN"||e==="LIMIT"||e==="BETWEEN"||e==="AND"||e==="OR"||e==="XOR",tN=e=>e==="AND"||e==="OR"||e==="XOR",TN=["KEYS.NEW_KEYSET","KEYS.ADD_KEY_FROM_RAW_BYTES","AEAD.DECRYPT_BYTES","AEAD.DECRYPT_STRING","AEAD.ENCRYPT","KEYS.KEYSET_CHAIN","KEYS.KEYSET_FROM_JSON","KEYS.KEYSET_TO_JSON","KEYS.ROTATE_KEYSET","KEYS.KEYSET_LENGTH","ANY_VALUE","ARRAY_AGG","AVG","CORR","COUNT","COUNTIF","COVAR_POP","COVAR_SAMP","MAX","MIN","ST_CLUSTERDBSCAN","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","VAR_POP","VAR_SAMP","ANY_VALUE","ARRAY_AGG","ARRAY_CONCAT_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","COUNT","COUNTIF","LOGICAL_AND","LOGICAL_OR","MAX","MIN","STRING_AGG","SUM","APPROX_COUNT_DISTINCT","APPROX_QUANTILES","APPROX_TOP_COUNT","APPROX_TOP_SUM","ARRAY_CONCAT","ARRAY_LENGTH","ARRAY_TO_STRING","GENERATE_ARRAY","GENERATE_DATE_ARRAY","GENERATE_TIMESTAMP_ARRAY","ARRAY_REVERSE","OFFSET","SAFE_OFFSET","ORDINAL","SAFE_ORDINAL","BIT_COUNT","PARSE_BIGNUMERIC","PARSE_NUMERIC","SAFE_CAST","CURRENT_DATE","EXTRACT","DATE","DATE_ADD","DATE_SUB","DATE_DIFF","DATE_TRUNC","DATE_FROM_UNIX_DATE","FORMAT_DATE","LAST_DAY","PARSE_DATE","UNIX_DATE","CURRENT_DATETIME","DATETIME","EXTRACT","DATETIME_ADD","DATETIME_SUB","DATETIME_DIFF","DATETIME_TRUNC","FORMAT_DATETIME","LAST_DAY","PARSE_DATETIME","ERROR","EXTERNAL_QUERY","S2_CELLIDFROMPOINT","S2_COVERINGCELLIDS","ST_ANGLE","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_AZIMUTH","ST_BOUNDARY","ST_BOUNDINGBOX","ST_BUFFER","ST_BUFFERWITHTOLERANCE","ST_CENTROID","ST_CENTROID_AGG","ST_CLOSESTPOINT","ST_CLUSTERDBSCAN","ST_CONTAINS","ST_CONVEXHULL","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DUMP","ST_DWITHIN","ST_ENDPOINT","ST_EQUALS","ST_EXTENT","ST_EXTERIORRING","ST_GEOGFROM","ST_GEOGFROMGEOJSON","ST_GEOGFROMTEXT","ST_GEOGFROMWKB","ST_GEOGPOINT","ST_GEOGPOINTFROMGEOHASH","ST_GEOHASH","ST_GEOMETRYTYPE","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_INTERSECTSBOX","ST_ISCOLLECTION","ST_ISEMPTY","ST_LENGTH","ST_MAKELINE","ST_MAKEPOLYGON","ST_MAKEPOLYGONORIENTED","ST_MAXDISTANCE","ST_NPOINTS","ST_NUMGEOMETRIES","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SIMPLIFY","ST_SNAPTOGRID","ST_STARTPOINT","ST_TOUCHES","ST_UNION","ST_UNION_AGG","ST_WITHIN","ST_X","ST_Y","FARM_FINGERPRINT","MD5","SHA1","SHA256","SHA512","HLL_COUNT.INIT","HLL_COUNT.MERGE","HLL_COUNT.MERGE_PARTIAL","HLL_COUNT.EXTRACT","MAKE_INTERVAL","EXTRACT","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL","JSON_EXTRACT","JSON_QUERY","JSON_EXTRACT_SCALAR","JSON_VALUE","JSON_EXTRACT_ARRAY","JSON_QUERY_ARRAY","JSON_EXTRACT_STRING_ARRAY","JSON_VALUE_ARRAY","TO_JSON_STRING","ABS","SIGN","IS_INF","IS_NAN","IEEE_DIVIDE","RAND","SQRT","POW","POWER","EXP","LN","LOG","LOG10","GREATEST","LEAST","DIV","SAFE_DIVIDE","SAFE_MULTIPLY","SAFE_NEGATE","SAFE_ADD","SAFE_SUBTRACT","MOD","ROUND","TRUNC","CEIL","CEILING","FLOOR","COS","COSH","ACOS","ACOSH","SIN","SINH","ASIN","ASINH","TAN","TANH","ATAN","ATANH","ATAN2","RANGE_BUCKET","FIRST_VALUE","LAST_VALUE","NTH_VALUE","LEAD","LAG","PERCENTILE_CONT","PERCENTILE_DISC","NET.IP_FROM_STRING","NET.SAFE_IP_FROM_STRING","NET.IP_TO_STRING","NET.IP_NET_MASK","NET.IP_TRUNC","NET.IPV4_FROM_INT64","NET.IPV4_TO_INT64","NET.HOST","NET.PUBLIC_SUFFIX","NET.REG_DOMAIN","RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","NTILE","ROW_NUMBER","SESSION_USER","CORR","COVAR_POP","COVAR_SAMP","STDDEV_POP","STDDEV_SAMP","STDDEV","VAR_POP","VAR_SAMP","VARIANCE","ASCII","BYTE_LENGTH","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CODE_POINTS_TO_BYTES","CODE_POINTS_TO_STRING","CONCAT","CONTAINS_SUBSTR","ENDS_WITH","FORMAT","FROM_BASE32","FROM_BASE64","FROM_HEX","INITCAP","INSTR","LEFT","LENGTH","LPAD","LOWER","LTRIM","NORMALIZE","NORMALIZE_AND_CASEFOLD","OCTET_LENGTH","REGEXP_CONTAINS","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","REPEAT","REVERSE","RIGHT","RPAD","RTRIM","SAFE_CONVERT_BYTES_TO_STRING","SOUNDEX","SPLIT","STARTS_WITH","STRPOS","SUBSTR","SUBSTRING","TO_BASE32","TO_BASE64","TO_CODE_POINTS","TO_HEX","TRANSLATE","TRIM","UNICODE","UPPER","CURRENT_TIME","TIME","EXTRACT","TIME_ADD","TIME_SUB","TIME_DIFF","TIME_TRUNC","FORMAT_TIME","PARSE_TIME","CURRENT_TIMESTAMP","EXTRACT","STRING","TIMESTAMP","TIMESTAMP_ADD","TIMESTAMP_SUB","TIMESTAMP_DIFF","TIMESTAMP_TRUNC","FORMAT_TIMESTAMP","PARSE_TIMESTAMP","TIMESTAMP_SECONDS","TIMESTAMP_MILLIS","TIMESTAMP_MICROS","UNIX_SECONDS","UNIX_MILLIS","UNIX_MICROS","GENERATE_UUID","COALESCE","IF","IFNULL","NULLIF","AVG","BIT_AND","BIT_OR","BIT_XOR","CORR","COUNT","COVAR_POP","COVAR_SAMP","EXACT_COUNT_DISTINCT","FIRST","GROUP_CONCAT","GROUP_CONCAT_UNQUOTED","LAST","MAX","MIN","NEST","NTH","QUANTILES","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","TOP","UNIQUE","VARIANCE","VAR_POP","VAR_SAMP","BIT_COUNT","BOOLEAN","BYTES","CAST","FLOAT","HEX_STRING","INTEGER","STRING","COALESCE","GREATEST","IFNULL","IS_INF","IS_NAN","IS_EXPLICITLY_DEFINED","LEAST","NVL","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE","DATE_ADD","DATEDIFF","DAY","DAYOFWEEK","DAYOFYEAR","FORMAT_UTC_USEC","HOUR","MINUTE","MONTH","MSEC_TO_TIMESTAMP","NOW","PARSE_UTC_USEC","QUARTER","SEC_TO_TIMESTAMP","SECOND","STRFTIME_UTC_USEC","TIME","TIMESTAMP","TIMESTAMP_TO_MSEC","TIMESTAMP_TO_SEC","TIMESTAMP_TO_USEC","USEC_TO_TIMESTAMP","UTC_USEC_TO_DAY","UTC_USEC_TO_HOUR","UTC_USEC_TO_MONTH","UTC_USEC_TO_WEEK","UTC_USEC_TO_YEAR","WEEK","YEAR","FORMAT_IP","PARSE_IP","FORMAT_PACKED_IP","PARSE_PACKED_IP","JSON_EXTRACT","JSON_EXTRACT_SCALAR","ABS","ACOS","ACOSH","ASIN","ASINH","ATAN","ATANH","ATAN2","CEIL","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG2","LOG10","PI","POW","RADIANS","RAND","ROUND","SIN","SINH","SQRT","TAN","TANH","REGEXP_MATCH","REGEXP_EXTRACT","REGEXP_REPLACE","CONCAT","INSTR","LEFT","LENGTH","LOWER","LPAD","LTRIM","REPLACE","RIGHT","RPAD","RTRIM","SPLIT","SUBSTR","UPPER","TABLE_DATE_RANGE","TABLE_DATE_RANGE_STRICT","TABLE_QUERY","HOST","DOMAIN","TLD","AVG","COUNT","MAX","MIN","STDDEV","SUM","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER","CURRENT_USER","EVERY","FROM_BASE64","HASH","FARM_FINGERPRINT","IF","POSITION","SHA1","SOME","TO_BASE64","BQ.JOBS.CANCEL","BQ.REFRESH_MATERIALIZED_VIEW","OPTIONS","PIVOT","UNPIVOT"],rN=["ALL","AND","ANY","AS","ASC","ASSERT_ROWS_MODIFIED","AT","BETWEEN","BY","CASE","CAST","COLLATE","CONTAINS","CREATE","CROSS","CUBE","CURRENT","DEFAULT","DEFINE","DESC","DISTINCT","ELSE","END","ENUM","ESCAPE","EXCEPT","EXCLUDE","EXISTS","EXTRACT","FALSE","FETCH","FOLLOWING","FOR","FROM","FULL","GROUP","GROUPING","GROUPS","HASH","HAVING","IF","IGNORE","IN","INNER","INTERSECT","INTO","IS","JOIN","LATERAL","LEFT","LIMIT","LOOKUP","MERGE","NATURAL","NEW","NO","NOT","NULL","NULLS","OF","ON","OR","ORDER","OUTER","OVER","PARTITION","PRECEDING","PROTO","RANGE","RECURSIVE","RESPECT","RIGHT","ROLLUP","ROWS","SELECT","SET","SOME","TABLE","TABLESAMPLE","THEN","TO","TREAT","TRUE","UNBOUNDED","UNION","UNNEST","USING","WHEN","WHERE","WINDOW","WITH","WITHIN","SAFE","LIKE","COPY","CLONE","IN","OUT","INOUT","RETURNS","LANGUAGE","CASCADE","RESTRICT","DETERMINISTIC"],sN=["ARRAY","BOOL","BYTES","DATE","DATETIME","GEOGRAPHY","INTERVAL","INT64","INT","SMALLINT","INTEGER","BIGINT","TINYINT","BYTEINT","NUMERIC","DECIMAL","BIGNUMERIC","BIGDECIMAL","FLOAT64","STRING","STRUCT","TIME","TIMEZONE"],RN=M(["SELECT [ALL | DISTINCT] [AS STRUCT | AS VALUE]"]),AN=M(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","QUALIFY","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","OMIT RECORD IF","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY SOURCE | BY TARGET] [THEN]","UPDATE SET","CLUSTER BY","FOR SYSTEM_TIME AS OF","WITH CONNECTION","WITH PARTITION COLUMNS","REMOTE WITH CONNECTION"]),sR=M(["CREATE [OR REPLACE] [TEMP|TEMPORARY|SNAPSHOT|EXTERNAL] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE","DELETE [FROM]","DROP [SNAPSHOT | EXTERNAL] TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME TO","ALTER COLUMN [IF EXISTS]","SET DEFAULT COLLATE","SET OPTIONS","DROP NOT NULL","SET DATA TYPE","ALTER SCHEMA [IF EXISTS]","ALTER [MATERIALIZED] VIEW [IF EXISTS]","ALTER BI_CAPACITY","TRUNCATE TABLE","CREATE SCHEMA [IF NOT EXISTS]","DEFAULT COLLATE","CREATE [OR REPLACE] [TEMP|TEMPORARY|TABLE] FUNCTION [IF NOT EXISTS]","CREATE [OR REPLACE] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] ROW ACCESS POLICY [IF NOT EXISTS]","GRANT TO","FILTER USING","CREATE CAPACITY","AS JSON","CREATE RESERVATION","CREATE ASSIGNMENT","CREATE SEARCH INDEX [IF NOT EXISTS]","DROP SCHEMA [IF EXISTS]","DROP [MATERIALIZED] VIEW [IF EXISTS]","DROP [TABLE] FUNCTION [IF EXISTS]","DROP PROCEDURE [IF EXISTS]","DROP ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","DROP CAPACITY [IF EXISTS]","DROP RESERVATION [IF EXISTS]","DROP ASSIGNMENT [IF EXISTS]","DROP SEARCH INDEX [IF EXISTS]","DROP [IF EXISTS]","GRANT","REVOKE","DECLARE","EXECUTE IMMEDIATE","LOOP","END LOOP","REPEAT","END REPEAT","WHILE","END WHILE","BREAK","LEAVE","CONTINUE","ITERATE","FOR","END FOR","BEGIN","BEGIN TRANSACTION","COMMIT TRANSACTION","ROLLBACK TRANSACTION","RAISE","RETURN","CALL","ASSERT","EXPORT DATA"]),nN=M(["UNION {ALL | DISTINCT}","EXCEPT DISTINCT","INTERSECT DISTINCT"]),SN=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),iN=M(["TABLESAMPLE SYSTEM","ANY TYPE","ALL COLUMNS","NOT DETERMINISTIC","{ROWS | RANGE} BETWEEN","IS [NOT] DISTINCT FROM"]),oN={name:"bigquery",tokenizerOptions:{reservedSelect:RN,reservedClauses:[...AN,...sR],reservedSetOperations:nN,reservedJoins:SN,reservedPhrases:iN,reservedKeywords:rN,reservedDataTypes:sN,reservedFunctionNames:TN,extraParens:["[]"],stringTypes:[{quote:'""".."""',prefixes:["R","B","RB","BR"]},{quote:"'''..'''",prefixes:["R","B","RB","BR"]},'""-bs',"''-bs",{quote:'""-raw',prefixes:["R","B","RB","BR"],requirePrefix:!0},{quote:"''-raw",prefixes:["R","B","RB","BR"],requirePrefix:!0}],identTypes:["``"],identChars:{dashes:!0},paramTypes:{positional:!0,named:["@"],quoted:["@"]},variableTypes:[{regex:String.raw`@@\w+`}],lineCommentTypes:["--","#"],operators:["&","|","^","~",">>","<<","||","=>"],postProcess:ON},formatOptions:{onelineClauses:sR}};function ON(e){return IN(NN(e))}function IN(e){let E=Rt;return e.map(t=>t.text==="OFFSET"&&E.text==="["?(E=t,Ve(Be({},t),{type:"RESERVED_FUNCTION_NAME"})):(E=t,t))}function NN(e){var E;const t=[];for(let T=0;T<e.length;T++){const r=e[T];if((xE.ARRAY(r)||xE.STRUCT(r))&&((E=e[T+1])==null?void 0:E.text)==="<"){const s=aN(e,T+1),R=e.slice(T,s+1);t.push({type:"IDENTIFIER",raw:R.map(RR("raw")).join(""),text:R.map(RR("text")).join(""),start:r.start}),T=s}else t.push(r)}return t}var RR=e=>E=>E.type==="IDENTIFIER"||E.type==="COMMA"?E[e]+" ":E[e];function aN(e,E){let t=0;for(let T=E;T<e.length;T++){const r=e[T];if(r.text==="<"?t++:r.text===">"?t--:r.text===">>"&&(t-=2),t===0)return T}return e.length-1}var _N=["ARRAY_AGG","AVG","CORRELATION","COUNT","COUNT_BIG","COVARIANCE","COVARIANCE_SAMP","CUME_DIST","GROUPING","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_ICPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV","STDDEV_SAMP","SUM","VARIANCE","VARIANCE_SAMP","XMLAGG","XMLGROUP","ABS","ABSVAL","ACOS","ADD_DAYS","ADD_HOURS","ADD_MINUTES","ADD_MONTHS","ADD_SECONDS","ADD_YEARS","AGE","ARRAY_DELETE","ARRAY_FIRST","ARRAY_LAST","ARRAY_NEXT","ARRAY_PRIOR","ASCII","ASCII_STR","ASIN","ATAN","ATAN2","ATANH","BITAND","BITANDNOT","BITOR","BITXOR","BITNOT","BPCHAR","BSON_TO_JSON","BTRIM","CARDINALITY","CEILING","CEIL","CHARACTER_LENGTH","CHR","COALESCE","COLLATION_KEY","COLLATION_KEY_BIT","COMPARE_DECFLOAT","CONCAT","COS","COSH","COT","CURSOR_ROWCOUNT","DATAPARTITIONNUM","DATE_PART","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFWEEK_ISO","DAYOFYEAR","DAYS","DAYS_BETWEEN","DAYS_TO_END_OF_MONTH","DBPARTITIONNUM","DECFLOAT","DECFLOAT_FORMAT","DECODE","DECRYPT_BIN","DECRYPT_CHAR","DEGREES","DEREF","DIFFERENCE","DIGITS","DOUBLE_PRECISION","EMPTY_BLOB","EMPTY_CLOB","EMPTY_DBCLOB","EMPTY_NCLOB","ENCRYPT","EVENT_MON_STATE","EXP","EXTRACT","FIRST_DAY","FLOOR","FROM_UTC_TIMESTAMP","GENERATE_UNIQUE","GETHINT","GREATEST","HASH","HASH4","HASH8","HASHEDVALUE","HEX","HEXTORAW","HOUR","HOURS_BETWEEN","IDENTITY_VAL_LOCAL","IFNULL","INITCAP","INSERT","INSTR","INSTR2","INSTR4","INSTRB","INTNAND","INTNOR","INTNXOR","INTNNOT","ISNULL","JSON_ARRAY","JSON_OBJECT","JSON_QUERY","JSON_TO_BSON","JSON_VALUE","JULIAN_DAY","LAST_DAY","LCASE","LEAST","LEFT","LENGTH","LENGTH2","LENGTH4","LENGTHB","LN","LOCATE","LOCATE_IN_STRING","LOG10","LONG_VARCHAR","LONG_VARGRAPHIC","LOWER","LPAD","LTRIM","MAX","MAX_CARDINALITY","MICROSECOND","MIDNIGHT_SECONDS","MIN","MINUTE","MINUTES_BETWEEN","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","MULTIPLY_ALT","NEXT_DAY","NEXT_MONTH","NEXT_QUARTER","NEXT_WEEK","NEXT_YEAR","NORMALIZE_DECFLOAT","NOW","NULLIF","NVL","NVL2","OCTET_LENGTH","OVERLAY","PARAMETER","POSITION","POSSTR","POW","POWER","QUANTIZE","QUARTER","QUOTE_IDENT","QUOTE_LITERAL","RADIANS","RAISE_ERROR","RAND","RANDOM","RAWTOHEX","REC2XML","REGEXP_COUNT","REGEXP_EXTRACT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_MATCH_COUNT","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","RID","RID_BIT","RIGHT","ROUND","ROUND_TIMESTAMP","RPAD","RTRIM","SECLABEL","SECLABEL_BY_NAME","SECLABEL_TO_CHAR","SECOND","SECONDS_BETWEEN","SIGN","SIN","SINH","SOUNDEX","SPACE","SQRT","STRIP","STRLEFT","STRPOS","STRRIGHT","SUBSTR","SUBSTR2","SUBSTR4","SUBSTRB","SUBSTRING","TABLE_NAME","TABLE_SCHEMA","TAN","TANH","THIS_MONTH","THIS_QUARTER","THIS_WEEK","THIS_YEAR","TIMESTAMP_FORMAT","TIMESTAMP_ISO","TIMESTAMPDIFF","TIMEZONE","TO_CHAR","TO_CLOB","TO_DATE","TO_HEX","TO_MULTI_BYTE","TO_NCHAR","TO_NCLOB","TO_NUMBER","TO_SINGLE_BYTE","TO_TIMESTAMP","TO_UTC_TIMESTAMP","TOTALORDER","TRANSLATE","TRIM","TRIM_ARRAY","TRUNC_TIMESTAMP","TRUNCATE","TRUNC","TYPE_ID","TYPE_NAME","TYPE_SCHEMA","UCASE","UNICODE_STR","UPPER","VALUE","VARCHAR_BIT_FORMAT","VARCHAR_FORMAT","VARCHAR_FORMAT_BIT","VERIFY_GROUP_FOR_USER","VERIFY_ROLE_FOR_USER","VERIFY_TRUSTED_CONTEXT_ROLE_FOR_USER","WEEK","WEEK_ISO","WEEKS_BETWEEN","WIDTH_BUCKET","XMLATTRIBUTES","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLQUERY","XMLROW","XMLSERIALIZE","XMLTEXT","XMLVALIDATE","XMLXSROBJECTID","XSLTRANSFORM","YEAR","YEARS_BETWEEN","YMD_BETWEEN","BASE_TABLE","JSON_TABLE","UNNEST","XMLTABLE","RANK","DENSE_RANK","NTILE","LAG","LEAD","ROW_NUMBER","FIRST_VALUE","LAST_VALUE","NTH_VALUE","RATIO_TO_REPORT","CAST"],lN=["ACTIVATE","ADD","AFTER","ALIAS","ALL","ALLOCATE","ALLOW","ALTER","AND","ANY","AS","ASENSITIVE","ASSOCIATE","ASUTIME","AT","ATTRIBUTES","AUDIT","AUTHORIZATION","AUX","AUXILIARY","BEFORE","BEGIN","BETWEEN","BINARY","BUFFERPOOL","BY","CACHE","CALL","CALLED","CAPTURE","CARDINALITY","CASCADED","CASE","CAST","CHECK","CLONE","CLOSE","CLUSTER","COLLECTION","COLLID","COLUMN","COMMENT","COMMIT","CONCAT","CONDITION","CONNECT","CONNECTION","CONSTRAINT","CONTAINS","CONTINUE","COUNT","COUNT_BIG","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_LC_CTYPE","CURRENT_PATH","CURRENT_SCHEMA","CURRENT_SERVER","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","CURSOR","CYCLE","DATA","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYS","DB2GENERAL","DB2GENRL","DB2SQL","DBINFO","DBPARTITIONNAME","DBPARTITIONNUM","DEALLOCATE","DECLARE","DEFAULT","DEFAULTS","DEFINITION","DELETE","DENSERANK","DENSE_RANK","DESCRIBE","DESCRIPTOR","DETERMINISTIC","DIAGNOSTICS","DISABLE","DISALLOW","DISCONNECT","DISTINCT","DO","DOCUMENT","DROP","DSSIZE","DYNAMIC","EACH","EDITPROC","ELSE","ELSEIF","ENABLE","ENCODING","ENCRYPTION","END","END-EXEC","ENDING","ERASE","ESCAPE","EVERY","EXCEPT","EXCEPTION","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXPLAIN","EXTENDED","EXTERNAL","EXTRACT","FENCED","FETCH","FIELDPROC","FILE","FINAL","FIRST1","FOR","FOREIGN","FREE","FROM","FULL","FUNCTION","GENERAL","GENERATED","GET","GLOBAL","GO","GOTO","GRANT","GRAPHIC","GROUP","HANDLER","HASH","HASHED_VALUE","HAVING","HINT","HOLD","HOUR","HOURS","IDENTITY","IF","IMMEDIATE","IMPORT","IN","INCLUDING","INCLUSIVE","INCREMENT","INDEX","INDICATOR","INDICATORS","INF","INFINITY","INHERIT","INNER","INOUT","INSENSITIVE","INSERT","INTEGRITY","INTERSECT","INTO","IS","ISNULL","ISOBID","ISOLATION","ITERATE","JAR","JAVA","JOIN","KEEP","KEY","LABEL","LANGUAGE","LAST3","LATERAL","LC_CTYPE","LEAVE","LEFT","LIKE","LIMIT","LINKTYPE","LOCAL","LOCALDATE","LOCALE","LOCALTIME","LOCALTIMESTAMP","LOCATOR","LOCATORS","LOCK","LOCKMAX","LOCKSIZE","LOOP","MAINTAINED","MATERIALIZED","MAXVALUE","MICROSECOND","MICROSECONDS","MINUTE","MINUTES","MINVALUE","MODE","MODIFIES","MONTH","MONTHS","NAN","NEW","NEW_TABLE","NEXTVAL","NO","NOCACHE","NOCYCLE","NODENAME","NODENUMBER","NOMAXVALUE","NOMINVALUE","NONE","NOORDER","NORMALIZED","NOT2","NOTNULL","NULL","NULLS","NUMPARTS","OBID","OF","OFF","OFFSET","OLD","OLD_TABLE","ON","OPEN","OPTIMIZATION","OPTIMIZE","OPTION","OR","ORDER","OUT","OUTER","OVER","OVERRIDING","PACKAGE","PADDED","PAGESIZE","PARAMETER","PART","PARTITION","PARTITIONED","PARTITIONING","PARTITIONS","PASSWORD","PATH","PERCENT","PIECESIZE","PLAN","POSITION","PRECISION","PREPARE","PREVVAL","PRIMARY","PRIQTY","PRIVILEGES","PROCEDURE","PROGRAM","PSID","PUBLIC","QUERY","QUERYNO","RANGE","RANK","READ","READS","RECOVERY","REFERENCES","REFERENCING","REFRESH","RELEASE","RENAME","REPEAT","RESET","RESIGNAL","RESTART","RESTRICT","RESULT","RESULT_SET_LOCATOR","RETURN","RETURNS","REVOKE","RIGHT","ROLE","ROLLBACK","ROUND_CEILING","ROUND_DOWN","ROUND_FLOOR","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_UP","ROUND_UP","ROUTINE","ROW","ROWNUMBER","ROWS","ROWSET","ROW_NUMBER","RRN","RUN","SAVEPOINT","SCHEMA","SCRATCHPAD","SCROLL","SEARCH","SECOND","SECONDS","SECQTY","SECURITY","SELECT","SENSITIVE","SEQUENCE","SESSION","SESSION_USER","SET","SIGNAL","SIMPLE","SNAN","SOME","SOURCE","SPECIFIC","SQL","SQLID","STACKED","STANDARD","START","STARTING","STATEMENT","STATIC","STATMENT","STAY","STOGROUP","STORES","STYLE","SUBSTRING","SUMMARY","SYNONYM","SYSFUN","SYSIBM","SYSPROC","SYSTEM","SYSTEM_USER","TABLE","TABLESPACE","THEN","TO","TRANSACTION","TRIGGER","TRIM","TRUNCATE","TYPE","UNDO","UNION","UNIQUE","UNTIL","UPDATE","USAGE","USER","USING","VALIDPROC","VALUE","VALUES","VARIABLE","VARIANT","VCAT","VERSION","VIEW","VOLATILE","VOLUMES","WHEN","WHENEVER","WHERE","WHILE","WITH","WITHOUT","WLM","WRITE","XMLELEMENT","XMLEXISTS","XMLNAMESPACES","YEAR","YEARS"],CN=["ARRAY","BIGINT","BINARY","BLOB","BOOLEAN","CCSID","CHAR","CHARACTER","CLOB","DATE","DATETIME","DBCLOB","DEC","DECIMAL","DOUBLE","DOUBLE PRECISION","FLOAT","FLOAT4","FLOAT8","GRAPHIC","INT","INT2","INT4","INT8","INTEGER","INTERVAL","LONG VARCHAR","LONG VARGRAPHIC","NCHAR","NCHR","NCLOB","NVARCHAR","NUMERIC","SMALLINT","REAL","TIME","TIMESTAMP","VARBINARY","VARCHAR","VARGRAPHIC"],LN=M(["SELECT [ALL | DISTINCT]"]),cN=M(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY [INPUT SEQUENCE]","LIMIT","OFFSET","FETCH NEXT","FOR UPDATE [OF]","FOR {READ | FETCH} ONLY","FOR {RR | CS | UR | RS} [USE AND KEEP {SHARE | UPDATE | EXCLUSIVE} LOCKS]","WAIT FOR OUTCOME","SKIP LOCKED DATA","INTO","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT"]),AR=M(["CREATE [GLOBAL TEMPORARY | EXTERNAL] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] VIEW","UPDATE","WHERE CURRENT OF","WITH {RR | RS | CS | UR}","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME COLUMN","ALTER [COLUMN]","SET DATA TYPE","SET NOT NULL","DROP {DEFAULT | GENERATED | NOT NULL}","TRUNCATE [TABLE]","ALLOCATE","ALTER AUDIT POLICY","ALTER BUFFERPOOL","ALTER DATABASE PARTITION GROUP","ALTER DATABASE","ALTER EVENT MONITOR","ALTER FUNCTION","ALTER HISTOGRAM TEMPLATE","ALTER INDEX","ALTER MASK","ALTER METHOD","ALTER MODULE","ALTER NICKNAME","ALTER PACKAGE","ALTER PERMISSION","ALTER PROCEDURE","ALTER SCHEMA","ALTER SECURITY LABEL COMPONENT","ALTER SECURITY POLICY","ALTER SEQUENCE","ALTER SERVER","ALTER SERVICE CLASS","ALTER STOGROUP","ALTER TABLESPACE","ALTER THRESHOLD","ALTER TRIGGER","ALTER TRUSTED CONTEXT","ALTER TYPE","ALTER USAGE LIST","ALTER USER MAPPING","ALTER VIEW","ALTER WORK ACTION SET","ALTER WORK CLASS SET","ALTER WORKLOAD","ALTER WRAPPER","ALTER XSROBJECT","ALTER STOGROUP","ALTER TABLESPACE","ALTER TRIGGER","ALTER TRUSTED CONTEXT","ALTER VIEW","ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}","AUDIT","BEGIN DECLARE SECTION","CALL","CLOSE","COMMENT ON","COMMIT [WORK]","CONNECT","CREATE [OR REPLACE] [PUBLIC] ALIAS","CREATE AUDIT POLICY","CREATE BUFFERPOOL","CREATE DATABASE PARTITION GROUP","CREATE EVENT MONITOR","CREATE [OR REPLACE] FUNCTION","CREATE FUNCTION MAPPING","CREATE HISTOGRAM TEMPLATE","CREATE [UNIQUE] INDEX","CREATE INDEX EXTENSION","CREATE [OR REPLACE] MASK","CREATE [SPECIFIC] METHOD","CREATE [OR REPLACE] MODULE","CREATE [OR REPLACE] NICKNAME","CREATE [OR REPLACE] PERMISSION","CREATE [OR REPLACE] PROCEDURE","CREATE ROLE","CREATE SCHEMA","CREATE SECURITY LABEL [COMPONENT]","CREATE SECURITY POLICY","CREATE [OR REPLACE] SEQUENCE","CREATE SERVICE CLASS","CREATE SERVER","CREATE STOGROUP","CREATE SYNONYM","CREATE [LARGE | REGULAR | {SYSTEM | USER} TEMPORARY] TABLESPACE","CREATE THRESHOLD","CREATE {TRANSFORM | TRANSFORMS} FOR","CREATE [OR REPLACE] TRIGGER","CREATE TRUSTED CONTEXT","CREATE [OR REPLACE] TYPE","CREATE TYPE MAPPING","CREATE USAGE LIST","CREATE USER MAPPING FOR","CREATE [OR REPLACE] VARIABLE","CREATE WORK ACTION SET","CREATE WORK CLASS SET","CREATE WORKLOAD","CREATE WRAPPER","DECLARE","DECLARE GLOBAL TEMPORARY TABLE","DESCRIBE [INPUT | OUTPUT]","DISCONNECT","DROP [PUBLIC] ALIAS","DROP AUDIT POLICY","DROP BUFFERPOOL","DROP DATABASE PARTITION GROUP","DROP EVENT MONITOR","DROP [SPECIFIC] FUNCTION","DROP FUNCTION MAPPING","DROP HISTOGRAM TEMPLATE","DROP INDEX [EXTENSION]","DROP MASK","DROP [SPECIFIC] METHOD","DROP MODULE","DROP NICKNAME","DROP PACKAGE","DROP PERMISSION","DROP [SPECIFIC] PROCEDURE","DROP ROLE","DROP SCHEMA","DROP SECURITY LABEL [COMPONENT]","DROP SECURITY POLICY","DROP SEQUENCE","DROP SERVER","DROP SERVICE CLASS","DROP STOGROUP","DROP TABLE HIERARCHY","DROP {TABLESPACE | TABLESPACES}","DROP {TRANSFORM | TRANSFORMS}","DROP THRESHOLD","DROP TRIGGER","DROP TRUSTED CONTEXT","DROP TYPE [MAPPING]","DROP USAGE LIST","DROP USER MAPPING FOR","DROP VARIABLE","DROP VIEW [HIERARCHY]","DROP WORK {ACTION | CLASS} SET","DROP WORKLOAD","DROP WRAPPER","DROP XSROBJECT","END DECLARE SECTION","EXECUTE [IMMEDIATE]","EXPLAIN {PLAN [SECTION] | ALL}","FETCH [FROM]","FLUSH {BUFFERPOOL | BUFFERPOOLS} ALL","FLUSH EVENT MONITOR","FLUSH FEDERATED CACHE","FLUSH OPTIMIZATION PROFILE CACHE","FLUSH PACKAGE CACHE [DYNAMIC]","FLUSH AUTHENTICATION CACHE [FOR ALL]","FREE LOCATOR","GET DIAGNOSTICS","GOTO","GRANT","INCLUDE","ITERATE","LEAVE","LOCK TABLE","LOOP","OPEN","PIPE","PREPARE","REFRESH TABLE","RELEASE","RELEASE [TO] SAVEPOINT","RENAME [TABLE | INDEX | STOGROUP | TABLESPACE]","REPEAT","RESIGNAL","RETURN","REVOKE","ROLLBACK [WORK] [TO SAVEPOINT]","SAVEPOINT","SET COMPILATION ENVIRONMENT","SET CONNECTION","SET CURRENT","SET ENCRYPTION PASSWORD","SET EVENT MONITOR STATE","SET INTEGRITY","SET PASSTHRU","SET PATH","SET ROLE","SET SCHEMA","SET SERVER OPTION","SET {SESSION AUTHORIZATION | SESSION_USER}","SET USAGE LIST","SIGNAL","TRANSFER OWNERSHIP OF","WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}","WHILE"]),uN=M(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),PN=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),DN=M(["ON DELETE","ON UPDATE","SET NULL","{ROWS | RANGE} BETWEEN"]),fN={name:"db2",tokenizerOptions:{reservedSelect:LN,reservedClauses:[...cN,...AR],reservedSetOperations:uN,reservedJoins:PN,reservedPhrases:DN,reservedKeywords:lN,reservedDataTypes:CN,reservedFunctionNames:_N,extraParens:["[]"],stringTypes:[{quote:"''-qq",prefixes:["G","N","U&"]},{quote:"''-raw",prefixes:["X","BX","GX","UX"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{first:"@#$",rest:"@#$"},paramTypes:{positional:!0,named:[":"]},paramChars:{first:"@#$",rest:"@#$"},operators:["**","%","|","&","^","~","¬=","¬>","¬<","!>","!<","^=","^>","^<","||","->","=>"]},formatOptions:{onelineClauses:AR}},MN=["ARRAY_AGG","AVG","CORR","CORRELATION","COUNT","COUNT_BIG","COVAR_POP","COVARIANCE","COVAR","COVAR_SAMP","COVARIANCE_SAMP","EVERY","GROUPING","JSON_ARRAYAGG","JSON_OBJECTAGG","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","SOME","STDDEV_POP","STDDEV","STDDEV_SAMP","SUM","VAR_POP","VARIANCE","VAR","VAR_SAMP","VARIANCE_SAMP","XMLAGG","XMLGROUP","ABS","ABSVAL","ACOS","ADD_DAYS","ADD_HOURS","ADD_MINUTES","ADD_MONTHS","ADD_SECONDS","ADD_YEARS","ANTILOG","ARRAY_MAX_CARDINALITY","ARRAY_TRIM","ASCII","ASIN","ATAN","ATAN2","ATANH","BASE64_DECODE","BASE64_ENCODE","BIT_LENGTH","BITAND","BITANDNOT","BITNOT","BITOR","BITXOR","BSON_TO_JSON","CARDINALITY","CEIL","CEILING","CHAR_LENGTH","CHARACTER_LENGTH","CHR","COALESCE","COMPARE_DECFLOAT","CONCAT","CONTAINS","COS","COSH","COT","CURDATE","CURTIME","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK_ISO","DAYOFWEEK","DAYOFYEAR","DAYS","DBPARTITIONNAME","DBPARTITIONNUM","DECFLOAT_FORMAT","DECFLOAT_SORTKEY","DECRYPT_BINARY","DECRYPT_BIT","DECRYPT_CHAR","DECRYPT_DB","DEGREES","DIFFERENCE","DIGITS","DLCOMMENT","DLLINKTYPE","DLURLCOMPLETE","DLURLPATH","DLURLPATHONLY","DLURLSCHEME","DLURLSERVER","DLVALUE","DOUBLE_PRECISION","DOUBLE","ENCRPYT","ENCRYPT_AES","ENCRYPT_AES256","ENCRYPT_RC2","ENCRYPT_TDES","EXP","EXTRACT","FIRST_DAY","FLOOR","GENERATE_UNIQUE","GET_BLOB_FROM_FILE","GET_CLOB_FROM_FILE","GET_DBCLOB_FROM_FILE","GET_XML_FILE","GETHINT","GREATEST","HASH_MD5","HASH_ROW","HASH_SHA1","HASH_SHA256","HASH_SHA512","HASH_VALUES","HASHED_VALUE","HEX","HEXTORAW","HOUR","HTML_ENTITY_DECODE","HTML_ENTITY_ENCODE","HTTP_DELETE_BLOB","HTTP_DELETE","HTTP_GET_BLOB","HTTP_GET","HTTP_PATCH_BLOB","HTTP_PATCH","HTTP_POST_BLOB","HTTP_POST","HTTP_PUT_BLOB","HTTP_PUT","IDENTITY_VAL_LOCAL","IFNULL","INSERT","INSTR","INTERPRET","ISFALSE","ISNOTFALSE","ISNOTTRUE","ISTRUE","JSON_ARRAY","JSON_OBJECT","JSON_QUERY","JSON_TO_BSON","JSON_UPDATE","JSON_VALUE","JULIAN_DAY","LAND","LAST_DAY","LCASE","LEAST","LEFT","LENGTH","LN","LNOT","LOCATE_IN_STRING","LOCATE","LOG10","LOR","LOWER","LPAD","LTRIM","MAX_CARDINALITY","MAX","MICROSECOND","MIDNIGHT_SECONDS","MIN","MINUTE","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","MQREAD","MQREADCLOB","MQRECEIVE","MQRECEIVECLOB","MQSEND","MULTIPLY_ALT","NEXT_DAY","NORMALIZE_DECFLOAT","NOW","NULLIF","NVL","OCTET_LENGTH","OVERLAY","PI","POSITION","POSSTR","POW","POWER","QUANTIZE","QUARTER","RADIANS","RAISE_ERROR","RANDOM","RAND","REGEXP_COUNT","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","RID","RIGHT","ROUND_TIMESTAMP","ROUND","RPAD","RRN","RTRIM","SCORE","SECOND","SIGN","SIN","SINH","SOUNDEX","SPACE","SQRT","STRIP","STRLEFT","STRPOS","STRRIGHT","SUBSTR","SUBSTRING","TABLE_NAME","TABLE_SCHEMA","TAN","TANH","TIMESTAMP_FORMAT","TIMESTAMP_ISO","TIMESTAMPDIFF_BIG","TIMESTAMPDIFF","TO_CHAR","TO_CLOB","TO_DATE","TO_NUMBER","TO_TIMESTAMP","TOTALORDER","TRANSLATE","TRIM_ARRAY","TRIM","TRUNC_TIMESTAMP","TRUNC","TRUNCATE","UCASE","UPPER","URL_DECODE","URL_ENCODE","VALUE","VARBINARY_FORMAT","VARCHAR_BIT_FORMAT","VARCHAR_FORMAT_BINARY","VARCHAR_FORMAT","VERIFY_GROUP_FOR_USER","WEEK_ISO","WEEK","WRAP","XMLATTRIBUTES","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROW","XMLSERIALIZE","XMLTEXT","XMLVALIDATE","XOR","XSLTRANSFORM","YEAR","ZONED","BASE_TABLE","HTTP_DELETE_BLOB_VERBOSE","HTTP_DELETE_VERBOSE","HTTP_GET_BLOB_VERBOSE","HTTP_GET_VERBOSE","HTTP_PATCH_BLOB_VERBOSE","HTTP_PATCH_VERBOSE","HTTP_POST_BLOB_VERBOSE","HTTP_POST_VERBOSE","HTTP_PUT_BLOB_VERBOSE","HTTP_PUT_VERBOSE","JSON_TABLE","MQREADALL","MQREADALLCLOB","MQRECEIVEALL","MQRECEIVEALLCLOB","XMLTABLE","UNPACK","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","RATIO_TO_REPORT","ROW_NUMBER","CAST"],pN=["ABSENT","ACCORDING","ACCTNG","ACTION","ACTIVATE","ADD","ALIAS","ALL","ALLOCATE","ALLOW","ALTER","AND","ANY","APPEND","APPLNAME","ARRAY","ARRAY_AGG","ARRAY_TRIM","AS","ASC","ASENSITIVE","ASSOCIATE","ATOMIC","ATTACH","ATTRIBUTES","AUTHORIZATION","AUTONOMOUS","BEFORE","BEGIN","BETWEEN","BIND","BSON","BUFFERPOOL","BY","CACHE","CALL","CALLED","CARDINALITY","CASE","CAST","CHECK","CL","CLOSE","CLUSTER","COLLECT","COLLECTION","COLUMN","COMMENT","COMMIT","COMPACT","COMPARISONS","COMPRESS","CONCAT","CONCURRENT","CONDITION","CONNECT","CONNECT_BY_ROOT","CONNECTION","CONSTANT","CONSTRAINT","CONTAINS","CONTENT","CONTINUE","COPY","COUNT","COUNT_BIG","CREATE","CREATEIN","CROSS","CUBE","CUME_DIST","CURRENT","CURRENT_DATE","CURRENT_PATH","CURRENT_SCHEMA","CURRENT_SERVER","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","CURSOR","CYCLE","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYS","DB2GENERAL","DB2GENRL","DB2SQL","DBINFO","DBPARTITIONNAME","DBPARTITIONNUM","DEACTIVATE","DEALLOCATE","DECLARE","DEFAULT","DEFAULTS","DEFER","DEFINE","DEFINITION","DELETE","DELETING","DENSE_RANK","DENSERANK","DESC","DESCRIBE","DESCRIPTOR","DETACH","DETERMINISTIC","DIAGNOSTICS","DISABLE","DISALLOW","DISCONNECT","DISTINCT","DO","DOCUMENT","DROP","DYNAMIC","EACH","ELSE","ELSEIF","EMPTY","ENABLE","ENCODING","ENCRYPTION","END","END-EXEC","ENDING","ENFORCED","ERROR","ESCAPE","EVERY","EXCEPT","EXCEPTION","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXTEND","EXTERNAL","EXTRACT","FALSE","FENCED","FETCH","FIELDPROC","FILE","FINAL","FIRST_VALUE","FOR","FOREIGN","FORMAT","FREE","FREEPAGE","FROM","FULL","FUNCTION","GBPCACHE","GENERAL","GENERATED","GET","GLOBAL","GO","GOTO","GRANT","GROUP","HANDLER","HASH","HASH_ROW","HASHED_VALUE","HAVING","HINT","HOLD","HOUR","HOURS","IDENTITY","IF","IGNORE","IMMEDIATE","IMPLICITLY","IN","INCLUDE","INCLUDING","INCLUSIVE","INCREMENT","INDEX","INDEXBP","INDICATOR","INF","INFINITY","INHERIT","INLINE","INNER","INOUT","INSENSITIVE","INSERT","INSERTING","INTEGRITY","INTERPRET","INTERSECT","INTO","IS","ISNULL","ISOLATION","ITERATE","JAVA","JOIN","JSON","JSON_ARRAY","JSON_ARRAYAGG","JSON_EXISTS","JSON_OBJECT","JSON_OBJECTAGG","JSON_QUERY","JSON_TABLE","JSON_VALUE","KEEP","KEY","KEYS","LABEL","LAG","LANGUAGE","LAST_VALUE","LATERAL","LEAD","LEAVE","LEFT","LEVEL2","LIKE","LIMIT","LINKTYPE","LISTAGG","LOCAL","LOCALDATE","LOCALTIME","LOCALTIMESTAMP","LOCATION","LOCATOR","LOCK","LOCKSIZE","LOG","LOGGED","LOOP","MAINTAINED","MASK","MATCHED","MATERIALIZED","MAXVALUE","MERGE","MICROSECOND","MICROSECONDS","MINPCTUSED","MINUTE","MINUTES","MINVALUE","MIRROR","MIXED","MODE","MODIFIES","MONTH","MONTHS","NAMESPACE","NAN","NATIONAL","NCHAR","NCLOB","NESTED","NEW","NEW_TABLE","NEXTVAL","NO","NOCACHE","NOCYCLE","NODENAME","NODENUMBER","NOMAXVALUE","NOMINVALUE","NONE","NOORDER","NORMALIZED","NOT","NOTNULL","NTH_VALUE","NTILE","NULL","NULLS","NVARCHAR","OBID","OBJECT","OF","OFF","OFFSET","OLD","OLD_TABLE","OMIT","ON","ONLY","OPEN","OPTIMIZE","OPTION","OR","ORDER","ORDINALITY","ORGANIZE","OUT","OUTER","OVER","OVERLAY","OVERRIDING","PACKAGE","PADDED","PAGE","PAGESIZE","PARAMETER","PART","PARTITION","PARTITIONED","PARTITIONING","PARTITIONS","PASSING","PASSWORD","PATH","PCTFREE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PERIOD","PERMISSION","PIECESIZE","PIPE","PLAN","POSITION","PREPARE","PREVVAL","PRIMARY","PRIOR","PRIQTY","PRIVILEGES","PROCEDURE","PROGRAM","PROGRAMID","QUERY","RANGE","RANK","RATIO_TO_REPORT","RCDFMT","READ","READS","RECOVERY","REFERENCES","REFERENCING","REFRESH","REGEXP_LIKE","RELEASE","RENAME","REPEAT","RESET","RESIGNAL","RESTART","RESULT","RESULT_SET_LOCATOR","RETURN","RETURNING","RETURNS","REVOKE","RID","RIGHT","ROLLBACK","ROLLUP","ROUTINE","ROW","ROW_NUMBER","ROWNUMBER","ROWS","RRN","RUN","SAVEPOINT","SBCS","SCALAR","SCHEMA","SCRATCHPAD","SCROLL","SEARCH","SECOND","SECONDS","SECQTY","SECURED","SELECT","SENSITIVE","SEQUENCE","SESSION","SESSION_USER","SET","SIGNAL","SIMPLE","SKIP","SNAN","SOME","SOURCE","SPECIFIC","SQL","SQLID","SQLIND_DEFAULT","SQLIND_UNASSIGNED","STACKED","START","STARTING","STATEMENT","STATIC","STOGROUP","SUBSTRING","SUMMARY","SYNONYM","SYSTEM_TIME","SYSTEM_USER","TABLE","TABLESPACE","TABLESPACES","TAG","THEN","THREADSAFE","TO","TRANSACTION","TRANSFER","TRIGGER","TRIM","TRIM_ARRAY","TRUE","TRUNCATE","TRY_CAST","TYPE","UNDO","UNION","UNIQUE","UNIT","UNKNOWN","UNNEST","UNTIL","UPDATE","UPDATING","URI","USAGE","USE","USER","USERID","USING","VALUE","VALUES","VARIABLE","VARIANT","VCAT","VERSION","VERSIONING","VIEW","VOLATILE","WAIT","WHEN","WHENEVER","WHERE","WHILE","WITH","WITHIN","WITHOUT","WRAPPED","WRAPPER","WRITE","WRKSTNNAME","XMLAGG","XMLATTRIBUTES","XMLCAST","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLGROUP","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROW","XMLSERIALIZE","XMLTABLE","XMLTEXT","XMLVALIDATE","XSLTRANSFORM","XSROBJECT","YEAR","YEARS","YES","ZONE"],UN=["ARRAY","BIGINT","BINARY","BIT","BLOB","BOOLEAN","CCSID","CHAR","CHARACTER","CLOB","DATA","DATALINK","DATE","DBCLOB","DECFLOAT","DECIMAL","DEC","DOUBLE","DOUBLE PRECISION","FLOAT","GRAPHIC","INT","INTEGER","LONG","NUMERIC","REAL","ROWID","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR","VARGRAPHIC","XML"],dN=M(["SELECT [ALL | DISTINCT]"]),hN=M(["WITH [RECURSIVE]","INTO","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER [SIBLINGS] BY [INPUT SEQUENCE]","LIMIT","OFFSET","FETCH {FIRST | NEXT}","FOR UPDATE [OF]","FOR READ ONLY","OPTIMIZE FOR","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","DELETE","INSERT","FOR SYSTEM NAME"]),nR=M(["CREATE [OR REPLACE] TABLE","CREATE [OR REPLACE] [RECURSIVE] VIEW","UPDATE","WHERE CURRENT OF","WITH {NC | RR | RS | CS | UR}","DELETE FROM","DROP TABLE","ALTER TABLE","ADD [COLUMN]","ALTER [COLUMN]","DROP [COLUMN]","SET DATA TYPE","SET {GENERATED ALWAYS | GENERATED BY DEFAULT}","SET NOT NULL","SET {NOT HIDDEN | IMPLICITLY HIDDEN}","SET FIELDPROC","DROP {DEFAULT | NOT NULL | GENERATED | IDENTITY | ROW CHANGE TIMESTAMP | FIELDPROC}","TRUNCATE [TABLE]","SET [CURRENT] SCHEMA","SET CURRENT_SCHEMA","ALLOCATE CURSOR","ALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL] SQL","ALTER [SPECIFIC] {FUNCTION | PROCEDURE}","ALTER {MASK | PERMISSION | SEQUENCE | TRIGGER}","ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}","BEGIN DECLARE SECTION","CALL","CLOSE","COMMENT ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PARAMETER | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}","COMMENT ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}","COMMENT ON PARAMETER SPECIFIC {FUNCTION | PROCEDURE | ROUTINE}","COMMENT ON [TABLE FUNCTION] RETURN COLUMN","COMMENT ON [TABLE FUNCTION] RETURN COLUMN SPECIFIC [PROCEDURE | ROUTINE]","COMMIT [WORK] [HOLD]","CONNECT [TO | RESET] USER","CREATE [OR REPLACE] {ALIAS | FUNCTION | MASK | PERMISSION | PROCEDURE | SEQUENCE | TRIGGER | VARIABLE}","CREATE [ENCODED VECTOR] INDEX","CREATE UNIQUE [WHERE NOT NULL] INDEX","CREATE SCHEMA","CREATE TYPE","DEALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL]","DECLARE CURSOR","DECLARE GLOBAL TEMPORARY TABLE","DECLARE","DESCRIBE CURSOR","DESCRIBE INPUT","DESCRIBE [OUTPUT]","DESCRIBE {PROCEDURE | ROUTINE}","DESCRIBE TABLE","DISCONNECT ALL [SQL]","DISCONNECT [CURRENT]","DROP {ALIAS | INDEX | MASK | PACKAGE | PERMISSION | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT} [IF EXISTS]","DROP [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE} [IF EXISTS]","END DECLARE SECTION","EXECUTE [IMMEDIATE]","FREE LOCATOR","GET [SQL] DESCRIPTOR [LOCAL | GLOBAL]","GET [CURRENT | STACKED] DIAGNOSTICS","GRANT {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}","HOLD LOCATOR","INCLUDE","LABEL ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}","LABEL ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}","LOCK TABLE","OPEN","PREPARE","REFRESH TABLE","RELEASE","RELEASE [TO] SAVEPOINT","RENAME [TABLE | INDEX] TO","REVOKE {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}","ROLLBACK [WORK] [HOLD | TO SAVEPOINT]","SAVEPOINT","SET CONNECTION","SET CURRENT {DEBUG MODE | DECFLOAT ROUNDING MODE | DEGREE | IMPLICIT XMLPARSE OPTION | TEMPORAL SYSTEM_TIME}","SET [SQL] DESCRIPTOR [LOCAL | GLOBAL]","SET ENCRYPTION PASSWORD","SET OPTION","SET {[CURRENT [FUNCTION]] PATH | CURRENT_PATH}","SET RESULT SETS [WITH RETURN [TO CALLER | TO CLIENT]]","SET SESSION AUTHORIZATION","SET SESSION_USER","SET TRANSACTION","SIGNAL SQLSTATE [VALUE]","TAG","TRANSFER OWNERSHIP OF","WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}"]),GN=M(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),gN=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","[LEFT | RIGHT] EXCEPTION JOIN","{INNER | CROSS} JOIN"]),mN=M(["ON DELETE","ON UPDATE","SET NULL","{ROWS | RANGE} BETWEEN"]),HN={name:"db2i",tokenizerOptions:{reservedSelect:dN,reservedClauses:[...hN,...nR],reservedSetOperations:GN,reservedJoins:gN,reservedPhrases:mN,reservedKeywords:pN,reservedDataTypes:UN,reservedFunctionNames:MN,nestedBlockComments:!0,extraParens:["[]"],stringTypes:[{quote:"''-qq",prefixes:["G","N"]},{quote:"''-raw",prefixes:["X","BX","GX","UX"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{first:"@#$",rest:"@#$"},paramTypes:{positional:!0,named:[":"]},paramChars:{first:"@#$",rest:"@#$"},operators:["**","¬=","¬>","¬<","!>","!<","||","=>"]},formatOptions:{onelineClauses:nR}},BN=["ABS","ACOS","ASIN","ATAN","BIN","BROUND","CBRT","CEIL","CEILING","CONV","COS","DEGREES","EXP","FACTORIAL","FLOOR","GREATEST","HEX","LEAST","LN","LOG","LOG10","LOG2","NEGATIVE","PI","PMOD","POSITIVE","POW","POWER","RADIANS","RAND","ROUND","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIN","SQRT","TAN","UNHEX","WIDTH_BUCKET","ARRAY_CONTAINS","MAP_KEYS","MAP_VALUES","SIZE","SORT_ARRAY","BINARY","CAST","ADD_MONTHS","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","QUARTER","SECOND","TIMESTAMP","TO_DATE","TO_UTC_TIMESTAMP","TRUNC","UNIX_TIMESTAMP","WEEKOFYEAR","YEAR","ASSERT_TRUE","COALESCE","IF","ISNOTNULL","ISNULL","NULLIF","NVL","ASCII","BASE64","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONTEXT_NGRAMS","DECODE","ELT","ENCODE","FIELD","FIND_IN_SET","FORMAT_NUMBER","GET_JSON_OBJECT","IN_FILE","INITCAP","INSTR","LCASE","LENGTH","LEVENSHTEIN","LOCATE","LOWER","LPAD","LTRIM","NGRAMS","OCTET_LENGTH","PARSE_URL","PRINTF","QUOTE","REGEXP_EXTRACT","REGEXP_REPLACE","REPEAT","REVERSE","RPAD","RTRIM","SENTENCES","SOUNDEX","SPACE","SPLIT","STR_TO_MAP","SUBSTR","SUBSTRING","TRANSLATE","TRIM","UCASE","UNBASE64","UPPER","MASK","MASK_FIRST_N","MASK_HASH","MASK_LAST_N","MASK_SHOW_FIRST_N","MASK_SHOW_LAST_N","AES_DECRYPT","AES_ENCRYPT","CRC32","CURRENT_DATABASE","CURRENT_USER","HASH","JAVA_METHOD","LOGGED_IN_USER","MD5","REFLECT","SHA","SHA1","SHA2","SURROGATE_KEY","VERSION","AVG","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COVAR_POP","COVAR_SAMP","HISTOGRAM_NUMERIC","MAX","MIN","NTILE","PERCENTILE","PERCENTILE_APPROX","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","EXPLODE","INLINE","JSON_TUPLE","PARSE_URL_TUPLE","POSEXPLODE","STACK","LEAD","LAG","FIRST_VALUE","LAST_VALUE","RANK","ROW_NUMBER","DENSE_RANK","CUME_DIST","PERCENT_RANK","NTILE"],bN=["ADD","ADMIN","AFTER","ANALYZE","ARCHIVE","ASC","BEFORE","BUCKET","BUCKETS","CASCADE","CHANGE","CLUSTER","CLUSTERED","CLUSTERSTATUS","COLLECTION","COLUMNS","COMMENT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONTINUE","DATA","DATABASES","DATETIME","DAY","DBPROPERTIES","DEFERRED","DEFINED","DELIMITED","DEPENDENCY","DESC","DIRECTORIES","DIRECTORY","DISABLE","DISTRIBUTE","ELEM_TYPE","ENABLE","ESCAPED","EXCLUSIVE","EXPLAIN","EXPORT","FIELDS","FILE","FILEFORMAT","FIRST","FORMAT","FORMATTED","FUNCTIONS","HOLD_DDLTIME","HOUR","IDXPROPERTIES","IGNORE","INDEX","INDEXES","INPATH","INPUTDRIVER","INPUTFORMAT","ITEMS","JAR","KEYS","KEY_TYPE","LIMIT","LINES","LOAD","LOCATION","LOCK","LOCKS","LOGICAL","LONG","MAPJOIN","MATERIALIZED","METADATA","MINUS","MINUTE","MONTH","MSCK","NOSCAN","NO_DROP","OFFLINE","OPTION","OUTPUTDRIVER","OUTPUTFORMAT","OVERWRITE","OWNER","PARTITIONED","PARTITIONS","PLUS","PRETTY","PRINCIPALS","PROTECTION","PURGE","READ","READONLY","REBUILD","RECORDREADER","RECORDWRITER","RELOAD","RENAME","REPAIR","REPLACE","REPLICATION","RESTRICT","REWRITE","ROLE","ROLES","SCHEMA","SCHEMAS","SECOND","SEMI","SERDE","SERDEPROPERTIES","SERVER","SETS","SHARED","SHOW","SHOW_DATABASE","SKEWED","SORT","SORTED","SSL","STATISTICS","STORED","STREAMTABLE","STRING","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","TINYINT","TOUCH","TRANSACTIONS","UNARCHIVE","UNDO","UNIONTYPE","UNLOCK","UNSET","UNSIGNED","URI","USE","UTC","UTCTIMESTAMP","VALUE_TYPE","VIEW","WHILE","YEAR","AUTOCOMMIT","ISOLATION","LEVEL","OFFSET","SNAPSHOT","TRANSACTION","WORK","WRITE","ABORT","KEY","LAST","NORELY","NOVALIDATE","NULLS","RELY","VALIDATE","DETAIL","DOW","EXPRESSION","OPERATOR","QUARTER","SUMMARY","VECTORIZATION","WEEK","YEARS","MONTHS","WEEKS","DAYS","HOURS","MINUTES","SECONDS","TIMESTAMPTZ","ZONE","ALL","ALTER","AND","AS","AUTHORIZATION","BETWEEN","BOTH","BY","CASE","CAST","COLUMN","CONF","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIMESTAMP","CURSOR","DATABASE","DELETE","DESCRIBE","DISTINCT","DROP","ELSE","END","EXCHANGE","EXISTS","EXTENDED","EXTERNAL","FALSE","FETCH","FOLLOWING","FOR","FROM","FULL","FUNCTION","GRANT","GROUP","GROUPING","HAVING","IF","IMPORT","IN","INNER","INSERT","INTERSECT","INTO","IS","JOIN","LATERAL","LEFT","LESS","LIKE","LOCAL","MACRO","MORE","NONE","NOT","NULL","OF","ON","OR","ORDER","OUT","OUTER","OVER","PARTIALSCAN","PARTITION","PERCENT","PRECEDING","PRESERVE","PROCEDURE","RANGE","READS","REDUCE","REVOKE","RIGHT","ROLLUP","ROW","ROWS","SELECT","SET","TABLE","TABLESAMPLE","THEN","TO","TRANSFORM","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNION","UNIQUEJOIN","UPDATE","USER","USING","UTC_TMESTAMP","VALUES","WHEN","WHERE","WINDOW","WITH","COMMIT","ONLY","REGEXP","RLIKE","ROLLBACK","START","CACHE","CONSTRAINT","FOREIGN","PRIMARY","REFERENCES","DAYOFWEEK","EXTRACT","FLOOR","VIEWS","TIME","SYNC","TEXTFILE","SEQUENCEFILE","ORC","CSV","TSV","PARQUET","AVRO","RCFILE","JSONFILE","INPUTFORMAT","OUTPUTFORMAT"],FN=["ARRAY","BIGINT","BINARY","BOOLEAN","CHAR","DATE","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","MAP","NUMERIC","PRECISION","SMALLINT","STRUCT","TIMESTAMP","VARCHAR"],yN=M(["SELECT [ALL | DISTINCT]"]),vN=M(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT INTO [TABLE]","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT [VALUES]","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE"]),SR=M(["CREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS]","CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","RENAME TO","TRUNCATE [TABLE]","ALTER","CREATE","USE","DESCRIBE","DROP","FETCH","SHOW","STORED AS","STORED BY","ROW FORMAT"]),YN=M(["UNION [ALL | DISTINCT]"]),VN=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","LEFT SEMI JOIN"]),xN=M(["{ROWS | RANGE} BETWEEN"]),wN={name:"hive",tokenizerOptions:{reservedSelect:yN,reservedClauses:[...vN,...SR],reservedSetOperations:YN,reservedJoins:VN,reservedPhrases:xN,reservedKeywords:bN,reservedDataTypes:FN,reservedFunctionNames:BN,extraParens:["[]"],stringTypes:['""-bs',"''-bs"],identTypes:["``"],variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||"]},formatOptions:{onelineClauses:SR}};function Qr(e){return e.map((E,t)=>{const T=e[t+1]||Rt;if(xE.SET(E)&&T.text==="(")return Ve(Be({},E),{type:"RESERVED_FUNCTION_NAME"});const r=e[t-1]||Rt;return xE.VALUES(E)&&r.text==="="?Ve(Be({},E),{type:"RESERVED_FUNCTION_NAME"}):E})}var WN=["ACCESSIBLE","ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DELETE_DOMAIN_ID","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DO_DOMAIN_IDS","DROP","DUAL","EACH","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FOR","FORCE","FOREIGN","FROM","FULLTEXT","GENERAL","GRANT","GROUP","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IGNORE_DOMAIN_IDS","IGNORE_SERVER_IDS","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","INTERSECT","INTERVAL","INTO","IS","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LOOP","LOW_PRIORITY","MASTER_HEARTBEAT_PERIOD","MASTER_SSL_VERIFY_SERVER_CERT","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NOT","NO_WRITE_TO_BINLOG","NULL","OFFSET","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PAGE_CHECKSUM","PARSE_VCOL_EXPR","PARTITION","POSITION","PRIMARY","PROCEDURE","PURGE","RANGE","READ","READS","READ_WRITE","RECURSIVE","REF_SYSTEM_ID","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESIGNAL","RESTRICT","RETURN","RETURNING","REVOKE","RIGHT","RLIKE","ROW_NUMBER","ROWS","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SLOW","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STATS_AUTO_RECALC","STATS_PERSISTENT","STATS_SAMPLE_PAGES","STRAIGHT_JOIN","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNDO","UNION","UNIQUE","UNLOCK","UNSIGNED","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],XN=["BIGINT","BINARY","BIT","BLOB","CHAR BYTE","CHAR","CHARACTER","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONG","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],$N=["ADDDATE","ADD_MONTHS","BIT_AND","BIT_OR","BIT_XOR","CAST","COUNT","CUME_DIST","CURDATE","CURTIME","DATE_ADD","DATE_SUB","DATE_FORMAT","DECODE","DENSE_RANK","EXTRACT","FIRST_VALUE","GROUP_CONCAT","JSON_ARRAYAGG","JSON_OBJECTAGG","LAG","LEAD","MAX","MEDIAN","MID","MIN","NOW","NTH_VALUE","NTILE","POSITION","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","ROW_NUMBER","SESSION_USER","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUBDATE","SUBSTR","SUBSTRING","SUM","SYSTEM_USER","TRIM","TRIM_ORACLE","VARIANCE","VAR_POP","VAR_SAMP","ABS","ACOS","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ASIN","ATAN","ATAN2","BENCHMARK","BIN","BINLOG_GTID_POS","BIT_COUNT","BIT_LENGTH","CEIL","CEILING","CHARACTER_LENGTH","CHAR_LENGTH","CHR","COERCIBILITY","COLUMN_CHECK","COLUMN_EXISTS","COLUMN_LIST","COLUMN_JSON","COMPRESS","CONCAT","CONCAT_OPERATOR_ORACLE","CONCAT_WS","CONNECTION_ID","CONV","CONVERT_TZ","COS","COT","CRC32","DATEDIFF","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEGREES","DECODE_HISTOGRAM","DECODE_ORACLE","DES_DECRYPT","DES_ENCRYPT","ELT","ENCODE","ENCRYPT","EXP","EXPORT_SET","EXTRACTVALUE","FIELD","FIND_IN_SET","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GET_LOCK","GREATEST","HEX","IFNULL","INSTR","ISNULL","IS_FREE_LOCK","IS_USED_LOCK","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_COMPACT","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_DETAILED","JSON_EXISTS","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_LOOSE","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_QUERY","JSON_QUOTE","JSON_OBJECT","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_SEARCH","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAST_DAY","LAST_INSERT_ID","LCASE","LEAST","LENGTH","LENGTHB","LN","LOAD_FILE","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LPAD_ORACLE","LTRIM","LTRIM_ORACLE","MAKEDATE","MAKETIME","MAKE_SET","MASTER_GTID_WAIT","MASTER_POS_WAIT","MD5","MONTHNAME","NAME_CONST","NVL","NVL2","OCT","OCTET_LENGTH","ORD","PERIOD_ADD","PERIOD_DIFF","PI","POW","POWER","QUOTE","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","RADIANS","RAND","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPLACE_ORACLE","REVERSE","ROUND","RPAD","RPAD_ORACLE","RTRIM","RTRIM_ORACLE","SEC_TO_TIME","SHA","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SPACE","SQRT","STRCMP","STR_TO_DATE","SUBSTR_ORACLE","SUBSTRING_INDEX","SUBTIME","SYS_GUID","TAN","TIMEDIFF","TIME_FORMAT","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_SECONDS","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UUID","UUID_SHORT","VERSION","WEEKDAY","WEEKOFYEAR","WSREP_LAST_WRITTEN_GTID","WSREP_LAST_SEEN_GTID","WSREP_SYNC_WAIT_UPTO_GTID","YEARWEEK","COALESCE","NULLIF"],KN=M(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),JN=M(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET","RETURNING"]),iR=M(["CREATE [OR REPLACE] [TEMPORARY] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] [IGNORE] TABLE [IF EXISTS]","ADD [COLUMN] [IF NOT EXISTS]","{CHANGE | MODIFY} [COLUMN] [IF EXISTS]","DROP [COLUMN] [IF EXISTS]","RENAME [TO]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","SET {VISIBLE | INVISIBLE}","TRUNCATE [TABLE]","ALTER DATABASE","ALTER DATABASE COMMENT","ALTER EVENT","ALTER FUNCTION","ALTER PROCEDURE","ALTER SCHEMA","ALTER SCHEMA COMMENT","ALTER SEQUENCE","ALTER SERVER","ALTER USER","ALTER VIEW","ANALYZE","ANALYZE TABLE","BACKUP LOCK","BACKUP STAGE","BACKUP UNLOCK","BEGIN","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHECK TABLE","CHECK VIEW","CHECKSUM TABLE","COMMIT","CREATE AGGREGATE FUNCTION","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE INDEX","CREATE PROCEDURE","CREATE ROLE","CREATE SEQUENCE","CREATE SERVER","CREATE SPATIAL INDEX","CREATE TRIGGER","CREATE UNIQUE INDEX","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP INDEX","DROP PREPARE","DROP PROCEDURE","DROP ROLE","DROP SEQUENCE","DROP SERVER","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GET DIAGNOSTICS","GET DIAGNOSTICS CONDITION","GRANT","HANDLER","HELP","INSTALL PLUGIN","INSTALL SONAME","KILL","LOAD DATA INFILE","LOAD INDEX INTO CACHE","LOAD XML INFILE","LOCK TABLE","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","PURGE MASTER LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","REPAIR VIEW","RESET MASTER","RESET QUERY CACHE","RESET REPLICA","RESET SLAVE","RESIGNAL","REVOKE","ROLLBACK","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET GLOBAL TRANSACTION","SET NAMES","SET PASSWORD","SET ROLE","SET STATEMENT","SET TRANSACTION","SHOW","SHOW ALL REPLICAS STATUS","SHOW ALL SLAVES STATUS","SHOW AUTHORS","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW BINLOG STATUS","SHOW CHARACTER SET","SHOW CLIENT_STATISTICS","SHOW COLLATION","SHOW COLUMNS","SHOW CONTRIBUTORS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PACKAGE","SHOW CREATE PACKAGE BODY","SHOW CREATE PROCEDURE","SHOW CREATE SEQUENCE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINE INNODB STATUS","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW EXPLAIN","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW INDEXES","SHOW INDEX_STATISTICS","SHOW KEYS","SHOW LOCALES","SHOW MASTER LOGS","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PACKAGE BODY CODE","SHOW PACKAGE BODY STATUS","SHOW PACKAGE STATUS","SHOW PLUGINS","SHOW PLUGINS SONAME","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW QUERY_RESPONSE_TIME","SHOW RELAYLOG EVENTS","SHOW REPLICA","SHOW REPLICA HOSTS","SHOW REPLICA STATUS","SHOW SCHEMAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW SLAVE STATUS","SHOW STATUS","SHOW STORAGE ENGINES","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW USER_STATISTICS","SHOW VARIABLES","SHOW WARNINGS","SHOW WSREP_MEMBERSHIP","SHOW WSREP_STATUS","SHUTDOWN","SIGNAL","START ALL REPLICAS","START ALL SLAVES","START REPLICA","START SLAVE","START TRANSACTION","STOP ALL REPLICAS","STOP ALL SLAVES","STOP REPLICA","STOP SLAVE","UNINSTALL PLUGIN","UNINSTALL SONAME","UNLOCK TABLE","USE","XA BEGIN","XA COMMIT","XA END","XA PREPARE","XA RECOVER","XA ROLLBACK","XA START"]),kN=M(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]","MINUS [ALL | DISTINCT]"]),jN=M(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),qN=M(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),QN={name:"mariadb",tokenizerOptions:{reservedSelect:KN,reservedClauses:[...JN,...iR],reservedSetOperations:kN,reservedJoins:jN,reservedPhrases:qN,supportsXor:!0,reservedKeywords:WN,reservedDataTypes:XN,reservedFunctionNames:$N,stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","&&","||","!","*.*"],postProcess:Qr},formatOptions:{onelineClauses:iR}},ZN=["ACCESSIBLE","ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CUBE","CUME_DIST","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DENSE_RANK","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DROP","DUAL","EACH","ELSE","ELSEIF","EMPTY","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FIRST_VALUE","FOR","FORCE","FOREIGN","FROM","FULLTEXT","FUNCTION","GENERATED","GET","GRANT","GROUP","GROUPING","GROUPS","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","IN","INTERSECT","INTERVAL","INTO","IO_AFTER_GTIDS","IO_BEFORE_GTIDS","IS","ITERATE","JOIN","JSON_TABLE","KEY","KEYS","KILL","LAG","LAST_VALUE","LATERAL","LEAD","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LONG","LOOP","LOW_PRIORITY","MASTER_BIND","MASTER_SSL_VERIFY_SERVER_CERT","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NOT","NO_WRITE_TO_BINLOG","NTH_VALUE","NTILE","NULL","OF","ON","OPTIMIZE","OPTIMIZER_COSTS","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PARTITION","PERCENT_RANK","PRIMARY","PROCEDURE","PURGE","RANGE","RANK","READ","READS","READ_WRITE","RECURSIVE","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESIGNAL","RESTRICT","RETURN","REVOKE","RIGHT","RLIKE","ROW","ROWS","ROW_NUMBER","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STORED","STRAIGHT_JOIN","SYSTEM","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNDO","UNION","UNIQUE","UNLOCK","UNSIGNED","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","VIRTUAL","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],zN=["BIGINT","BINARY","BIT","BLOB","BOOL","BOOLEAN","CHAR","CHARACTER","DATE","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],ea=["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","ASCII","ASIN","ATAN","ATAN2","AVG","BENCHMARK","BIN","BIN_TO_UUID","BINARY","BIT_AND","BIT_COUNT","BIT_LENGTH","BIT_OR","BIT_XOR","CAN_ACCESS_COLUMN","CAN_ACCESS_DATABASE","CAN_ACCESS_TABLE","CAN_ACCESS_USER","CAN_ACCESS_VIEW","CAST","CEIL","CEILING","CHAR","CHAR_LENGTH","CHARACTER_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COMPRESS","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CRC32","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEFAULT","DEGREES","DENSE_RANK","DIV","ELT","EXP","EXPORT_SET","EXTRACT","EXTRACTVALUE","FIELD","FIND_IN_SET","FIRST_VALUE","FLOOR","FORMAT","FORMAT_BYTES","FORMAT_PICO_TIME","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOMCOLLECTION","GEOMETRYCOLLECTION","GET_DD_COLUMN_PRIVILEGES","GET_DD_CREATE_OPTIONS","GET_DD_INDEX_SUB_PART_LENGTH","GET_FORMAT","GET_LOCK","GREATEST","GROUP_CONCAT","GROUPING","GTID_SUBSET","GTID_SUBTRACT","HEX","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INSERT","INSTR","INTERNAL_AUTO_INCREMENT","INTERNAL_AVG_ROW_LENGTH","INTERNAL_CHECK_TIME","INTERNAL_CHECKSUM","INTERNAL_DATA_FREE","INTERNAL_DATA_LENGTH","INTERNAL_DD_CHAR_LENGTH","INTERNAL_GET_COMMENT_OR_ERROR","INTERNAL_GET_ENABLED_ROLE_JSON","INTERNAL_GET_HOSTNAME","INTERNAL_GET_USERNAME","INTERNAL_GET_VIEW_WARNING_OR_ERROR","INTERNAL_INDEX_COLUMN_CARDINALITY","INTERNAL_INDEX_LENGTH","INTERNAL_IS_ENABLED_ROLE","INTERNAL_IS_MANDATORY_ROLE","INTERNAL_KEYS_DISABLED","INTERNAL_MAX_DATA_LENGTH","INTERNAL_TABLE_ROWS","INTERNAL_UPDATE_TIME","INTERVAL","IS","IS_FREE_LOCK","IS_IPV4","IS_IPV4_COMPAT","IS_IPV4_MAPPED","IS_IPV6","IS NOT","IS NOT NULL","IS NULL","IS_USED_LOCK","IS_UUID","ISNULL","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_ARRAYAGG","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_OBJECT","JSON_OBJECTAGG","JSON_OVERLAPS","JSON_PRETTY","JSON_QUOTE","JSON_REMOVE","JSON_REPLACE","JSON_SCHEMA_VALID","JSON_SCHEMA_VALIDATION_REPORT","JSON_SEARCH","JSON_SET","JSON_STORAGE_FREE","JSON_STORAGE_SIZE","JSON_TABLE","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAG","LAST_DAY","LAST_INSERT_ID","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LINESTRING","LN","LOAD_FILE","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","MAKE_SET","MAKEDATE","MAKETIME","MASTER_POS_WAIT","MATCH","MAX","MBRCONTAINS","MBRCOVEREDBY","MBRCOVERS","MBRDISJOINT","MBREQUALS","MBRINTERSECTS","MBROVERLAPS","MBRTOUCHES","MBRWITHIN","MD5","MEMBER OF","MICROSECOND","MID","MIN","MINUTE","MOD","MONTH","MONTHNAME","MULTILINESTRING","MULTIPOINT","MULTIPOLYGON","NAME_CONST","NOT","NOT IN","NOT LIKE","NOT REGEXP","NOW","NTH_VALUE","NTILE","NULLIF","OCT","OCTET_LENGTH","ORD","PERCENT_RANK","PERIOD_ADD","PERIOD_DIFF","PI","POINT","POLYGON","POSITION","POW","POWER","PS_CURRENT_THREAD_ID","PS_THREAD_ID","QUARTER","QUOTE","RADIANS","RAND","RANDOM_BYTES","RANK","REGEXP","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROLES_GRAPHML","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCHEMA","SEC_TO_TIME","SECOND","SESSION_USER","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_BUFFER","ST_BUFFER_STRATEGY","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_CONVEXHULL","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DISTANCE_SPHERE","ST_ENDPOINT","ST_ENVELOPE","ST_EQUALS","ST_EXTERIORRING","ST_FRECHETDISTANCE","ST_GEOHASH","ST_GEOMCOLLFROMTEXT","ST_GEOMCOLLFROMWKB","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMGEOJSON","ST_GEOMFROMTEXT","ST_GEOMFROMWKB","ST_HAUSDORFFDISTANCE","ST_INTERIORRINGN","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISSIMPLE","ST_ISVALID","ST_LATFROMGEOHASH","ST_LATITUDE","ST_LENGTH","ST_LINEFROMTEXT","ST_LINEFROMWKB","ST_LINEINTERPOLATEPOINT","ST_LINEINTERPOLATEPOINTS","ST_LONGFROMGEOHASH","ST_LONGITUDE","ST_MAKEENVELOPE","ST_MLINEFROMTEXT","ST_MLINEFROMWKB","ST_MPOINTFROMTEXT","ST_MPOINTFROMWKB","ST_MPOLYFROMTEXT","ST_MPOLYFROMWKB","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINTATDISTANCE","ST_POINTFROMGEOHASH","ST_POINTFROMTEXT","ST_POINTFROMWKB","ST_POINTN","ST_POLYFROMTEXT","ST_POLYFROMWKB","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SWAPXY","ST_SYMDIFFERENCE","ST_TOUCHES","ST_TRANSFORM","ST_UNION","ST_VALIDATE","ST_WITHIN","ST_X","ST_Y","STATEMENT_DIGEST","STATEMENT_DIGEST_TEXT","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","STRCMP","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUBTIME","SUM","SYSDATE","SYSTEM_USER","TAN","TIME","TIME_FORMAT","TIME_TO_SEC","TIMEDIFF","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TO_BASE64","TO_DAYS","TO_SECONDS","TRIM","TRUNCATE","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","UUID_SHORT","UUID_TO_BIN","VALIDATE_PASSWORD_STRENGTH","VALUES","VAR_POP","VAR_SAMP","VARIANCE","VERSION","WAIT_FOR_EXECUTED_GTID_SET","WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS","WEEK","WEEKDAY","WEEKOFYEAR","WEIGHT_STRING","YEAR","YEARWEEK"],Ea=M(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),ta=M(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET"]),oR=M(["CREATE [TEMPORARY] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","{CHANGE | MODIFY} [COLUMN]","DROP [COLUMN]","RENAME [TO | AS]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","TRUNCATE [TABLE]","ALTER DATABASE","ALTER EVENT","ALTER FUNCTION","ALTER INSTANCE","ALTER LOGFILE GROUP","ALTER PROCEDURE","ALTER RESOURCE GROUP","ALTER SERVER","ALTER TABLESPACE","ALTER USER","ALTER VIEW","ANALYZE TABLE","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK TABLE","CHECKSUM TABLE","CLONE","COMMIT","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE FUNCTION","CREATE INDEX","CREATE LOGFILE GROUP","CREATE PROCEDURE","CREATE RESOURCE GROUP","CREATE ROLE","CREATE SERVER","CREATE SPATIAL REFERENCE SYSTEM","CREATE TABLESPACE","CREATE TRIGGER","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP FUNCTION","DROP INDEX","DROP LOGFILE GROUP","DROP PROCEDURE","DROP RESOURCE GROUP","DROP ROLE","DROP SERVER","DROP SPATIAL REFERENCE SYSTEM","DROP TABLESPACE","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GRANT","HANDLER","HELP","IMPORT TABLE","INSTALL COMPONENT","INSTALL PLUGIN","KILL","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SOURCE_POS_WAIT","START GROUP_REPLICATION","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP REPLICA","STOP SLAVE","TABLE","UNINSTALL COMPONENT","UNINSTALL PLUGIN","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),Ta=M(["UNION [ALL | DISTINCT]"]),ra=M(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),sa=M(["ON {UPDATE | DELETE} [SET NULL]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),Ra={name:"mysql",tokenizerOptions:{reservedSelect:Ea,reservedClauses:[...ta,...oR],reservedSetOperations:Ta,reservedJoins:ra,reservedPhrases:sa,supportsXor:!0,reservedKeywords:ZN,reservedDataTypes:zN,reservedFunctionNames:ea,stringTypes:['""-qq-bs',{quote:"''-qq-bs",prefixes:["N"]},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","->","->>","&&","||","!","*.*"],postProcess:Qr},formatOptions:{onelineClauses:oR}},Aa=["ABORT","ABS","ACOS","ADVISOR","ARRAY_AGG","ARRAY_AGG","ARRAY_APPEND","ARRAY_AVG","ARRAY_BINARY_SEARCH","ARRAY_CONCAT","ARRAY_CONTAINS","ARRAY_COUNT","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_FLATTEN","ARRAY_IFNULL","ARRAY_INSERT","ARRAY_INTERSECT","ARRAY_LENGTH","ARRAY_MAX","ARRAY_MIN","ARRAY_MOVE","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_PUT","ARRAY_RANGE","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_REPLACE","ARRAY_REVERSE","ARRAY_SORT","ARRAY_STAR","ARRAY_SUM","ARRAY_SYMDIFF","ARRAY_SYMDIFF1","ARRAY_SYMDIFFN","ARRAY_UNION","ASIN","ATAN","ATAN2","AVG","BASE64","BASE64_DECODE","BASE64_ENCODE","BITAND ","BITCLEAR ","BITNOT ","BITOR ","BITSET ","BITSHIFT ","BITTEST ","BITXOR ","CEIL","CLOCK_LOCAL","CLOCK_MILLIS","CLOCK_STR","CLOCK_TZ","CLOCK_UTC","COALESCE","CONCAT","CONCAT2","CONTAINS","CONTAINS_TOKEN","CONTAINS_TOKEN_LIKE","CONTAINS_TOKEN_REGEXP","COS","COUNT","COUNT","COUNTN","CUME_DIST","CURL","DATE_ADD_MILLIS","DATE_ADD_STR","DATE_DIFF_MILLIS","DATE_DIFF_STR","DATE_FORMAT_STR","DATE_PART_MILLIS","DATE_PART_STR","DATE_RANGE_MILLIS","DATE_RANGE_STR","DATE_TRUNC_MILLIS","DATE_TRUNC_STR","DECODE","DECODE_JSON","DEGREES","DENSE_RANK","DURATION_TO_STR","ENCODED_SIZE","ENCODE_JSON","EXP","FIRST_VALUE","FLOOR","GREATEST","HAS_TOKEN","IFINF","IFMISSING","IFMISSINGORNULL","IFNAN","IFNANORINF","IFNULL","INITCAP","ISARRAY","ISATOM","ISBITSET","ISBOOLEAN","ISNUMBER","ISOBJECT","ISSTRING","LAG","LAST_VALUE","LEAD","LEAST","LENGTH","LN","LOG","LOWER","LTRIM","MAX","MEAN","MEDIAN","META","MILLIS","MILLIS_TO_LOCAL","MILLIS_TO_STR","MILLIS_TO_TZ","MILLIS_TO_UTC","MILLIS_TO_ZONE_NAME","MIN","MISSINGIF","NANIF","NEGINFIF","NOW_LOCAL","NOW_MILLIS","NOW_STR","NOW_TZ","NOW_UTC","NTH_VALUE","NTILE","NULLIF","NVL","NVL2","OBJECT_ADD","OBJECT_CONCAT","OBJECT_INNER_PAIRS","OBJECT_INNER_VALUES","OBJECT_LENGTH","OBJECT_NAMES","OBJECT_PAIRS","OBJECT_PUT","OBJECT_REMOVE","OBJECT_RENAME","OBJECT_REPLACE","OBJECT_UNWRAP","OBJECT_VALUES","PAIRS","PERCENT_RANK","PI","POLY_LENGTH","POSINFIF","POSITION","POWER","RADIANS","RANDOM","RANK","RATIO_TO_REPORT","REGEXP_CONTAINS","REGEXP_LIKE","REGEXP_MATCHES","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGEX_CONTAINS","REGEX_LIKE","REGEX_MATCHES","REGEX_POSITION","REGEX_REPLACE","REGEX_SPLIT","REPEAT","REPLACE","REVERSE","ROUND","ROW_NUMBER","RTRIM","SEARCH","SEARCH_META","SEARCH_SCORE","SIGN","SIN","SPLIT","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DURATION","STR_TO_MILLIS","STR_TO_TZ","STR_TO_UTC","STR_TO_ZONE_NAME","SUBSTR","SUFFIXES","SUM","TAN","TITLE","TOARRAY","TOATOM","TOBOOLEAN","TOKENS","TOKENS","TONUMBER","TOOBJECT","TOSTRING","TRIM","TRUNC","UPPER","UUID","VARIANCE","VARIANCE_POP","VARIANCE_SAMP","VAR_POP","VAR_SAMP","WEEKDAY_MILLIS","WEEKDAY_STR","CAST"],na=["ADVISE","ALL","ALTER","ANALYZE","AND","ANY","ARRAY","AS","ASC","AT","BEGIN","BETWEEN","BINARY","BOOLEAN","BREAK","BUCKET","BUILD","BY","CALL","CASE","CAST","CLUSTER","COLLATE","COLLECTION","COMMIT","COMMITTED","CONNECT","CONTINUE","CORRELATED","COVER","CREATE","CURRENT","DATABASE","DATASET","DATASTORE","DECLARE","DECREMENT","DELETE","DERIVED","DESC","DESCRIBE","DISTINCT","DO","DROP","EACH","ELEMENT","ELSE","END","EVERY","EXCEPT","EXCLUDE","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FILTER","FIRST","FLATTEN","FLUSH","FOLLOWING","FOR","FORCE","FROM","FTS","FUNCTION","GOLANG","GRANT","GROUP","GROUPS","GSI","HASH","HAVING","IF","IGNORE","ILIKE","IN","INCLUDE","INCREMENT","INDEX","INFER","INLINE","INNER","INSERT","INTERSECT","INTO","IS","ISOLATION","JAVASCRIPT","JOIN","KEY","KEYS","KEYSPACE","KNOWN","LANGUAGE","LAST","LEFT","LET","LETTING","LEVEL","LIKE","LIMIT","LSM","MAP","MAPPING","MATCHED","MATERIALIZED","MERGE","MINUS","MISSING","NAMESPACE","NEST","NL","NO","NOT","NTH_VALUE","NULL","NULLS","NUMBER","OBJECT","OFFSET","ON","OPTION","OPTIONS","OR","ORDER","OTHERS","OUTER","OVER","PARSE","PARTITION","PASSWORD","PATH","POOL","PRECEDING","PREPARE","PRIMARY","PRIVATE","PRIVILEGE","PROBE","PROCEDURE","PUBLIC","RANGE","RAW","REALM","REDUCE","RENAME","RESPECT","RETURN","RETURNING","REVOKE","RIGHT","ROLE","ROLLBACK","ROW","ROWS","SATISFIES","SAVEPOINT","SCHEMA","SCOPE","SELECT","SELF","SEMI","SET","SHOW","SOME","START","STATISTICS","STRING","SYSTEM","THEN","TIES","TO","TRAN","TRANSACTION","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNDER","UNION","UNIQUE","UNKNOWN","UNNEST","UNSET","UPDATE","UPSERT","USE","USER","USING","VALIDATE","VALUE","VALUED","VALUES","VIA","VIEW","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WORK","XOR"],Sa=[],ia=M(["SELECT [ALL | DISTINCT]"]),oa=M(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED THEN","UPDATE SET","INSERT","NEST","UNNEST","RETURNING"]),IR=M(["UPDATE","DELETE FROM","SET SCHEMA","ADVISE","ALTER INDEX","BEGIN TRANSACTION","BUILD INDEX","COMMIT TRANSACTION","CREATE COLLECTION","CREATE FUNCTION","CREATE INDEX","CREATE PRIMARY INDEX","CREATE SCOPE","DROP COLLECTION","DROP FUNCTION","DROP INDEX","DROP PRIMARY INDEX","DROP SCOPE","EXECUTE","EXECUTE FUNCTION","EXPLAIN","GRANT","INFER","PREPARE","REVOKE","ROLLBACK TRANSACTION","SAVEPOINT","SET TRANSACTION","UPDATE STATISTICS","UPSERT","LET","SET CURRENT SCHEMA","SHOW","USE [PRIMARY] KEYS"]),Oa=M(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),Ia=M(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","INNER JOIN"]),Na=M(["{ROWS | RANGE | GROUPS} BETWEEN"]),aa={name:"n1ql",tokenizerOptions:{reservedSelect:ia,reservedClauses:[...oa,...IR],reservedSetOperations:Oa,reservedJoins:Ia,reservedPhrases:Na,supportsXor:!0,reservedKeywords:na,reservedDataTypes:Sa,reservedFunctionNames:Aa,stringTypes:['""-bs',"''-bs"],identTypes:["``"],extraParens:["[]","{}"],paramTypes:{positional:!0,numbered:["$"],named:["$"]},lineCommentTypes:["#","--"],operators:["%","==",":","||"]},formatOptions:{onelineClauses:IR}},_a=["ADD","AGENT","AGGREGATE","ALL","ALTER","AND","ANY","ARROW","AS","ASC","AT","ATTRIBUTE","AUTHID","AVG","BEGIN","BETWEEN","BLOCK","BODY","BOTH","BOUND","BULK","BY","BYTE","CALL","CALLING","CASCADE","CASE","CHARSET","CHARSETFORM","CHARSETID","CHECK","CLOSE","CLUSTER","CLUSTERS","COLAUTH","COLLECT","COLUMNS","COMMENT","COMMIT","COMMITTED","COMPILED","COMPRESS","CONNECT","CONSTANT","CONSTRUCTOR","CONTEXT","CONVERT","COUNT","CRASH","CREATE","CURRENT","CURSOR","CUSTOMDATUM","DANGLING","DATA","DAY","DECLARE","DEFAULT","DEFINE","DELETE","DESC","DETERMINISTIC","DISTINCT","DROP","DURATION","ELEMENT","ELSE","ELSIF","EMPTY","END","ESCAPE","EXCEPT","EXCEPTION","EXCEPTIONS","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FINAL","FIXED","FOR","FORALL","FORCE","FORM","FROM","FUNCTION","GENERAL","GOTO","GRANT","GROUP","HASH","HAVING","HEAP","HIDDEN","HOUR","IDENTIFIED","IF","IMMEDIATE","IN","INCLUDING","INDEX","INDEXES","INDICATOR","INDICES","INFINITE","INSERT","INSTANTIABLE","INTERFACE","INTERSECT","INTERVAL","INTO","INVALIDATE","IS","ISOLATION","JAVA","LANGUAGE","LARGE","LEADING","LENGTH","LEVEL","LIBRARY","LIKE","LIKE2","LIKE4","LIKEC","LIMIT","LIMITED","LOCAL","LOCK","LOOP","MAP","MAX","MAXLEN","MEMBER","MERGE","MIN","MINUS","MINUTE","MOD","MODE","MODIFY","MONTH","MULTISET","NAME","NAN","NATIONAL","NATIVE","NEW","NOCOMPRESS","NOCOPY","NOT","NOWAIT","NULL","OBJECT","OCICOLL","OCIDATE","OCIDATETIME","OCIDURATION","OCIINTERVAL","OCILOBLOCATOR","OCINUMBER","OCIRAW","OCIREF","OCIREFCURSOR","OCIROWID","OCISTRING","OCITYPE","OF","ON","ONLY","OPAQUE","OPEN","OPERATOR","OPTION","OR","ORACLE","ORADATA","ORDER","OVERLAPS","ORGANIZATION","ORLANY","ORLVARY","OTHERS","OUT","OVERRIDING","PACKAGE","PARALLEL_ENABLE","PARAMETER","PARAMETERS","PARTITION","PASCAL","PIPE","PIPELINED","PRAGMA","PRIOR","PRIVATE","PROCEDURE","PUBLIC","RAISE","RANGE","READ","RECORD","REF","REFERENCE","REM","REMAINDER","RENAME","RESOURCE","RESULT","RETURN","RETURNING","REVERSE","REVOKE","ROLLBACK","ROW","SAMPLE","SAVE","SAVEPOINT","SB1","SB2","SB4","SECOND","SEGMENT","SELECT","SELF","SEPARATE","SEQUENCE","SERIALIZABLE","SET","SHARE","SHORT","SIZE","SIZE_T","SOME","SPARSE","SQL","SQLCODE","SQLDATA","SQLNAME","SQLSTATE","STANDARD","START","STATIC","STDDEV","STORED","STRING","STRUCT","STYLE","SUBMULTISET","SUBPARTITION","SUBSTITUTABLE","SUBTYPE","SUM","SYNONYM","TABAUTH","TABLE","TDO","THE","THEN","TIME","TIMEZONE_ABBR","TIMEZONE_HOUR","TIMEZONE_MINUTE","TIMEZONE_REGION","TO","TRAILING","TRANSAC","TRANSACTIONAL","TRUSTED","TYPE","UB1","UB2","UB4","UNDER","UNION","UNIQUE","UNSIGNED","UNTRUSTED","UPDATE","USE","USING","VALIST","VALUE","VALUES","VARIABLE","VARIANCE","VARRAY","VIEW","VIEWS","VOID","WHEN","WHERE","WHILE","WITH","WORK","WRAPPED","WRITE","YEAR","ZONE"],la=["ARRAY","BFILE_BASE","BINARY","BLOB_BASE","CHAR VARYING","CHAR_BASE","CHAR","CHARACTER VARYING","CHARACTER","CLOB_BASE","DATE_BASE","DATE","DECIMAL","DOUBLE","FLOAT","INT","INTERVAL DAY","INTERVAL YEAR","LONG","NATIONAL CHAR VARYING","NATIONAL CHAR","NATIONAL CHARACTER VARYING","NATIONAL CHARACTER","NCHAR VARYING","NCHAR","NCHAR","NUMBER_BASE","NUMBER","NUMBERIC","NVARCHAR","PRECISION","RAW","TIMESTAMP","UROWID","VARCHAR","VARCHAR2"],Ca=["ABS","ACOS","ASIN","ATAN","ATAN2","BITAND","CEIL","COS","COSH","EXP","FLOOR","LN","LOG","MOD","NANVL","POWER","REMAINDER","ROUND","SIGN","SIN","SINH","SQRT","TAN","TANH","TRUNC","WIDTH_BUCKET","CHR","CONCAT","INITCAP","LOWER","LPAD","LTRIM","NLS_INITCAP","NLS_LOWER","NLSSORT","NLS_UPPER","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","RPAD","RTRIM","SOUNDEX","SUBSTR","TRANSLATE","TREAT","TRIM","UPPER","NLS_CHARSET_DECL_LEN","NLS_CHARSET_ID","NLS_CHARSET_NAME","ASCII","INSTR","LENGTH","REGEXP_INSTR","ADD_MONTHS","CURRENT_DATE","CURRENT_TIMESTAMP","DBTIMEZONE","EXTRACT","FROM_TZ","LAST_DAY","LOCALTIMESTAMP","MONTHS_BETWEEN","NEW_TIME","NEXT_DAY","NUMTODSINTERVAL","NUMTOYMINTERVAL","ROUND","SESSIONTIMEZONE","SYS_EXTRACT_UTC","SYSDATE","SYSTIMESTAMP","TO_CHAR","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_DSINTERVAL","TO_YMINTERVAL","TRUNC","TZ_OFFSET","GREATEST","LEAST","ASCIISTR","BIN_TO_NUM","CAST","CHARTOROWID","COMPOSE","CONVERT","DECOMPOSE","HEXTORAW","NUMTODSINTERVAL","NUMTOYMINTERVAL","RAWTOHEX","RAWTONHEX","ROWIDTOCHAR","ROWIDTONCHAR","SCN_TO_TIMESTAMP","TIMESTAMP_TO_SCN","TO_BINARY_DOUBLE","TO_BINARY_FLOAT","TO_CHAR","TO_CLOB","TO_DATE","TO_DSINTERVAL","TO_LOB","TO_MULTI_BYTE","TO_NCHAR","TO_NCLOB","TO_NUMBER","TO_DSINTERVAL","TO_SINGLE_BYTE","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_YMINTERVAL","TO_YMINTERVAL","TRANSLATE","UNISTR","BFILENAME","EMPTY_BLOB,","EMPTY_CLOB","CARDINALITY","COLLECT","POWERMULTISET","POWERMULTISET_BY_CARDINALITY","SET","SYS_CONNECT_BY_PATH","CLUSTER_ID","CLUSTER_PROBABILITY","CLUSTER_SET","FEATURE_ID","FEATURE_SET","FEATURE_VALUE","PREDICTION","PREDICTION_COST","PREDICTION_DETAILS","PREDICTION_PROBABILITY","PREDICTION_SET","APPENDCHILDXML","DELETEXML","DEPTH","EXTRACT","EXISTSNODE","EXTRACTVALUE","INSERTCHILDXML","INSERTXMLBEFORE","PATH","SYS_DBURIGEN","SYS_XMLAGG","SYS_XMLGEN","UPDATEXML","XMLAGG","XMLCDATA","XMLCOLATTVAL","XMLCOMMENT","XMLCONCAT","XMLFOREST","XMLPARSE","XMLPI","XMLQUERY","XMLROOT","XMLSEQUENCE","XMLSERIALIZE","XMLTABLE","XMLTRANSFORM","DECODE","DUMP","ORA_HASH","VSIZE","COALESCE","LNNVL","NULLIF","NVL","NVL2","SYS_CONTEXT","SYS_GUID","SYS_TYPEID","UID","USER","USERENV","AVG","COLLECT","CORR","CORR_S","CORR_K","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","FIRST","GROUP_ID","GROUPING","GROUPING_ID","LAST","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANK","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","STATS_BINOMIAL_TEST","STATS_CROSSTAB","STATS_F_TEST","STATS_KS_TEST","STATS_MODE","STATS_MW_TEST","STATS_ONE_WAY_ANOVA","STATS_T_TEST_ONE","STATS_T_TEST_PAIRED","STATS_T_TEST_INDEP","STATS_T_TEST_INDEPU","STATS_WSR_TEST","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTILE","RATIO_TO_REPORT","ROW_NUMBER","DEREF","MAKE_REF","REF","REFTOHEX","VALUE","CV","ITERATION_NUMBER","PRESENTNNV","PRESENTV","PREVIOUS"],La=M(["SELECT [ALL | DISTINCT | UNIQUE]"]),ca=M(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER [SIBLINGS] BY","OFFSET","FETCH {FIRST | NEXT}","FOR UPDATE [OF]","INSERT [INTO | ALL INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [THEN]","UPDATE SET","RETURNING"]),NR=M(["CREATE [GLOBAL TEMPORARY | PRIVATE TEMPORARY | SHARDED | DUPLICATED | IMMUTABLE BLOCKCHAIN | BLOCKCHAIN | IMMUTABLE] TABLE","CREATE [OR REPLACE] [NO FORCE | FORCE] [EDITIONING | EDITIONABLE | EDITIONABLE EDITIONING | NONEDITIONABLE] VIEW","CREATE MATERIALIZED VIEW","UPDATE [ONLY]","DELETE FROM [ONLY]","DROP TABLE","ALTER TABLE","ADD","DROP {COLUMN | UNUSED COLUMNS | COLUMNS CONTINUE}","MODIFY","RENAME TO","RENAME COLUMN","TRUNCATE TABLE","SET SCHEMA","BEGIN","CONNECT BY","DECLARE","EXCEPT","EXCEPTION","LOOP","START WITH"]),ua=M(["UNION [ALL]","EXCEPT","INTERSECT"]),Pa=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | OUTER} APPLY"]),Da=M(["ON {UPDATE | DELETE} [SET NULL]","ON COMMIT","{ROWS | RANGE} BETWEEN"]),fa={name:"plsql",tokenizerOptions:{reservedSelect:La,reservedClauses:[...ca,...NR],reservedSetOperations:ua,reservedJoins:Pa,reservedPhrases:Da,supportsXor:!0,reservedKeywords:_a,reservedDataTypes:la,reservedFunctionNames:Ca,stringTypes:[{quote:"''-qq",prefixes:["N"]},{quote:"q''",prefixes:["N"]}],identTypes:['""-qq'],identChars:{rest:"$#"},variableTypes:[{regex:"&{1,2}[A-Za-z][A-Za-z0-9_$#]*"}],paramTypes:{numbered:[":"],named:[":"]},paramChars:{},operators:["**",":=","%","~=","^=",">>","<<","=>","@","||"],postProcess:Ma},formatOptions:{alwaysDenseOperators:["@"],onelineClauses:NR}};function Ma(e){let E=Rt;return e.map(t=>xE.SET(t)&&xE.BY(E)?Ve(Be({},t),{type:"RESERVED_KEYWORD"}):(wn(t.type)&&(E=t),t))}var pa=["ABS","ACOS","ACOSD","ACOSH","ASIN","ASIND","ASINH","ATAN","ATAN2","ATAN2D","ATAND","ATANH","CBRT","CEIL","CEILING","COS","COSD","COSH","COT","COTD","DEGREES","DIV","EXP","FACTORIAL","FLOOR","GCD","LCM","LN","LOG","LOG10","MIN_SCALE","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SCALE","SETSEED","SIGN","SIN","SIND","SINH","SQRT","TAN","TAND","TANH","TRIM_SCALE","TRUNC","WIDTH_BUCKET","ABS","ASCII","BIT_LENGTH","BTRIM","CHARACTER_LENGTH","CHAR_LENGTH","CHR","CONCAT","CONCAT_WS","FORMAT","INITCAP","LEFT","LENGTH","LOWER","LPAD","LTRIM","MD5","NORMALIZE","OCTET_LENGTH","OVERLAY","PARSE_IDENT","PG_CLIENT_ENCODING","POSITION","QUOTE_IDENT","QUOTE_LITERAL","QUOTE_NULLABLE","REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","REPEAT","REPLACE","REVERSE","RIGHT","RPAD","RTRIM","SPLIT_PART","SPRINTF","STARTS_WITH","STRING_AGG","STRING_TO_ARRAY","STRING_TO_TABLE","STRPOS","SUBSTR","SUBSTRING","TO_ASCII","TO_HEX","TRANSLATE","TRIM","UNISTR","UPPER","BIT_COUNT","BIT_LENGTH","BTRIM","CONVERT","CONVERT_FROM","CONVERT_TO","DECODE","ENCODE","GET_BIT","GET_BYTE","LENGTH","LTRIM","MD5","OCTET_LENGTH","OVERLAY","POSITION","RTRIM","SET_BIT","SET_BYTE","SHA224","SHA256","SHA384","SHA512","STRING_AGG","SUBSTR","SUBSTRING","TRIM","BIT_COUNT","BIT_LENGTH","GET_BIT","LENGTH","OCTET_LENGTH","OVERLAY","POSITION","SET_BIT","SUBSTRING","REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","TO_CHAR","TO_DATE","TO_NUMBER","TO_TIMESTAMP","CLOCK_TIMESTAMP","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_BIN","DATE_PART","DATE_TRUNC","EXTRACT","ISFINITE","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL","LOCALTIME","LOCALTIMESTAMP","MAKE_DATE","MAKE_INTERVAL","MAKE_TIME","MAKE_TIMESTAMP","MAKE_TIMESTAMPTZ","NOW","PG_SLEEP","PG_SLEEP_FOR","PG_SLEEP_UNTIL","STATEMENT_TIMESTAMP","TIMEOFDAY","TO_TIMESTAMP","TRANSACTION_TIMESTAMP","ENUM_FIRST","ENUM_LAST","ENUM_RANGE","AREA","BOUND_BOX","BOX","CENTER","CIRCLE","DIAGONAL","DIAMETER","HEIGHT","ISCLOSED","ISOPEN","LENGTH","LINE","LSEG","NPOINTS","PATH","PCLOSE","POINT","POLYGON","POPEN","RADIUS","SLOPE","WIDTH","ABBREV","BROADCAST","FAMILY","HOST","HOSTMASK","INET_MERGE","INET_SAME_FAMILY","MACADDR8_SET7BIT","MASKLEN","NETMASK","NETWORK","SET_MASKLEN","TEXT","TRUNC","ARRAY_TO_TSVECTOR","GET_CURRENT_TS_CONFIG","JSONB_TO_TSVECTOR","JSON_TO_TSVECTOR","LENGTH","NUMNODE","PHRASETO_TSQUERY","PLAINTO_TSQUERY","QUERYTREE","SETWEIGHT","STRIP","TO_TSQUERY","TO_TSVECTOR","TSQUERY_PHRASE","TSVECTOR_TO_ARRAY","TS_DEBUG","TS_DELETE","TS_FILTER","TS_HEADLINE","TS_LEXIZE","TS_PARSE","TS_RANK","TS_RANK_CD","TS_REWRITE","TS_STAT","TS_TOKEN_TYPE","WEBSEARCH_TO_TSQUERY","UUID","CURSOR_TO_XML","CURSOR_TO_XMLSCHEMA","DATABASE_TO_XML","DATABASE_TO_XMLSCHEMA","DATABASE_TO_XML_AND_XMLSCHEMA","NEXTVAL","QUERY_TO_XML","QUERY_TO_XMLSCHEMA","QUERY_TO_XML_AND_XMLSCHEMA","SCHEMA_TO_XML","SCHEMA_TO_XMLSCHEMA","SCHEMA_TO_XML_AND_XMLSCHEMA","STRING","TABLE_TO_XML","TABLE_TO_XMLSCHEMA","TABLE_TO_XML_AND_XMLSCHEMA","XMLAGG","XMLCOMMENT","XMLCONCAT","XMLELEMENT","XMLEXISTS","XMLFOREST","XMLPARSE","XMLPI","XMLROOT","XMLSERIALIZE","XMLTABLE","XML_IS_WELL_FORMED","XML_IS_WELL_FORMED_CONTENT","XML_IS_WELL_FORMED_DOCUMENT","XPATH","XPATH_EXISTS","ARRAY_TO_JSON","JSONB_AGG","JSONB_ARRAY_ELEMENTS","JSONB_ARRAY_ELEMENTS_TEXT","JSONB_ARRAY_LENGTH","JSONB_BUILD_ARRAY","JSONB_BUILD_OBJECT","JSONB_EACH","JSONB_EACH_TEXT","JSONB_EXTRACT_PATH","JSONB_EXTRACT_PATH_TEXT","JSONB_INSERT","JSONB_OBJECT","JSONB_OBJECT_AGG","JSONB_OBJECT_KEYS","JSONB_PATH_EXISTS","JSONB_PATH_EXISTS_TZ","JSONB_PATH_MATCH","JSONB_PATH_MATCH_TZ","JSONB_PATH_QUERY","JSONB_PATH_QUERY_ARRAY","JSONB_PATH_QUERY_ARRAY_TZ","JSONB_PATH_QUERY_FIRST","JSONB_PATH_QUERY_FIRST_TZ","JSONB_PATH_QUERY_TZ","JSONB_POPULATE_RECORD","JSONB_POPULATE_RECORDSET","JSONB_PRETTY","JSONB_SET","JSONB_SET_LAX","JSONB_STRIP_NULLS","JSONB_TO_RECORD","JSONB_TO_RECORDSET","JSONB_TYPEOF","JSON_AGG","JSON_ARRAY_ELEMENTS","JSON_ARRAY_ELEMENTS_TEXT","JSON_ARRAY_LENGTH","JSON_BUILD_ARRAY","JSON_BUILD_OBJECT","JSON_EACH","JSON_EACH_TEXT","JSON_EXTRACT_PATH","JSON_EXTRACT_PATH_TEXT","JSON_OBJECT","JSON_OBJECT_AGG","JSON_OBJECT_KEYS","JSON_POPULATE_RECORD","JSON_POPULATE_RECORDSET","JSON_STRIP_NULLS","JSON_TO_RECORD","JSON_TO_RECORDSET","JSON_TYPEOF","ROW_TO_JSON","TO_JSON","TO_JSONB","TO_TIMESTAMP","CURRVAL","LASTVAL","NEXTVAL","SETVAL","COALESCE","GREATEST","LEAST","NULLIF","ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_DIMS","ARRAY_FILL","ARRAY_LENGTH","ARRAY_LOWER","ARRAY_NDIMS","ARRAY_POSITION","ARRAY_POSITIONS","ARRAY_PREPEND","ARRAY_REMOVE","ARRAY_REPLACE","ARRAY_TO_STRING","ARRAY_UPPER","CARDINALITY","STRING_TO_ARRAY","TRIM_ARRAY","UNNEST","ISEMPTY","LOWER","LOWER_INC","LOWER_INF","MULTIRANGE","RANGE_MERGE","UPPER","UPPER_INC","UPPER_INF","ARRAY_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COALESCE","CORR","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","EVERY","GROUPING","JSONB_AGG","JSONB_OBJECT_AGG","JSON_AGG","JSON_OBJECT_AGG","MAX","MIN","MODE","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANGE_AGG","RANGE_INTERSECT_AGG","RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","TO_JSON","TO_JSONB","VARIANCE","VAR_POP","VAR_SAMP","XMLAGG","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER","GENERATE_SERIES","GENERATE_SUBSCRIPTS","ACLDEFAULT","ACLEXPLODE","COL_DESCRIPTION","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_QUERY","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","FORMAT_TYPE","HAS_ANY_COLUMN_PRIVILEGE","HAS_COLUMN_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE","HAS_FUNCTION_PRIVILEGE","HAS_LANGUAGE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_SEQUENCE_PRIVILEGE","HAS_SERVER_PRIVILEGE","HAS_TABLESPACE_PRIVILEGE","HAS_TABLE_PRIVILEGE","HAS_TYPE_PRIVILEGE","INET_CLIENT_ADDR","INET_CLIENT_PORT","INET_SERVER_ADDR","INET_SERVER_PORT","MAKEACLITEM","OBJ_DESCRIPTION","PG_BACKEND_PID","PG_BLOCKING_PIDS","PG_COLLATION_IS_VISIBLE","PG_CONF_LOAD_TIME","PG_CONTROL_CHECKPOINT","PG_CONTROL_INIT","PG_CONTROL_SYSTEM","PG_CONVERSION_IS_VISIBLE","PG_CURRENT_LOGFILE","PG_CURRENT_SNAPSHOT","PG_CURRENT_XACT_ID","PG_CURRENT_XACT_ID_IF_ASSIGNED","PG_DESCRIBE_OBJECT","PG_FUNCTION_IS_VISIBLE","PG_GET_CATALOG_FOREIGN_KEYS","PG_GET_CONSTRAINTDEF","PG_GET_EXPR","PG_GET_FUNCTIONDEF","PG_GET_FUNCTION_ARGUMENTS","PG_GET_FUNCTION_IDENTITY_ARGUMENTS","PG_GET_FUNCTION_RESULT","PG_GET_INDEXDEF","PG_GET_KEYWORDS","PG_GET_OBJECT_ADDRESS","PG_GET_OWNED_SEQUENCE","PG_GET_RULEDEF","PG_GET_SERIAL_SEQUENCE","PG_GET_STATISTICSOBJDEF","PG_GET_TRIGGERDEF","PG_GET_USERBYID","PG_GET_VIEWDEF","PG_HAS_ROLE","PG_IDENTIFY_OBJECT","PG_IDENTIFY_OBJECT_AS_ADDRESS","PG_INDEXAM_HAS_PROPERTY","PG_INDEX_COLUMN_HAS_PROPERTY","PG_INDEX_HAS_PROPERTY","PG_IS_OTHER_TEMP_SCHEMA","PG_JIT_AVAILABLE","PG_LAST_COMMITTED_XACT","PG_LISTENING_CHANNELS","PG_MY_TEMP_SCHEMA","PG_NOTIFICATION_QUEUE_USAGE","PG_OPCLASS_IS_VISIBLE","PG_OPERATOR_IS_VISIBLE","PG_OPFAMILY_IS_VISIBLE","PG_OPTIONS_TO_TABLE","PG_POSTMASTER_START_TIME","PG_SAFE_SNAPSHOT_BLOCKING_PIDS","PG_SNAPSHOT_XIP","PG_SNAPSHOT_XMAX","PG_SNAPSHOT_XMIN","PG_STATISTICS_OBJ_IS_VISIBLE","PG_TABLESPACE_DATABASES","PG_TABLESPACE_LOCATION","PG_TABLE_IS_VISIBLE","PG_TRIGGER_DEPTH","PG_TS_CONFIG_IS_VISIBLE","PG_TS_DICT_IS_VISIBLE","PG_TS_PARSER_IS_VISIBLE","PG_TS_TEMPLATE_IS_VISIBLE","PG_TYPEOF","PG_TYPE_IS_VISIBLE","PG_VISIBLE_IN_SNAPSHOT","PG_XACT_COMMIT_TIMESTAMP","PG_XACT_COMMIT_TIMESTAMP_ORIGIN","PG_XACT_STATUS","PQSERVERVERSION","ROW_SECURITY_ACTIVE","SESSION_USER","SHOBJ_DESCRIPTION","TO_REGCLASS","TO_REGCOLLATION","TO_REGNAMESPACE","TO_REGOPER","TO_REGOPERATOR","TO_REGPROC","TO_REGPROCEDURE","TO_REGROLE","TO_REGTYPE","TXID_CURRENT","TXID_CURRENT_IF_ASSIGNED","TXID_CURRENT_SNAPSHOT","TXID_SNAPSHOT_XIP","TXID_SNAPSHOT_XMAX","TXID_SNAPSHOT_XMIN","TXID_STATUS","TXID_VISIBLE_IN_SNAPSHOT","USER","VERSION","BRIN_DESUMMARIZE_RANGE","BRIN_SUMMARIZE_NEW_VALUES","BRIN_SUMMARIZE_RANGE","CONVERT_FROM","CURRENT_SETTING","GIN_CLEAN_PENDING_LIST","PG_ADVISORY_LOCK","PG_ADVISORY_LOCK_SHARED","PG_ADVISORY_UNLOCK","PG_ADVISORY_UNLOCK_ALL","PG_ADVISORY_UNLOCK_SHARED","PG_ADVISORY_XACT_LOCK","PG_ADVISORY_XACT_LOCK_SHARED","PG_BACKUP_START_TIME","PG_CANCEL_BACKEND","PG_COLLATION_ACTUAL_VERSION","PG_COLUMN_COMPRESSION","PG_COLUMN_SIZE","PG_COPY_LOGICAL_REPLICATION_SLOT","PG_COPY_PHYSICAL_REPLICATION_SLOT","PG_CREATE_LOGICAL_REPLICATION_SLOT","PG_CREATE_PHYSICAL_REPLICATION_SLOT","PG_CREATE_RESTORE_POINT","PG_CURRENT_WAL_FLUSH_LSN","PG_CURRENT_WAL_INSERT_LSN","PG_CURRENT_WAL_LSN","PG_DATABASE_SIZE","PG_DROP_REPLICATION_SLOT","PG_EXPORT_SNAPSHOT","PG_FILENODE_RELATION","PG_GET_WAL_REPLAY_PAUSE_STATE","PG_IMPORT_SYSTEM_COLLATIONS","PG_INDEXES_SIZE","PG_IS_IN_BACKUP","PG_IS_IN_RECOVERY","PG_IS_WAL_REPLAY_PAUSED","PG_LAST_WAL_RECEIVE_LSN","PG_LAST_WAL_REPLAY_LSN","PG_LAST_XACT_REPLAY_TIMESTAMP","PG_LOGICAL_EMIT_MESSAGE","PG_LOGICAL_SLOT_GET_BINARY_CHANGES","PG_LOGICAL_SLOT_GET_CHANGES","PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES","PG_LOGICAL_SLOT_PEEK_CHANGES","PG_LOG_BACKEND_MEMORY_CONTEXTS","PG_LS_ARCHIVE_STATUSDIR","PG_LS_DIR","PG_LS_LOGDIR","PG_LS_TMPDIR","PG_LS_WALDIR","PG_PARTITION_ANCESTORS","PG_PARTITION_ROOT","PG_PARTITION_TREE","PG_PROMOTE","PG_READ_BINARY_FILE","PG_READ_FILE","PG_RELATION_FILENODE","PG_RELATION_FILEPATH","PG_RELATION_SIZE","PG_RELOAD_CONF","PG_REPLICATION_ORIGIN_ADVANCE","PG_REPLICATION_ORIGIN_CREATE","PG_REPLICATION_ORIGIN_DROP","PG_REPLICATION_ORIGIN_OID","PG_REPLICATION_ORIGIN_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_IS_SETUP","PG_REPLICATION_ORIGIN_SESSION_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_RESET","PG_REPLICATION_ORIGIN_SESSION_SETUP","PG_REPLICATION_ORIGIN_XACT_RESET","PG_REPLICATION_ORIGIN_XACT_SETUP","PG_REPLICATION_SLOT_ADVANCE","PG_ROTATE_LOGFILE","PG_SIZE_BYTES","PG_SIZE_PRETTY","PG_START_BACKUP","PG_STAT_FILE","PG_STOP_BACKUP","PG_SWITCH_WAL","PG_TABLESPACE_SIZE","PG_TABLE_SIZE","PG_TERMINATE_BACKEND","PG_TOTAL_RELATION_SIZE","PG_TRY_ADVISORY_LOCK","PG_TRY_ADVISORY_LOCK_SHARED","PG_TRY_ADVISORY_XACT_LOCK","PG_TRY_ADVISORY_XACT_LOCK_SHARED","PG_WALFILE_NAME","PG_WALFILE_NAME_OFFSET","PG_WAL_LSN_DIFF","PG_WAL_REPLAY_PAUSE","PG_WAL_REPLAY_RESUME","SET_CONFIG","SUPPRESS_REDUNDANT_UPDATES_TRIGGER","TSVECTOR_UPDATE_TRIGGER","TSVECTOR_UPDATE_TRIGGER_COLUMN","PG_EVENT_TRIGGER_DDL_COMMANDS","PG_EVENT_TRIGGER_DROPPED_OBJECTS","PG_EVENT_TRIGGER_TABLE_REWRITE_OID","PG_EVENT_TRIGGER_TABLE_REWRITE_REASON","PG_GET_OBJECT_ADDRESS","PG_MCV_LIST_ITEMS","CAST"],Ua=["ABORT","ABSOLUTE","ACCESS","ACTION","ADD","ADMIN","AFTER","AGGREGATE","ALL","ALSO","ALTER","ALWAYS","ANALYSE","ANALYZE","AND","ANY","AS","ASC","ASENSITIVE","ASSERTION","ASSIGNMENT","ASYMMETRIC","AT","ATOMIC","ATTACH","ATTRIBUTE","AUTHORIZATION","BACKWARD","BEFORE","BEGIN","BETWEEN","BINARY","BOTH","BREADTH","BY","CACHE","CALL","CALLED","CASCADE","CASCADED","CASE","CAST","CATALOG","CHAIN","CHARACTERISTICS","CHECK","CHECKPOINT","CLASS","CLOSE","CLUSTER","COALESCE","COLLATE","COLLATION","COLUMN","COLUMNS","COMMENT","COMMENTS","COMMIT","COMMITTED","COMPRESSION","CONCURRENTLY","CONFIGURATION","CONFLICT","CONNECTION","CONSTRAINT","CONSTRAINTS","CONTENT","CONTINUE","CONVERSION","COPY","COST","CREATE","CROSS","CSV","CUBE","CURRENT","CURRENT_CATALOG","CURRENT_DATE","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","CYCLE","DATA","DATABASE","DAY","DEALLOCATE","DEC","DECLARE","DEFAULT","DEFAULTS","DEFERRABLE","DEFERRED","DEFINER","DELETE","DELIMITER","DELIMITERS","DEPENDS","DEPTH","DESC","DETACH","DICTIONARY","DISABLE","DISCARD","DISTINCT","DO","DOCUMENT","DOMAIN","DROP","EACH","ELSE","ENABLE","ENCODING","ENCRYPTED","END","ENUM","ESCAPE","EVENT","EXCEPT","EXCLUDE","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXPLAIN","EXPRESSION","EXTENSION","EXTERNAL","EXTRACT","FALSE","FAMILY","FETCH","FILTER","FINALIZE","FIRST","FOLLOWING","FOR","FORCE","FOREIGN","FORWARD","FREEZE","FROM","FULL","FUNCTION","FUNCTIONS","GENERATED","GLOBAL","GRANT","GRANTED","GREATEST","GROUP","GROUPING","GROUPS","HANDLER","HAVING","HEADER","HOLD","HOUR","IDENTITY","IF","ILIKE","IMMEDIATE","IMMUTABLE","IMPLICIT","IMPORT","IN","INCLUDE","INCLUDING","INCREMENT","INDEX","INDEXES","INHERIT","INHERITS","INITIALLY","INLINE","INNER","INOUT","INPUT","INSENSITIVE","INSERT","INSTEAD","INTERSECT","INTO","INVOKER","IS","ISNULL","ISOLATION","JOIN","KEY","LANGUAGE","LARGE","LAST","LATERAL","LEADING","LEAKPROOF","LEAST","LEFT","LEVEL","LIKE","LIMIT","LISTEN","LOAD","LOCAL","LOCALTIME","LOCALTIMESTAMP","LOCK","LOCKED","LOGGED","MAPPING","MATCH","MATERIALIZED","MAXVALUE","METHOD","MINUTE","MINVALUE","MODE","MONTH","MOVE","NATIONAL","NATURAL","NCHAR","NEW","NEXT","NFC","NFD","NFKC","NFKD","NO","NONE","NORMALIZE","NORMALIZED","NOT","NOTHING","NOTIFY","NOTNULL","NOWAIT","NULL","NULLIF","NULLS","OBJECT","OF","OFF","OFFSET","OIDS","OLD","ON","ONLY","OPERATOR","OPTION","OPTIONS","OR","ORDER","ORDINALITY","OTHERS","OUT","OUTER","OVER","OVERLAPS","OVERLAY","OVERRIDING","OWNED","OWNER","PARALLEL","PARSER","PARTIAL","PARTITION","PASSING","PASSWORD","PLACING","PLANS","POLICY","POSITION","PRECEDING","PREPARE","PREPARED","PRESERVE","PRIMARY","PRIOR","PRIVILEGES","PROCEDURAL","PROCEDURE","PROCEDURES","PROGRAM","PUBLICATION","QUOTE","RANGE","READ","REASSIGN","RECHECK","RECURSIVE","REF","REFERENCES","REFERENCING","REFRESH","REINDEX","RELATIVE","RENAME","REPEATABLE","REPLACE","REPLICA","RESET","RESTART","RESTRICT","RETURN","RETURNING","RETURNS","REVOKE","RIGHT","ROLE","ROLLBACK","ROLLUP","ROUTINE","ROUTINES","ROW","ROWS","RULE","SAVEPOINT","SCHEMA","SCHEMAS","SCROLL","SEARCH","SECOND","SECURITY","SELECT","SEQUENCE","SEQUENCES","SERIALIZABLE","SERVER","SESSION","SESSION_USER","SET","SETOF","SETS","SHARE","SHOW","SIMILAR","SIMPLE","SKIP","SNAPSHOT","SOME","SQL","STABLE","STANDALONE","START","STATEMENT","STATISTICS","STDIN","STDOUT","STORAGE","STORED","STRICT","STRIP","SUBSCRIPTION","SUBSTRING","SUPPORT","SYMMETRIC","SYSID","SYSTEM","TABLE","TABLES","TABLESAMPLE","TABLESPACE","TEMP","TEMPLATE","TEMPORARY","THEN","TIES","TO","TRAILING","TRANSACTION","TRANSFORM","TREAT","TRIGGER","TRIM","TRUE","TRUNCATE","TRUSTED","UESCAPE","UNBOUNDED","UNCOMMITTED","UNENCRYPTED","UNION","UNIQUE","UNKNOWN","UNLISTEN","UNLOGGED","UNTIL","UPDATE","USER","USING","VACUUM","VALID","VALIDATE","VALIDATOR","VALUE","VALUES","VARIADIC","VERBOSE","VERSION","VIEW","VIEWS","VOLATILE","WHEN","WHERE","WHITESPACE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","XMLATTRIBUTES","XMLCONCAT","XMLELEMENT","XMLEXISTS","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROOT","XMLSERIALIZE","XMLTABLE","YEAR","YES"],da=["ARRAY","BIGINT","BIT","BIT VARYING","BOOL","BOOLEAN","CHAR","CHARACTER","CHARACTER VARYING","DECIMAL","DOUBLE","ENUM","FLOAT","INT","INTEGER","INTERVAL","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TIMESTAMPTZ","VARCHAR","XML","ZONE"],ha=M(["SELECT [ALL | DISTINCT]"]),Ga=M(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","FOR {UPDATE | NO KEY UPDATE | SHARE | KEY SHARE} [OF]","INSERT INTO","VALUES","SET","RETURNING"]),aR=M(["CREATE [GLOBAL | LOCAL] [TEMPORARY | TEMP | UNLOGGED] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [TEMP | TEMPORARY] [RECURSIVE] VIEW","CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE [ONLY]","WHERE CURRENT OF","ON CONFLICT","DELETE FROM [ONLY]","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS] [ONLY]","ALTER TABLE ALL IN TABLESPACE","RENAME [COLUMN]","RENAME TO","ADD [COLUMN] [IF NOT EXISTS]","DROP [COLUMN] [IF EXISTS]","ALTER [COLUMN]","SET DATA TYPE","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","TRUNCATE [TABLE] [ONLY]","SET SCHEMA","AFTER","ABORT","ALTER AGGREGATE","ALTER COLLATION","ALTER CONVERSION","ALTER DATABASE","ALTER DEFAULT PRIVILEGES","ALTER DOMAIN","ALTER EVENT TRIGGER","ALTER EXTENSION","ALTER FOREIGN DATA WRAPPER","ALTER FOREIGN TABLE","ALTER FUNCTION","ALTER GROUP","ALTER INDEX","ALTER LANGUAGE","ALTER LARGE OBJECT","ALTER MATERIALIZED VIEW","ALTER OPERATOR","ALTER OPERATOR CLASS","ALTER OPERATOR FAMILY","ALTER POLICY","ALTER PROCEDURE","ALTER PUBLICATION","ALTER ROLE","ALTER ROUTINE","ALTER RULE","ALTER SCHEMA","ALTER SEQUENCE","ALTER SERVER","ALTER STATISTICS","ALTER SUBSCRIPTION","ALTER SYSTEM","ALTER TABLESPACE","ALTER TEXT SEARCH CONFIGURATION","ALTER TEXT SEARCH DICTIONARY","ALTER TEXT SEARCH PARSER","ALTER TEXT SEARCH TEMPLATE","ALTER TRIGGER","ALTER TYPE","ALTER USER","ALTER USER MAPPING","ALTER VIEW","ANALYZE","BEGIN","CALL","CHECKPOINT","CLOSE","CLUSTER","COMMIT","COMMIT PREPARED","COPY","CREATE ACCESS METHOD","CREATE AGGREGATE","CREATE CAST","CREATE COLLATION","CREATE CONVERSION","CREATE DATABASE","CREATE DOMAIN","CREATE EVENT TRIGGER","CREATE EXTENSION","CREATE FOREIGN DATA WRAPPER","CREATE FOREIGN TABLE","CREATE FUNCTION","CREATE GROUP","CREATE INDEX","CREATE LANGUAGE","CREATE OPERATOR","CREATE OPERATOR CLASS","CREATE OPERATOR FAMILY","CREATE POLICY","CREATE PROCEDURE","CREATE PUBLICATION","CREATE ROLE","CREATE RULE","CREATE SCHEMA","CREATE SEQUENCE","CREATE SERVER","CREATE STATISTICS","CREATE SUBSCRIPTION","CREATE TABLESPACE","CREATE TEXT SEARCH CONFIGURATION","CREATE TEXT SEARCH DICTIONARY","CREATE TEXT SEARCH PARSER","CREATE TEXT SEARCH TEMPLATE","CREATE TRANSFORM","CREATE TRIGGER","CREATE TYPE","CREATE USER","CREATE USER MAPPING","DEALLOCATE","DECLARE","DISCARD","DROP ACCESS METHOD","DROP AGGREGATE","DROP CAST","DROP COLLATION","DROP CONVERSION","DROP DATABASE","DROP DOMAIN","DROP EVENT TRIGGER","DROP EXTENSION","DROP FOREIGN DATA WRAPPER","DROP FOREIGN TABLE","DROP FUNCTION","DROP GROUP","DROP INDEX","DROP LANGUAGE","DROP MATERIALIZED VIEW","DROP OPERATOR","DROP OPERATOR CLASS","DROP OPERATOR FAMILY","DROP OWNED","DROP POLICY","DROP PROCEDURE","DROP PUBLICATION","DROP ROLE","DROP ROUTINE","DROP RULE","DROP SCHEMA","DROP SEQUENCE","DROP SERVER","DROP STATISTICS","DROP SUBSCRIPTION","DROP TABLESPACE","DROP TEXT SEARCH CONFIGURATION","DROP TEXT SEARCH DICTIONARY","DROP TEXT SEARCH PARSER","DROP TEXT SEARCH TEMPLATE","DROP TRANSFORM","DROP TRIGGER","DROP TYPE","DROP USER","DROP USER MAPPING","DROP VIEW","EXECUTE","EXPLAIN","FETCH","GRANT","IMPORT FOREIGN SCHEMA","LISTEN","LOAD","LOCK","MOVE","NOTIFY","PREPARE","PREPARE TRANSACTION","REASSIGN OWNED","REFRESH MATERIALIZED VIEW","REINDEX","RELEASE SAVEPOINT","RESET","REVOKE","ROLLBACK","ROLLBACK PREPARED","ROLLBACK TO SAVEPOINT","SAVEPOINT","SECURITY LABEL","SELECT INTO","SET CONSTRAINTS","SET ROLE","SET SESSION AUTHORIZATION","SET TRANSACTION","SHOW","START TRANSACTION","UNLISTEN","VACUUM"]),ga=M(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),ma=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),Ha=M(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE | GROUPS} BETWEEN","[TIMESTAMP | TIME] {WITH | WITHOUT} TIME ZONE","IS [NOT] DISTINCT FROM"]),Ba={name:"postgresql",tokenizerOptions:{reservedSelect:ha,reservedClauses:[...Ga,...aR],reservedSetOperations:ga,reservedJoins:ma,reservedPhrases:Ha,reservedKeywords:Ua,reservedDataTypes:da,reservedFunctionNames:pa,nestedBlockComments:!0,extraParens:["[]"],stringTypes:["$$",{quote:"''-qq",prefixes:["U&"]},{quote:"''-qq-bs",prefixes:["E"],requirePrefix:!0},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:[{quote:'""-qq',prefixes:["U&"]}],identChars:{rest:"$"},paramTypes:{numbered:["$"]},operators:["%","^","|/","||/","@",":=","&","|","#","~","<<",">>","~>~","~<~","~>=~","~<=~","@-@","@@","##","<->","&&","&<","&>","<<|","&<|","|>>","|&>","<^","^>","?#","?-","?|","?-|","?||","@>","<@","~=","?","@?","?&","->","->>","#>","#>>","#-","=>",">>=","<<=","~~","~~*","!~~","!~~*","~","~*","!~","!~*","-|-","||","@@@","!!","<%","%>","<<%","%>>","<<->","<->>","<<<->","<->>>","::",":"]},formatOptions:{alwaysDenseOperators:["::",":"],onelineClauses:aR}},ba=["ANY_VALUE","APPROXIMATE PERCENTILE_DISC","AVG","COUNT","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP","array","array_concat","array_flatten","get_array_length","split_to_array","subarray","BIT_AND","BIT_OR","BOOL_AND","BOOL_OR","COALESCE","DECODE","GREATEST","LEAST","NVL","NVL2","NULLIF","ADD_MONTHS","AT TIME ZONE","CONVERT_TIMEZONE","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_CMP","DATE_CMP_TIMESTAMP","DATE_CMP_TIMESTAMPTZ","DATE_PART_YEAR","DATEADD","DATEDIFF","DATE_PART","DATE_TRUNC","EXTRACT","GETDATE","INTERVAL_CMP","LAST_DAY","MONTHS_BETWEEN","NEXT_DAY","SYSDATE","TIMEOFDAY","TIMESTAMP_CMP","TIMESTAMP_CMP_DATE","TIMESTAMP_CMP_TIMESTAMPTZ","TIMESTAMPTZ_CMP","TIMESTAMPTZ_CMP_DATE","TIMESTAMPTZ_CMP_TIMESTAMP","TIMEZONE","TO_TIMESTAMP","TRUNC","AddBBox","DropBBox","GeometryType","ST_AddPoint","ST_Angle","ST_Area","ST_AsBinary","ST_AsEWKB","ST_AsEWKT","ST_AsGeoJSON","ST_AsText","ST_Azimuth","ST_Boundary","ST_Collect","ST_Contains","ST_ContainsProperly","ST_ConvexHull","ST_CoveredBy","ST_Covers","ST_Crosses","ST_Dimension","ST_Disjoint","ST_Distance","ST_DistanceSphere","ST_DWithin","ST_EndPoint","ST_Envelope","ST_Equals","ST_ExteriorRing","ST_Force2D","ST_Force3D","ST_Force3DM","ST_Force3DZ","ST_Force4D","ST_GeometryN","ST_GeometryType","ST_GeomFromEWKB","ST_GeomFromEWKT","ST_GeomFromText","ST_GeomFromWKB","ST_InteriorRingN","ST_Intersects","ST_IsPolygonCCW","ST_IsPolygonCW","ST_IsClosed","ST_IsCollection","ST_IsEmpty","ST_IsSimple","ST_IsValid","ST_Length","ST_LengthSphere","ST_Length2D","ST_LineFromMultiPoint","ST_LineInterpolatePoint","ST_M","ST_MakeEnvelope","ST_MakeLine","ST_MakePoint","ST_MakePolygon","ST_MemSize","ST_MMax","ST_MMin","ST_Multi","ST_NDims","ST_NPoints","ST_NRings","ST_NumGeometries","ST_NumInteriorRings","ST_NumPoints","ST_Perimeter","ST_Perimeter2D","ST_Point","ST_PointN","ST_Points","ST_Polygon","ST_RemovePoint","ST_Reverse","ST_SetPoint","ST_SetSRID","ST_Simplify","ST_SRID","ST_StartPoint","ST_Touches","ST_Within","ST_X","ST_XMax","ST_XMin","ST_Y","ST_YMax","ST_YMin","ST_Z","ST_ZMax","ST_ZMin","SupportsBBox","CHECKSUM","FUNC_SHA1","FNV_HASH","MD5","SHA","SHA1","SHA2","HLL","HLL_CREATE_SKETCH","HLL_CARDINALITY","HLL_COMBINE","IS_VALID_JSON","IS_VALID_JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_EXTRACT_ARRAY_ELEMENT_TEXT","JSON_EXTRACT_PATH_TEXT","JSON_PARSE","JSON_SERIALIZE","ABS","ACOS","ASIN","ATAN","ATAN2","CBRT","CEILING","CEIL","COS","COT","DEGREES","DEXP","DLOG1","DLOG10","EXP","FLOOR","LN","LOG","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SIN","SIGN","SQRT","TAN","TO_HEX","TRUNC","EXPLAIN_MODEL","ASCII","BPCHARCMP","BTRIM","BTTEXT_PATTERN_CMP","CHAR_LENGTH","CHARACTER_LENGTH","CHARINDEX","CHR","COLLATE","CONCAT","CRC32","DIFFERENCE","INITCAP","LEFT","RIGHT","LEN","LENGTH","LOWER","LPAD","RPAD","LTRIM","OCTETINDEX","OCTET_LENGTH","POSITION","QUOTE_IDENT","QUOTE_LITERAL","REGEXP_COUNT","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","REPLICATE","REVERSE","RTRIM","SOUNDEX","SPLIT_PART","STRPOS","STRTOL","SUBSTRING","TEXTLEN","TRANSLATE","TRIM","UPPER","decimal_precision","decimal_scale","is_array","is_bigint","is_boolean","is_char","is_decimal","is_float","is_integer","is_object","is_scalar","is_smallint","is_varchar","json_typeof","AVG","COUNT","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAST_VALUE","LAG","LEAD","LISTAGG","MAX","MEDIAN","MIN","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP","CAST","CONVERT","TO_CHAR","TO_DATE","TO_NUMBER","TEXT_TO_INT_ALT","TEXT_TO_NUMERIC_ALT","CHANGE_QUERY_PRIORITY","CHANGE_SESSION_PRIORITY","CHANGE_USER_PRIORITY","CURRENT_SETTING","PG_CANCEL_BACKEND","PG_TERMINATE_BACKEND","REBOOT_CLUSTER","SET_CONFIG","CURRENT_AWS_ACCOUNT","CURRENT_DATABASE","CURRENT_NAMESPACE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","CURRENT_USER_ID","HAS_ASSUMEROLE_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_TABLE_PRIVILEGE","PG_BACKEND_PID","PG_GET_COLS","PG_GET_GRANTEE_BY_IAM_ROLE","PG_GET_IAM_ROLE_BY_USER","PG_GET_LATE_BINDING_VIEW_COLS","PG_LAST_COPY_COUNT","PG_LAST_COPY_ID","PG_LAST_UNLOAD_ID","PG_LAST_QUERY_ID","PG_LAST_UNLOAD_COUNT","SESSION_USER","SLICE_NUM","USER","VERSION"],Fa=["AES128","AES256","ALL","ALLOWOVERWRITE","ANY","AS","ASC","AUTHORIZATION","BACKUP","BETWEEN","BINARY","BOTH","CHECK","COLUMN","CONSTRAINT","CREATE","CROSS","DEFAULT","DEFERRABLE","DEFLATE","DEFRAG","DESC","DISABLE","DISTINCT","DO","ENABLE","ENCODE","ENCRYPT","ENCRYPTION","EXPLICIT","FALSE","FOR","FOREIGN","FREEZE","FROM","FULL","GLOBALDICT256","GLOBALDICT64K","GROUP","IDENTITY","IGNORE","ILIKE","IN","INITIALLY","INNER","INTO","IS","ISNULL","LANGUAGE","LEADING","LIKE","LIMIT","LOCALTIME","LOCALTIMESTAMP","LUN","LUNS","MINUS","NATURAL","NEW","NOT","NOTNULL","NULL","NULLS","OFF","OFFLINE","OFFSET","OID","OLD","ON","ONLY","OPEN","ORDER","OUTER","OVERLAPS","PARALLEL","PARTITION","PERCENT","PERMISSIONS","PLACING","PRIMARY","RECOVER","REFERENCES","REJECTLOG","RESORT","RESPECT","RESTORE","SIMILAR","SNAPSHOT","SOME","SYSTEM","TABLE","TAG","TDES","THEN","TIMESTAMP","TO","TOP","TRAILING","TRUE","UNIQUE","USING","VERBOSE","WALLET","WITHOUT","ACCEPTANYDATE","ACCEPTINVCHARS","BLANKSASNULL","DATEFORMAT","EMPTYASNULL","ENCODING","ESCAPE","EXPLICIT_IDS","FILLRECORD","IGNOREBLANKLINES","IGNOREHEADER","REMOVEQUOTES","ROUNDEC","TIMEFORMAT","TRIMBLANKS","TRUNCATECOLUMNS","COMPROWS","COMPUPDATE","MAXERROR","NOLOAD","STATUPDATE","FORMAT","CSV","DELIMITER","FIXEDWIDTH","SHAPEFILE","AVRO","JSON","PARQUET","ORC","ACCESS_KEY_ID","CREDENTIALS","ENCRYPTED","IAM_ROLE","MASTER_SYMMETRIC_KEY","SECRET_ACCESS_KEY","SESSION_TOKEN","BZIP2","GZIP","LZOP","ZSTD","MANIFEST","READRATIO","REGION","SSH","RAW","AZ64","BYTEDICT","DELTA","DELTA32K","LZO","MOSTLY8","MOSTLY16","MOSTLY32","RUNLENGTH","TEXT255","TEXT32K","CATALOG_ROLE","SECRET_ARN","EXTERNAL","AUTO","EVEN","KEY","PREDICATE","COMPRESSION"],ya=["ARRAY","BIGINT","BPCHAR","CHAR","CHARACTER VARYING","CHARACTER","DECIMAL","INT","INT2","INT4","INT8","INTEGER","NCHAR","NUMERIC","NVARCHAR","SMALLINT","TEXT","VARBYTE","VARCHAR"],va=M(["SELECT [ALL | DISTINCT]"]),Ya=M(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET"]),_R=M(["CREATE [TEMPORARY | TEMP | LOCAL TEMPORARY | LOCAL TEMP] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE | MATERIALIZED] VIEW","UPDATE","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ALTER TABLE APPEND","ADD [COLUMN]","DROP [COLUMN]","RENAME TO","RENAME COLUMN","ALTER COLUMN","TYPE","ENCODE","TRUNCATE [TABLE]","ABORT","ALTER DATABASE","ALTER DATASHARE","ALTER DEFAULT PRIVILEGES","ALTER GROUP","ALTER MATERIALIZED VIEW","ALTER PROCEDURE","ALTER SCHEMA","ALTER USER","ANALYSE","ANALYZE","ANALYSE COMPRESSION","ANALYZE COMPRESSION","BEGIN","CALL","CANCEL","CLOSE","COMMIT","COPY","CREATE DATABASE","CREATE DATASHARE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL SCHEMA","CREATE EXTERNAL TABLE","CREATE FUNCTION","CREATE GROUP","CREATE LIBRARY","CREATE MODEL","CREATE PROCEDURE","CREATE SCHEMA","CREATE USER","DEALLOCATE","DECLARE","DESC DATASHARE","DROP DATABASE","DROP DATASHARE","DROP FUNCTION","DROP GROUP","DROP LIBRARY","DROP MODEL","DROP MATERIALIZED VIEW","DROP PROCEDURE","DROP SCHEMA","DROP USER","DROP VIEW","DROP","EXECUTE","EXPLAIN","FETCH","GRANT","LOCK","PREPARE","REFRESH MATERIALIZED VIEW","RESET","REVOKE","ROLLBACK","SELECT INTO","SET SESSION AUTHORIZATION","SET SESSION CHARACTERISTICS","SHOW","SHOW EXTERNAL TABLE","SHOW MODEL","SHOW DATASHARES","SHOW PROCEDURE","SHOW TABLE","SHOW VIEW","START TRANSACTION","UNLOAD","VACUUM"]),Va=M(["UNION [ALL]","EXCEPT","INTERSECT","MINUS"]),xa=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),wa=M(["NULL AS","DATA CATALOG","HIVE METASTORE","{ROWS | RANGE} BETWEEN"]),Wa={name:"redshift",tokenizerOptions:{reservedSelect:va,reservedClauses:[...Ya,..._R],reservedSetOperations:Va,reservedJoins:xa,reservedPhrases:wa,reservedKeywords:Fa,reservedDataTypes:ya,reservedFunctionNames:ba,stringTypes:["''-qq"],identTypes:['""-qq'],identChars:{first:"#"},paramTypes:{numbered:["$"]},operators:["^","%","@","|/","||/","&","|","~","<<",">>","||","::"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:_R}},Xa=["ADD","AFTER","ALL","ALTER","ANALYZE","AND","ANTI","ANY","ARCHIVE","AS","ASC","AT","AUTHORIZATION","BETWEEN","BOTH","BUCKET","BUCKETS","BY","CACHE","CASCADE","CAST","CHANGE","CHECK","CLEAR","CLUSTER","CLUSTERED","CODEGEN","COLLATE","COLLECTION","COLUMN","COLUMNS","COMMENT","COMMIT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONSTRAINT","COST","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATA","DATABASE","DATABASES","DAY","DBPROPERTIES","DEFINED","DELETE","DELIMITED","DESC","DESCRIBE","DFS","DIRECTORIES","DIRECTORY","DISTINCT","DISTRIBUTE","DIV","DROP","ESCAPE","ESCAPED","EXCEPT","EXCHANGE","EXISTS","EXPORT","EXTENDED","EXTERNAL","EXTRACT","FALSE","FETCH","FIELDS","FILTER","FILEFORMAT","FIRST","FIRST_VALUE","FOLLOWING","FOR","FOREIGN","FORMAT","FORMATTED","FULL","FUNCTION","FUNCTIONS","GLOBAL","GRANT","GROUP","GROUPING","HOUR","IF","IGNORE","IMPORT","IN","INDEX","INDEXES","INNER","INPATH","INPUTFORMAT","INTERSECT","INTO","IS","ITEMS","KEYS","LAST","LAST_VALUE","LATERAL","LAZY","LEADING","LEFT","LIKE","LINES","LIST","LOCAL","LOCATION","LOCK","LOCKS","LOGICAL","MACRO","MATCHED","MERGE","MINUTE","MONTH","MSCK","NAMESPACE","NAMESPACES","NATURAL","NO","NOT","NULL","NULLS","OF","ONLY","OPTION","OPTIONS","OR","ORDER","OUT","OUTER","OUTPUTFORMAT","OVER","OVERLAPS","OVERLAY","OVERWRITE","OWNER","PARTITION","PARTITIONED","PARTITIONS","PERCENT","PLACING","POSITION","PRECEDING","PRIMARY","PRINCIPALS","PROPERTIES","PURGE","QUERY","RANGE","RECORDREADER","RECORDWRITER","RECOVER","REDUCE","REFERENCES","RENAME","REPAIR","REPLACE","RESPECT","RESTRICT","REVOKE","RIGHT","RLIKE","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","SCHEMA","SECOND","SELECT","SEMI","SEPARATED","SERDE","SERDEPROPERTIES","SESSION_USER","SETS","SHOW","SKEWED","SOME","SORT","SORTED","START","STATISTICS","STORED","STRATIFY","SUBSTR","SUBSTRING","TABLE","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","THEN","TO","TOUCH","TRAILING","TRANSACTION","TRANSACTIONS","TRIM","TRUE","TRUNCATE","UNARCHIVE","UNBOUNDED","UNCACHE","UNIQUE","UNKNOWN","UNLOCK","UNSET","USE","USER","USING","VIEW","WINDOW","YEAR","ANALYSE","ARRAY_ZIP","COALESCE","CONTAINS","CONVERT","DAYS","DAY_HOUR","DAY_MINUTE","DAY_SECOND","DECODE","DEFAULT","DISTINCTROW","ENCODE","EXPLODE","EXPLODE_OUTER","FIXED","GREATEST","GROUP_CONCAT","HOURS","HOUR_MINUTE","HOUR_SECOND","IFNULL","LEAST","LEVEL","MINUTE_SECOND","NULLIF","OFFSET","ON","OPTIMIZE","REGEXP","SEPARATOR","SIZE","TYPE","TYPES","UNSIGNED","VARIABLES","YEAR_MONTH"],$a=["ARRAY","BIGINT","BINARY","BOOLEAN","BYTE","CHAR","DATE","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","LONG","MAP","NUMERIC","REAL","SHORT","SMALLINT","STRING","STRUCT","TIMESTAMP_LTZ","TIMESTAMP_NTZ","TIMESTAMP","TINYINT","VARCHAR"],Ka=["APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COUNT","COUNT","COUNT_IF","COUNT_MIN_SKETCH","COVAR_POP","COVAR_SAMP","EVERY","FIRST","FIRST_VALUE","GROUPING","GROUPING_ID","KURTOSIS","LAST","LAST_VALUE","MAX","MAX_BY","MEAN","MIN","MIN_BY","PERCENTILE","PERCENTILE","PERCENTILE_APPROX","SKEWNESS","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","CUME_DIST","DENSE_RANK","LAG","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER","ARRAY","ARRAY_CONTAINS","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_UNION","ARRAYS_OVERLAP","ARRAYS_ZIP","FLATTEN","SEQUENCE","SHUFFLE","SLICE","SORT_ARRAY","ELEMENT_AT","ELEMENT_AT","MAP_CONCAT","MAP_ENTRIES","MAP_FROM_ARRAYS","MAP_FROM_ENTRIES","MAP_KEYS","MAP_VALUES","STR_TO_MAP","ADD_MONTHS","CURRENT_DATE","CURRENT_DATE","CURRENT_TIMESTAMP","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","DATE_ADD","DATE_FORMAT","DATE_FROM_UNIX_DATE","DATE_PART","DATE_SUB","DATE_TRUNC","DATEDIFF","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MAKE_DATE","MAKE_DT_INTERVAL","MAKE_INTERVAL","MAKE_TIMESTAMP","MAKE_YM_INTERVAL","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","NOW","QUARTER","SECOND","SESSION_WINDOW","TIMESTAMP_MICROS","TIMESTAMP_MILLIS","TIMESTAMP_SECONDS","TO_DATE","TO_TIMESTAMP","TO_UNIX_TIMESTAMP","TO_UTC_TIMESTAMP","TRUNC","UNIX_DATE","UNIX_MICROS","UNIX_MILLIS","UNIX_SECONDS","UNIX_TIMESTAMP","WEEKDAY","WEEKOFYEAR","WINDOW","YEAR","FROM_JSON","GET_JSON_OBJECT","JSON_ARRAY_LENGTH","JSON_OBJECT_KEYS","JSON_TUPLE","SCHEMA_OF_JSON","TO_JSON","ABS","ACOS","ACOSH","AGGREGATE","ARRAY_SORT","ASCII","ASIN","ASINH","ASSERT_TRUE","ATAN","ATAN2","ATANH","BASE64","BIN","BIT_COUNT","BIT_GET","BIT_LENGTH","BROUND","BTRIM","CARDINALITY","CBRT","CEIL","CEILING","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONV","COS","COSH","COT","CRC32","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_USER","DEGREES","ELT","EXP","EXPM1","FACTORIAL","FIND_IN_SET","FLOOR","FORALL","FORMAT_NUMBER","FORMAT_STRING","FROM_CSV","GETBIT","HASH","HEX","HYPOT","INITCAP","INLINE","INLINE_OUTER","INPUT_FILE_BLOCK_LENGTH","INPUT_FILE_BLOCK_START","INPUT_FILE_NAME","INSTR","ISNAN","ISNOTNULL","ISNULL","JAVA_METHOD","LCASE","LEFT","LENGTH","LEVENSHTEIN","LN","LOCATE","LOG","LOG10","LOG1P","LOG2","LOWER","LPAD","LTRIM","MAP_FILTER","MAP_ZIP_WITH","MD5","MOD","MONOTONICALLY_INCREASING_ID","NAMED_STRUCT","NANVL","NEGATIVE","NVL","NVL2","OCTET_LENGTH","OVERLAY","PARSE_URL","PI","PMOD","POSEXPLODE","POSEXPLODE_OUTER","POSITION","POSITIVE","POW","POWER","PRINTF","RADIANS","RAISE_ERROR","RAND","RANDN","RANDOM","REFLECT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_REPLACE","REPEAT","REPLACE","REVERSE","RIGHT","RINT","ROUND","RPAD","RTRIM","SCHEMA_OF_CSV","SENTENCES","SHA","SHA1","SHA2","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIGNUM","SIN","SINH","SOUNDEX","SPACE","SPARK_PARTITION_ID","SPLIT","SQRT","STACK","SUBSTR","SUBSTRING","SUBSTRING_INDEX","TAN","TANH","TO_CSV","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRY_ADD","TRY_DIVIDE","TYPEOF","UCASE","UNBASE64","UNHEX","UPPER","UUID","VERSION","WIDTH_BUCKET","XPATH","XPATH_BOOLEAN","XPATH_DOUBLE","XPATH_FLOAT","XPATH_INT","XPATH_LONG","XPATH_NUMBER","XPATH_SHORT","XPATH_STRING","XXHASH64","ZIP_WITH","CAST","COALESCE","NULLIF"],Ja=M(["SELECT [ALL | DISTINCT]"]),ka=M(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT [INTO | OVERWRITE] [TABLE]","VALUES","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE"]),lR=M(["CREATE [EXTERNAL] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [GLOBAL TEMPORARY | TEMPORARY] VIEW [IF NOT EXISTS]","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD COLUMNS","DROP {COLUMN | COLUMNS}","RENAME TO","RENAME COLUMN","ALTER COLUMN","TRUNCATE TABLE","LATERAL VIEW","ALTER DATABASE","ALTER VIEW","CREATE DATABASE","CREATE FUNCTION","DROP DATABASE","DROP FUNCTION","DROP VIEW","REPAIR TABLE","USE DATABASE","TABLESAMPLE","PIVOT","TRANSFORM","EXPLAIN","ADD FILE","ADD JAR","ANALYZE TABLE","CACHE TABLE","CLEAR CACHE","DESCRIBE DATABASE","DESCRIBE FUNCTION","DESCRIBE QUERY","DESCRIBE TABLE","LIST FILE","LIST JAR","REFRESH","REFRESH TABLE","REFRESH FUNCTION","RESET","SHOW COLUMNS","SHOW CREATE TABLE","SHOW DATABASES","SHOW FUNCTIONS","SHOW PARTITIONS","SHOW TABLE EXTENDED","SHOW TABLES","SHOW TBLPROPERTIES","SHOW VIEWS","UNCACHE TABLE"]),ja=M(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),qa=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","[LEFT] {ANTI | SEMI} JOIN","NATURAL [LEFT] {ANTI | SEMI} JOIN"]),Qa=M(["ON DELETE","ON UPDATE","CURRENT ROW","{ROWS | RANGE} BETWEEN"]),Za={name:"spark",tokenizerOptions:{reservedSelect:Ja,reservedClauses:[...ka,...lR],reservedSetOperations:ja,reservedJoins:qa,reservedPhrases:Qa,supportsXor:!0,reservedKeywords:Xa,reservedDataTypes:$a,reservedFunctionNames:Ka,extraParens:["[]"],stringTypes:["''-bs",'""-bs',{quote:"''-raw",prefixes:["R","X"],requirePrefix:!0},{quote:'""-raw',prefixes:["R","X"],requirePrefix:!0}],identTypes:["``"],variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||","->"],postProcess:za},formatOptions:{onelineClauses:lR}};function za(e){return e.map((E,t)=>{const T=e[t-1]||Rt,r=e[t+1]||Rt;return xE.WINDOW(E)&&r.type==="OPEN_PAREN"?Ve(Be({},E),{type:"RESERVED_FUNCTION_NAME"}):E.text==="ITEMS"&&E.type==="RESERVED_KEYWORD"&&!(T.text==="COLLECTION"&&r.text==="TERMINATED")?Ve(Be({},E),{type:"IDENTIFIER",text:E.raw}):E})}var e_=["ABS","CHANGES","CHAR","COALESCE","FORMAT","GLOB","HEX","IFNULL","IIF","INSTR","LAST_INSERT_ROWID","LENGTH","LIKE","LIKELIHOOD","LIKELY","LOAD_EXTENSION","LOWER","LTRIM","NULLIF","PRINTF","QUOTE","RANDOM","RANDOMBLOB","REPLACE","ROUND","RTRIM","SIGN","SOUNDEX","SQLITE_COMPILEOPTION_GET","SQLITE_COMPILEOPTION_USED","SQLITE_OFFSET","SQLITE_SOURCE_ID","SQLITE_VERSION","SUBSTR","SUBSTRING","TOTAL_CHANGES","TRIM","TYPEOF","UNICODE","UNLIKELY","UPPER","ZEROBLOB","AVG","COUNT","GROUP_CONCAT","MAX","MIN","SUM","TOTAL","DATE","TIME","DATETIME","JULIANDAY","UNIXEPOCH","STRFTIME","row_number","rank","dense_rank","percent_rank","cume_dist","ntile","lag","lead","first_value","last_value","nth_value","ACOS","ACOSH","ASIN","ASINH","ATAN","ATAN2","ATANH","CEIL","CEILING","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG","LOG10","LOG2","MOD","PI","POW","POWER","RADIANS","SIN","SINH","SQRT","TAN","TANH","TRUNC","JSON","JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_ARRAY_LENGTH","JSON_EXTRACT","JSON_INSERT","JSON_OBJECT","JSON_PATCH","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_TYPE","JSON_TYPE","JSON_VALID","JSON_QUOTE","JSON_GROUP_ARRAY","JSON_GROUP_OBJECT","JSON_EACH","JSON_TREE","CAST"],E_=["ABORT","ACTION","ADD","AFTER","ALL","ALTER","AND","ARE","ALWAYS","ANALYZE","AS","ASC","ATTACH","AUTOINCREMENT","BEFORE","BEGIN","BETWEEN","BY","CASCADE","CASE","CAST","CHECK","COLLATE","COLUMN","COMMIT","CONFLICT","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATABASE","DEFAULT","DEFERRABLE","DEFERRED","DELETE","DESC","DETACH","DISTINCT","DO","DROP","EACH","ELSE","END","ESCAPE","EXCEPT","EXCLUDE","EXCLUSIVE","EXISTS","EXPLAIN","FAIL","FILTER","FIRST","FOLLOWING","FOR","FOREIGN","FROM","FULL","GENERATED","GLOB","GROUP","GROUPS","HAVING","IF","IGNORE","IMMEDIATE","IN","INDEX","INDEXED","INITIALLY","INNER","INSERT","INSTEAD","INTERSECT","INTO","IS","ISNULL","JOIN","KEY","LAST","LEFT","LIKE","LIMIT","MATCH","MATERIALIZED","NATURAL","NO","NOT","NOTHING","NOTNULL","NULL","NULLS","OF","OFFSET","ON","ONLY","OPEN","OR","ORDER","OTHERS","OUTER","OVER","PARTITION","PLAN","PRAGMA","PRECEDING","PRIMARY","QUERY","RAISE","RANGE","RECURSIVE","REFERENCES","REGEXP","REINDEX","RELEASE","RENAME","REPLACE","RESTRICT","RETURNING","RIGHT","ROLLBACK","ROW","ROWS","SAVEPOINT","SELECT","SET","TABLE","TEMP","TEMPORARY","THEN","TIES","TO","TRANSACTION","TRIGGER","UNBOUNDED","UNION","UNIQUE","UPDATE","USING","VACUUM","VALUES","VIEW","VIRTUAL","WHEN","WHERE","WINDOW","WITH","WITHOUT"],t_=["ANY","ARRAY","BLOB","CHARACTER","DECIMAL","INT","INTEGER","NATIVE CHARACTER","NCHAR","NUMERIC","NVARCHAR","REAL","TEXT","VARCHAR","VARYING CHARACTER"],T_=M(["SELECT [ALL | DISTINCT]"]),r_=M(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK] INTO","REPLACE INTO","VALUES","SET"]),CR=M(["CREATE [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]","CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]","UPDATE [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK]","ON CONFLICT","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME [COLUMN]","RENAME TO","SET SCHEMA"]),s_=M(["UNION [ALL]","EXCEPT","INTERSECT"]),R_=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),A_=M(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE | GROUPS} BETWEEN"]),n_={name:"sqlite",tokenizerOptions:{reservedSelect:T_,reservedClauses:[...r_,...CR],reservedSetOperations:s_,reservedJoins:R_,reservedPhrases:A_,reservedKeywords:E_,reservedDataTypes:t_,reservedFunctionNames:e_,stringTypes:["''-qq",{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``","[]"],paramTypes:{positional:!0,numbered:["?"],named:[":","@","$"]},operators:["%","~","&","|","<<",">>","==","->","->>","||"]},formatOptions:{onelineClauses:CR}},S_=["GROUPING","RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","ROW_NUMBER","POSITION","OCCURRENCES_REGEX","POSITION_REGEX","EXTRACT","CHAR_LENGTH","CHARACTER_LENGTH","OCTET_LENGTH","CARDINALITY","ABS","MOD","LN","EXP","POWER","SQRT","FLOOR","CEIL","CEILING","WIDTH_BUCKET","SUBSTRING","SUBSTRING_REGEX","UPPER","LOWER","CONVERT","TRANSLATE","TRANSLATE_REGEX","TRIM","OVERLAY","NORMALIZE","SPECIFICTYPE","CURRENT_DATE","CURRENT_TIME","LOCALTIME","CURRENT_TIMESTAMP","LOCALTIMESTAMP","COUNT","AVG","MAX","MIN","SUM","STDDEV_POP","STDDEV_SAMP","VAR_SAMP","VAR_POP","COLLECT","FUSION","INTERSECTION","COVAR_POP","COVAR_SAMP","CORR","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","PERCENTILE_CONT","PERCENTILE_DISC","CAST","COALESCE","NULLIF","ROUND","SIN","COS","TAN","ASIN","ACOS","ATAN"],i_=["ALL","ALLOCATE","ALTER","ANY","ARE","AS","ASENSITIVE","ASYMMETRIC","AT","ATOMIC","AUTHORIZATION","BEGIN","BETWEEN","BOTH","BY","CALL","CALLED","CASCADED","CAST","CHECK","CLOSE","COALESCE","COLLATE","COLUMN","COMMIT","CONDITION","CONNECT","CONSTRAINT","CORRESPONDING","CREATE","CROSS","CUBE","CURRENT","CURRENT_CATALOG","CURRENT_DEFAULT_TRANSFORM_GROUP","CURRENT_PATH","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TRANSFORM_GROUP_FOR_TYPE","CURRENT_USER","CURSOR","CYCLE","DEALLOCATE","DAY","DECLARE","DEFAULT","DELETE","DEREF","DESCRIBE","DETERMINISTIC","DISCONNECT","DISTINCT","DROP","DYNAMIC","EACH","ELEMENT","END-EXEC","ESCAPE","EVERY","EXCEPT","EXEC","EXECUTE","EXISTS","EXTERNAL","FALSE","FETCH","FILTER","FOR","FOREIGN","FREE","FROM","FULL","FUNCTION","GET","GLOBAL","GRANT","GROUP","HAVING","HOLD","HOUR","IDENTITY","IN","INDICATOR","INNER","INOUT","INSENSITIVE","INSERT","INTERSECT","INTO","IS","LANGUAGE","LARGE","LATERAL","LEADING","LEFT","LIKE","LIKE_REGEX","LOCAL","MATCH","MEMBER","MERGE","METHOD","MINUTE","MODIFIES","MODULE","MONTH","NATURAL","NEW","NO","NONE","NOT","NULL","NULLIF","OF","OLD","ON","ONLY","OPEN","ORDER","OUT","OUTER","OVER","OVERLAPS","PARAMETER","PARTITION","PRECISION","PREPARE","PRIMARY","PROCEDURE","RANGE","READS","REAL","RECURSIVE","REF","REFERENCES","REFERENCING","RELEASE","RESULT","RETURN","RETURNS","REVOKE","RIGHT","ROLLBACK","ROLLUP","ROW","ROWS","SAVEPOINT","SCOPE","SCROLL","SEARCH","SECOND","SELECT","SENSITIVE","SESSION_USER","SET","SIMILAR","SOME","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","START","STATIC","SUBMULTISET","SYMMETRIC","SYSTEM","SYSTEM_USER","TABLE","TABLESAMPLE","THEN","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO","TRAILING","TRANSLATION","TREAT","TRIGGER","TRUE","UESCAPE","UNION","UNIQUE","UNKNOWN","UNNEST","UPDATE","USER","USING","VALUE","VALUES","WHENEVER","WINDOW","WITHIN","WITHOUT","YEAR"],o_=["ARRAY","BIGINT","BINARY LARGE OBJECT","BINARY VARYING","BINARY","BLOB","BOOLEAN","CHAR LARGE OBJECT","CHAR VARYING","CHAR","CHARACTER LARGE OBJECT","CHARACTER VARYING","CHARACTER","CLOB","DATE","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","MULTISET","NATIONAL CHAR VARYING","NATIONAL CHAR","NATIONAL CHARACTER LARGE OBJECT","NATIONAL CHARACTER VARYING","NATIONAL CHARACTER","NCHAR LARGE OBJECT","NCHAR VARYING","NCHAR","NCLOB","NUMERIC","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR"],O_=M(["SELECT [ALL | DISTINCT]"]),I_=M(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET"]),LR=M(["CREATE [GLOBAL TEMPORARY | LOCAL TEMPORARY] TABLE","CREATE [RECURSIVE] VIEW","UPDATE","WHERE CURRENT OF","DELETE FROM","DROP TABLE","ALTER TABLE","ADD COLUMN","DROP [COLUMN]","RENAME COLUMN","RENAME TO","ALTER [COLUMN]","{SET | DROP} DEFAULT","ADD SCOPE","DROP SCOPE {CASCADE | RESTRICT}","RESTART WITH","TRUNCATE TABLE","SET SCHEMA"]),N_=M(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),a_=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),__=M(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),l_={name:"sql",tokenizerOptions:{reservedSelect:O_,reservedClauses:[...I_,...LR],reservedSetOperations:N_,reservedJoins:a_,reservedPhrases:__,reservedKeywords:i_,reservedDataTypes:o_,reservedFunctionNames:S_,stringTypes:[{quote:"''-qq-bs",prefixes:["N","U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``"],paramTypes:{positional:!0},operators:["||"]},formatOptions:{onelineClauses:LR}},C_=["ABS","ACOS","ALL_MATCH","ANY_MATCH","APPROX_DISTINCT","APPROX_MOST_FREQUENT","APPROX_PERCENTILE","APPROX_SET","ARBITRARY","ARRAYS_OVERLAP","ARRAY_AGG","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_SORT","ARRAY_UNION","ASIN","ATAN","ATAN2","AT_TIMEZONE","AVG","BAR","BETA_CDF","BING_TILE","BING_TILES_AROUND","BING_TILE_AT","BING_TILE_COORDINATES","BING_TILE_POLYGON","BING_TILE_QUADKEY","BING_TILE_ZOOM_LEVEL","BITWISE_AND","BITWISE_AND_AGG","BITWISE_LEFT_SHIFT","BITWISE_NOT","BITWISE_OR","BITWISE_OR_AGG","BITWISE_RIGHT_SHIFT","BITWISE_RIGHT_SHIFT_ARITHMETIC","BITWISE_XOR","BIT_COUNT","BOOL_AND","BOOL_OR","CARDINALITY","CAST","CBRT","CEIL","CEILING","CHAR2HEXINT","CHECKSUM","CHR","CLASSIFY","COALESCE","CODEPOINT","COLOR","COMBINATIONS","CONCAT","CONCAT_WS","CONTAINS","CONTAINS_SEQUENCE","CONVEX_HULL_AGG","CORR","COS","COSH","COSINE_SIMILARITY","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CRC32","CUME_DIST","CURRENT_CATALOG","CURRENT_DATE","CURRENT_GROUPS","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","DATE","DATE_ADD","DATE_DIFF","DATE_FORMAT","DATE_PARSE","DATE_TRUNC","DAY","DAY_OF_MONTH","DAY_OF_WEEK","DAY_OF_YEAR","DEGREES","DENSE_RANK","DOW","DOY","E","ELEMENT_AT","EMPTY_APPROX_SET","EVALUATE_CLASSIFIER_PREDICTIONS","EVERY","EXP","EXTRACT","FEATURES","FILTER","FIRST_VALUE","FLATTEN","FLOOR","FORMAT","FORMAT_DATETIME","FORMAT_NUMBER","FROM_BASE","FROM_BASE32","FROM_BASE64","FROM_BASE64URL","FROM_BIG_ENDIAN_32","FROM_BIG_ENDIAN_64","FROM_ENCODED_POLYLINE","FROM_GEOJSON_GEOMETRY","FROM_HEX","FROM_IEEE754_32","FROM_IEEE754_64","FROM_ISO8601_DATE","FROM_ISO8601_TIMESTAMP","FROM_ISO8601_TIMESTAMP_NANOS","FROM_UNIXTIME","FROM_UNIXTIME_NANOS","FROM_UTF8","GEOMETRIC_MEAN","GEOMETRY_FROM_HADOOP_SHAPE","GEOMETRY_INVALID_REASON","GEOMETRY_NEAREST_POINTS","GEOMETRY_TO_BING_TILES","GEOMETRY_UNION","GEOMETRY_UNION_AGG","GREATEST","GREAT_CIRCLE_DISTANCE","HAMMING_DISTANCE","HASH_COUNTS","HISTOGRAM","HMAC_MD5","HMAC_SHA1","HMAC_SHA256","HMAC_SHA512","HOUR","HUMAN_READABLE_SECONDS","IF","INDEX","INFINITY","INTERSECTION_CARDINALITY","INVERSE_BETA_CDF","INVERSE_NORMAL_CDF","IS_FINITE","IS_INFINITE","IS_JSON_SCALAR","IS_NAN","JACCARD_INDEX","JSON_ARRAY_CONTAINS","JSON_ARRAY_GET","JSON_ARRAY_LENGTH","JSON_EXISTS","JSON_EXTRACT","JSON_EXTRACT_SCALAR","JSON_FORMAT","JSON_PARSE","JSON_QUERY","JSON_SIZE","JSON_VALUE","KURTOSIS","LAG","LAST_DAY_OF_MONTH","LAST_VALUE","LEAD","LEARN_CLASSIFIER","LEARN_LIBSVM_CLASSIFIER","LEARN_LIBSVM_REGRESSOR","LEARN_REGRESSOR","LEAST","LENGTH","LEVENSHTEIN_DISTANCE","LINE_INTERPOLATE_POINT","LINE_INTERPOLATE_POINTS","LINE_LOCATE_POINT","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","LUHN_CHECK","MAKE_SET_DIGEST","MAP","MAP_AGG","MAP_CONCAT","MAP_ENTRIES","MAP_FILTER","MAP_FROM_ENTRIES","MAP_KEYS","MAP_UNION","MAP_VALUES","MAP_ZIP_WITH","MAX","MAX_BY","MD5","MERGE","MERGE_SET_DIGEST","MILLISECOND","MIN","MINUTE","MIN_BY","MOD","MONTH","MULTIMAP_AGG","MULTIMAP_FROM_ENTRIES","MURMUR3","NAN","NGRAMS","NONE_MATCH","NORMALIZE","NORMAL_CDF","NOW","NTH_VALUE","NTILE","NULLIF","NUMERIC_HISTOGRAM","OBJECTID","OBJECTID_TIMESTAMP","PARSE_DATA_SIZE","PARSE_DATETIME","PARSE_DURATION","PERCENT_RANK","PI","POSITION","POW","POWER","QDIGEST_AGG","QUARTER","RADIANS","RAND","RANDOM","RANK","REDUCE","REDUCE_AGG","REGEXP_COUNT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGRESS","REGR_INTERCEPT","REGR_SLOPE","RENDER","REPEAT","REPLACE","REVERSE","RGB","ROUND","ROW_NUMBER","RPAD","RTRIM","SECOND","SEQUENCE","SHA1","SHA256","SHA512","SHUFFLE","SIGN","SIMPLIFY_GEOMETRY","SIN","SKEWNESS","SLICE","SOUNDEX","SPATIAL_PARTITIONING","SPATIAL_PARTITIONS","SPLIT","SPLIT_PART","SPLIT_TO_MAP","SPLIT_TO_MULTIMAP","SPOOKY_HASH_V2_32","SPOOKY_HASH_V2_64","SQRT","STARTS_WITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRPOS","ST_AREA","ST_ASBINARY","ST_ASTEXT","ST_BOUNDARY","ST_BUFFER","ST_CENTROID","ST_CONTAINS","ST_CONVEXHULL","ST_COORDDIM","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_ENDPOINT","ST_ENVELOPE","ST_ENVELOPEASPTS","ST_EQUALS","ST_EXTERIORRING","ST_GEOMETRIES","ST_GEOMETRYFROMTEXT","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMBINARY","ST_INTERIORRINGN","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISRING","ST_ISSIMPLE","ST_ISVALID","ST_LENGTH","ST_LINEFROMTEXT","ST_LINESTRING","ST_MULTIPOINT","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINT","ST_POINTN","ST_POINTS","ST_POLYGON","ST_RELATE","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_TOUCHES","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","SUBSTR","SUBSTRING","SUM","TAN","TANH","TDIGEST_AGG","TIMESTAMP_OBJECTID","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO_BASE","TO_BASE32","TO_BASE64","TO_BASE64URL","TO_BIG_ENDIAN_32","TO_BIG_ENDIAN_64","TO_CHAR","TO_DATE","TO_ENCODED_POLYLINE","TO_GEOJSON_GEOMETRY","TO_GEOMETRY","TO_HEX","TO_IEEE754_32","TO_IEEE754_64","TO_ISO8601","TO_MILLISECONDS","TO_SPHERICAL_GEOGRAPHY","TO_TIMESTAMP","TO_UNIXTIME","TO_UTF8","TRANSFORM","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRIM_ARRAY","TRUNCATE","TRY","TRY_CAST","TYPEOF","UPPER","URL_DECODE","URL_ENCODE","URL_EXTRACT_FRAGMENT","URL_EXTRACT_HOST","URL_EXTRACT_PARAMETER","URL_EXTRACT_PATH","URL_EXTRACT_PORT","URL_EXTRACT_PROTOCOL","URL_EXTRACT_QUERY","UUID","VALUES_AT_QUANTILES","VALUE_AT_QUANTILE","VARIANCE","VAR_POP","VAR_SAMP","VERSION","WEEK","WEEK_OF_YEAR","WIDTH_BUCKET","WILSON_INTERVAL_LOWER","WILSON_INTERVAL_UPPER","WITH_TIMEZONE","WORD_STEM","XXHASH64","YEAR","YEAR_OF_WEEK","YOW","ZIP","ZIP_WITH","CLASSIFIER","FIRST","LAST","MATCH_NUMBER","NEXT","PERMUTE","PREV"],L_=["ABSENT","ADD","ADMIN","AFTER","ALL","ALTER","ANALYZE","AND","ANY","AS","ASC","AT","AUTHORIZATION","BERNOULLI","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CATALOGS","COLUMN","COLUMNS","COMMENT","COMMIT","COMMITTED","CONDITIONAL","CONSTRAINT","COPARTITION","CREATE","CROSS","CUBE","CURRENT","CURRENT_PATH","CURRENT_ROLE","DATA","DEALLOCATE","DEFAULT","DEFINE","DEFINER","DELETE","DENY","DESC","DESCRIBE","DESCRIPTOR","DISTINCT","DISTRIBUTED","DOUBLE","DROP","ELSE","EMPTY","ENCODING","END","ERROR","ESCAPE","EXCEPT","EXCLUDING","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FINAL","FIRST","FOLLOWING","FOR","FROM","FULL","FUNCTIONS","GRANT","GRANTED","GRANTS","GRAPHVIZ","GROUP","GROUPING","GROUPS","HAVING","IGNORE","IN","INCLUDING","INITIAL","INNER","INPUT","INSERT","INTERSECT","INTERVAL","INTO","INVOKER","IO","IS","ISOLATION","JOIN","JSON","JSON_ARRAY","JSON_OBJECT","KEEP","KEY","KEYS","LAST","LATERAL","LEADING","LEFT","LEVEL","LIKE","LIMIT","LOCAL","LOGICAL","MATCH","MATCHED","MATCHES","MATCH_RECOGNIZE","MATERIALIZED","MEASURES","NATURAL","NEXT","NFC","NFD","NFKC","NFKD","NO","NONE","NOT","NULL","NULLS","OBJECT","OF","OFFSET","OMIT","ON","ONE","ONLY","OPTION","OR","ORDER","ORDINALITY","OUTER","OUTPUT","OVER","OVERFLOW","PARTITION","PARTITIONS","PASSING","PAST","PATH","PATTERN","PER","PERMUTE","PRECEDING","PRECISION","PREPARE","PRIVILEGES","PROPERTIES","PRUNE","QUOTES","RANGE","READ","RECURSIVE","REFRESH","RENAME","REPEATABLE","RESET","RESPECT","RESTRICT","RETURNING","REVOKE","RIGHT","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","RUNNING","SCALAR","SCHEMA","SCHEMAS","SECURITY","SEEK","SELECT","SERIALIZABLE","SESSION","SET","SETS","SHOW","SKIP","SOME","START","STATS","STRING","SUBSET","SYSTEM","TABLE","TABLES","TABLESAMPLE","TEXT","THEN","TIES","TIME","TIMESTAMP","TO","TRAILING","TRANSACTION","TRUE","TYPE","UESCAPE","UNBOUNDED","UNCOMMITTED","UNCONDITIONAL","UNION","UNIQUE","UNKNOWN","UNMATCHED","UNNEST","UPDATE","USE","USER","USING","UTF16","UTF32","UTF8","VALIDATE","VALUE","VALUES","VERBOSE","VIEW","WHEN","WHERE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","ZONE"],c_=["BIGINT","INT","INTEGER","SMALLINT","TINYINT","BOOLEAN","DATE","DECIMAL","REAL","DOUBLE","HYPERLOGLOG","QDIGEST","TDIGEST","P4HYPERLOGLOG","INTERVAL","TIMESTAMP","TIME","VARBINARY","VARCHAR","CHAR","ROW","ARRAY","MAP","JSON","JSON2016","IPADDRESS","GEOMETRY","UUID","SETDIGEST","JONIREGEXP","RE2JREGEXP","LIKEPATTERN","COLOR","CODEPOINTS","FUNCTION","JSONPATH"],u_=M(["SELECT [ALL | DISTINCT]"]),P_=M(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET","MATCH_RECOGNIZE","MEASURES","ONE ROW PER MATCH","ALL ROWS PER MATCH","AFTER MATCH","PATTERN","SUBSET","DEFINE"]),cR=M(["CREATE TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [MATERIALIZED] VIEW","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME COLUMN [IF EXISTS]","RENAME TO","SET AUTHORIZATION [USER | ROLE]","SET PROPERTIES","EXECUTE","TRUNCATE TABLE","ALTER SCHEMA","ALTER MATERIALIZED VIEW","ALTER VIEW","CREATE SCHEMA","CREATE ROLE","DROP SCHEMA","DROP MATERIALIZED VIEW","DROP VIEW","DROP ROLE","EXPLAIN","ANALYZE","EXPLAIN ANALYZE","EXPLAIN ANALYZE VERBOSE","USE","DESCRIBE INPUT","DESCRIBE OUTPUT","REFRESH MATERIALIZED VIEW","RESET SESSION","SET SESSION","SET PATH","SET TIME ZONE","SHOW GRANTS","SHOW CREATE TABLE","SHOW CREATE SCHEMA","SHOW CREATE VIEW","SHOW CREATE MATERIALIZED VIEW","SHOW TABLES","SHOW SCHEMAS","SHOW CATALOGS","SHOW COLUMNS","SHOW STATS FOR","SHOW ROLES","SHOW CURRENT ROLES","SHOW ROLE GRANTS","SHOW FUNCTIONS","SHOW SESSION"]),D_=M(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),f_=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),M_=M(["{ROWS | RANGE | GROUPS} BETWEEN","IS [NOT] DISTINCT FROM"]),p_={name:"trino",tokenizerOptions:{reservedSelect:u_,reservedClauses:[...P_,...cR],reservedSetOperations:D_,reservedJoins:f_,reservedPhrases:M_,reservedKeywords:L_,reservedDataTypes:c_,reservedFunctionNames:C_,extraParens:["[]","{}"],stringTypes:[{quote:"''-qq",prefixes:["U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq'],paramTypes:{positional:!0},operators:["%","->","=>",":","||","|","^","$"]},formatOptions:{onelineClauses:cR}},U_=["APPROX_COUNT_DISTINCT","AVG","CHECKSUM_AGG","COUNT","COUNT_BIG","GROUPING","GROUPING_ID","MAX","MIN","STDEV","STDEVP","SUM","VAR","VARP","CUME_DIST","FIRST_VALUE","LAG","LAST_VALUE","LEAD","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","Collation - COLLATIONPROPERTY","Collation - TERTIARY_WEIGHTS","@@DBTS","@@LANGID","@@LANGUAGE","@@LOCK_TIMEOUT","@@MAX_CONNECTIONS","@@MAX_PRECISION","@@NESTLEVEL","@@OPTIONS","@@REMSERVER","@@SERVERNAME","@@SERVICENAME","@@SPID","@@TEXTSIZE","@@VERSION","CAST","CONVERT","PARSE","TRY_CAST","TRY_CONVERT","TRY_PARSE","ASYMKEY_ID","ASYMKEYPROPERTY","CERTPROPERTY","CERT_ID","CRYPT_GEN_RANDOM","DECRYPTBYASYMKEY","DECRYPTBYCERT","DECRYPTBYKEY","DECRYPTBYKEYAUTOASYMKEY","DECRYPTBYKEYAUTOCERT","DECRYPTBYPASSPHRASE","ENCRYPTBYASYMKEY","ENCRYPTBYCERT","ENCRYPTBYKEY","ENCRYPTBYPASSPHRASE","HASHBYTES","IS_OBJECTSIGNED","KEY_GUID","KEY_ID","KEY_NAME","SIGNBYASYMKEY","SIGNBYCERT","SYMKEYPROPERTY","VERIFYSIGNEDBYCERT","VERIFYSIGNEDBYASYMKEY","@@CURSOR_ROWS","@@FETCH_STATUS","CURSOR_STATUS","DATALENGTH","IDENT_CURRENT","IDENT_INCR","IDENT_SEED","IDENTITY","SQL_VARIANT_PROPERTY","@@DATEFIRST","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_TIMEZONE_ID","DATEADD","DATEDIFF","DATEDIFF_BIG","DATEFROMPARTS","DATENAME","DATEPART","DATETIME2FROMPARTS","DATETIMEFROMPARTS","DATETIMEOFFSETFROMPARTS","DAY","EOMONTH","GETDATE","GETUTCDATE","ISDATE","MONTH","SMALLDATETIMEFROMPARTS","SWITCHOFFSET","SYSDATETIME","SYSDATETIMEOFFSET","SYSUTCDATETIME","TIMEFROMPARTS","TODATETIMEOFFSET","YEAR","JSON","ISJSON","JSON_VALUE","JSON_QUERY","JSON_MODIFY","ABS","ACOS","ASIN","ATAN","ATN2","CEILING","COS","COT","DEGREES","EXP","FLOOR","LOG","LOG10","PI","POWER","RADIANS","RAND","ROUND","SIGN","SIN","SQRT","SQUARE","TAN","CHOOSE","GREATEST","IIF","LEAST","@@PROCID","APP_NAME","APPLOCK_MODE","APPLOCK_TEST","ASSEMBLYPROPERTY","COL_LENGTH","COL_NAME","COLUMNPROPERTY","DATABASEPROPERTYEX","DB_ID","DB_NAME","FILE_ID","FILE_IDEX","FILE_NAME","FILEGROUP_ID","FILEGROUP_NAME","FILEGROUPPROPERTY","FILEPROPERTY","FILEPROPERTYEX","FULLTEXTCATALOGPROPERTY","FULLTEXTSERVICEPROPERTY","INDEX_COL","INDEXKEY_PROPERTY","INDEXPROPERTY","NEXT VALUE FOR","OBJECT_DEFINITION","OBJECT_ID","OBJECT_NAME","OBJECT_SCHEMA_NAME","OBJECTPROPERTY","OBJECTPROPERTYEX","ORIGINAL_DB_NAME","PARSENAME","SCHEMA_ID","SCHEMA_NAME","SCOPE_IDENTITY","SERVERPROPERTY","STATS_DATE","TYPE_ID","TYPE_NAME","TYPEPROPERTY","DENSE_RANK","NTILE","RANK","ROW_NUMBER","PUBLISHINGSERVERNAME","CERTENCODED","CERTPRIVATEKEY","CURRENT_USER","DATABASE_PRINCIPAL_ID","HAS_DBACCESS","HAS_PERMS_BY_NAME","IS_MEMBER","IS_ROLEMEMBER","IS_SRVROLEMEMBER","LOGINPROPERTY","ORIGINAL_LOGIN","PERMISSIONS","PWDENCRYPT","PWDCOMPARE","SESSION_USER","SESSIONPROPERTY","SUSER_ID","SUSER_NAME","SUSER_SID","SUSER_SNAME","SYSTEM_USER","USER","USER_ID","USER_NAME","ASCII","CHAR","CHARINDEX","CONCAT","CONCAT_WS","DIFFERENCE","FORMAT","LEFT","LEN","LOWER","LTRIM","NCHAR","PATINDEX","QUOTENAME","REPLACE","REPLICATE","REVERSE","RIGHT","RTRIM","SOUNDEX","SPACE","STR","STRING_AGG","STRING_ESCAPE","STUFF","SUBSTRING","TRANSLATE","TRIM","UNICODE","UPPER","$PARTITION","@@ERROR","@@IDENTITY","@@PACK_RECEIVED","@@ROWCOUNT","@@TRANCOUNT","BINARY_CHECKSUM","CHECKSUM","COMPRESS","CONNECTIONPROPERTY","CONTEXT_INFO","CURRENT_REQUEST_ID","CURRENT_TRANSACTION_ID","DECOMPRESS","ERROR_LINE","ERROR_MESSAGE","ERROR_NUMBER","ERROR_PROCEDURE","ERROR_SEVERITY","ERROR_STATE","FORMATMESSAGE","GET_FILESTREAM_TRANSACTION_CONTEXT","GETANSINULL","HOST_ID","HOST_NAME","ISNULL","ISNUMERIC","MIN_ACTIVE_ROWVERSION","NEWID","NEWSEQUENTIALID","ROWCOUNT_BIG","SESSION_CONTEXT","XACT_STATE","@@CONNECTIONS","@@CPU_BUSY","@@IDLE","@@IO_BUSY","@@PACK_SENT","@@PACKET_ERRORS","@@TIMETICKS","@@TOTAL_ERRORS","@@TOTAL_READ","@@TOTAL_WRITE","TEXTPTR","TEXTVALID","COLUMNS_UPDATED","EVENTDATA","TRIGGER_NESTLEVEL","UPDATE","COALESCE","NULLIF"],d_=["ADD","ALL","ALTER","AND","ANY","AS","ASC","AUTHORIZATION","BACKUP","BEGIN","BETWEEN","BREAK","BROWSE","BULK","BY","CASCADE","CHECK","CHECKPOINT","CLOSE","CLUSTERED","COALESCE","COLLATE","COLUMN","COMMIT","COMPUTE","CONSTRAINT","CONTAINS","CONTAINSTABLE","CONTINUE","CONVERT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DBCC","DEALLOCATE","DECLARE","DEFAULT","DELETE","DENY","DESC","DISK","DISTINCT","DISTRIBUTED","DROP","DUMP","ERRLVL","ESCAPE","EXEC","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FILE","FILLFACTOR","FOR","FOREIGN","FREETEXT","FREETEXTTABLE","FROM","FULL","FUNCTION","GOTO","GRANT","GROUP","HAVING","HOLDLOCK","IDENTITY","IDENTITYCOL","IDENTITY_INSERT","IF","IN","INDEX","INNER","INSERT","INTERSECT","INTO","IS","JOIN","KEY","KILL","LEFT","LIKE","LINENO","LOAD","MERGE","NOCHECK","NONCLUSTERED","NOT","NULL","NULLIF","OF","OFF","OFFSETS","ON","OPEN","OPENDATASOURCE","OPENQUERY","OPENROWSET","OPENXML","OPTION","OR","ORDER","OUTER","OVER","PERCENT","PIVOT","PLAN","PRIMARY","PRINT","PROC","PROCEDURE","PUBLIC","RAISERROR","READ","READTEXT","RECONFIGURE","REFERENCES","REPLICATION","RESTORE","RESTRICT","RETURN","REVERT","REVOKE","RIGHT","ROLLBACK","ROWCOUNT","ROWGUIDCOL","RULE","SAVE","SCHEMA","SECURITYAUDIT","SELECT","SEMANTICKEYPHRASETABLE","SEMANTICSIMILARITYDETAILSTABLE","SEMANTICSIMILARITYTABLE","SESSION_USER","SET","SETUSER","SHUTDOWN","SOME","STATISTICS","SYSTEM_USER","TABLE","TABLESAMPLE","TEXTSIZE","THEN","TO","TOP","TRAN","TRANSACTION","TRIGGER","TRUNCATE","TRY_CONVERT","TSEQUAL","UNION","UNIQUE","UNPIVOT","UPDATE","UPDATETEXT","USE","USER","VALUES","VIEW","WAITFOR","WHERE","WHILE","WITH","WITHIN GROUP","WRITETEXT","ABSOLUTE","ACTION","ADA","ALLOCATE","ARE","ASSERTION","AT","AVG","BIT_LENGTH","BOTH","CASCADED","CAST","CATALOG","CHARACTER_LENGTH","CHAR_LENGTH","COLLATION","CONNECT","CONNECTION","CONSTRAINTS","CORRESPONDING","COUNT","DAY","DEFERRABLE","DEFERRED","DESCRIBE","DESCRIPTOR","DIAGNOSTICS","DISCONNECT","DOMAIN","END-EXEC","EXCEPTION","EXTRACT","FALSE","FIRST","FORTRAN","FOUND","GET","GLOBAL","GO","HOUR","IMMEDIATE","INCLUDE","INDICATOR","INITIALLY","INPUT","INSENSITIVE","INTERVAL","ISOLATION","LANGUAGE","LAST","LEADING","LEVEL","LOCAL","LOWER","MATCH","MAX","MIN","MINUTE","MODULE","MONTH","NAMES","NATURAL","NEXT","NO","NONE","OCTET_LENGTH","ONLY","OUTPUT","OVERLAPS","PAD","PARTIAL","PASCAL","POSITION","PREPARE","PRESERVE","PRIOR","PRIVILEGES","RELATIVE","ROWS","SCROLL","SECOND","SECTION","SESSION","SIZE","SPACE","SQL","SQLCA","SQLCODE","SQLERROR","SQLSTATE","SQLWARNING","SUBSTRING","SUM","TEMPORARY","TIMEZONE_HOUR","TIMEZONE_MINUTE","TRAILING","TRANSLATE","TRANSLATION","TRIM","TRUE","UNKNOWN","UPPER","USAGE","VALUE","WHENEVER","WORK","WRITE","YEAR","ZONE"],h_=["BINARY","BIT","CHAR","CHAR","CHARACTER","DATE","DATETIME2","DATETIMEOFFSET","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","NATIONAL","NCHAR","NUMERIC","NVARCHAR","PRECISION","REAL","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR"],G_=M(["SELECT [ALL | DISTINCT]"]),g_=M(["WITH","INTO","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","OFFSET","FETCH {FIRST | NEXT}","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY TARGET | BY SOURCE] [THEN]","UPDATE SET","CREATE [OR ALTER] {PROC | PROCEDURE}"]),uR=M(["CREATE TABLE","CREATE [OR ALTER] [MATERIALIZED] VIEW","UPDATE","WHERE CURRENT OF","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD","DROP COLUMN [IF EXISTS]","ALTER COLUMN","TRUNCATE TABLE","ADD SENSITIVITY CLASSIFICATION","ADD SIGNATURE","AGGREGATE","ANSI_DEFAULTS","ANSI_NULLS","ANSI_NULL_DFLT_OFF","ANSI_NULL_DFLT_ON","ANSI_PADDING","ANSI_WARNINGS","APPLICATION ROLE","ARITHABORT","ARITHIGNORE","ASSEMBLY","ASYMMETRIC KEY","AUTHORIZATION","AVAILABILITY GROUP","BACKUP","BACKUP CERTIFICATE","BACKUP MASTER KEY","BACKUP SERVICE MASTER KEY","BEGIN CONVERSATION TIMER","BEGIN DIALOG CONVERSATION","BROKER PRIORITY","BULK INSERT","CERTIFICATE","CLOSE MASTER KEY","CLOSE SYMMETRIC KEY","COLLATE","COLUMN ENCRYPTION KEY","COLUMN MASTER KEY","COLUMNSTORE INDEX","CONCAT_NULL_YIELDS_NULL","CONTEXT_INFO","CONTRACT","CREDENTIAL","CRYPTOGRAPHIC PROVIDER","CURSOR_CLOSE_ON_COMMIT","DATABASE","DATABASE AUDIT SPECIFICATION","DATABASE ENCRYPTION KEY","DATABASE HADR","DATABASE SCOPED CONFIGURATION","DATABASE SCOPED CREDENTIAL","DATABASE SET","DATEFIRST","DATEFORMAT","DEADLOCK_PRIORITY","DENY","DENY XML","DISABLE TRIGGER","ENABLE TRIGGER","END CONVERSATION","ENDPOINT","EVENT NOTIFICATION","EVENT SESSION","EXECUTE AS","EXTERNAL DATA SOURCE","EXTERNAL FILE FORMAT","EXTERNAL LANGUAGE","EXTERNAL LIBRARY","EXTERNAL RESOURCE POOL","EXTERNAL TABLE","FIPS_FLAGGER","FMTONLY","FORCEPLAN","FULLTEXT CATALOG","FULLTEXT INDEX","FULLTEXT STOPLIST","FUNCTION","GET CONVERSATION GROUP","GET_TRANSMISSION_STATUS","GRANT","GRANT XML","IDENTITY_INSERT","IMPLICIT_TRANSACTIONS","INDEX","LANGUAGE","LOCK_TIMEOUT","LOGIN","MASTER KEY","MESSAGE TYPE","MOVE CONVERSATION","NOCOUNT","NOEXEC","NUMERIC_ROUNDABORT","OFFSETS","OPEN MASTER KEY","OPEN SYMMETRIC KEY","PARSEONLY","PARTITION FUNCTION","PARTITION SCHEME","PROCEDURE","QUERY_GOVERNOR_COST_LIMIT","QUEUE","QUOTED_IDENTIFIER","RECEIVE","REMOTE SERVICE BINDING","REMOTE_PROC_TRANSACTIONS","RESOURCE GOVERNOR","RESOURCE POOL","RESTORE","RESTORE FILELISTONLY","RESTORE HEADERONLY","RESTORE LABELONLY","RESTORE MASTER KEY","RESTORE REWINDONLY","RESTORE SERVICE MASTER KEY","RESTORE VERIFYONLY","REVERT","REVOKE","REVOKE XML","ROLE","ROUTE","ROWCOUNT","RULE","SCHEMA","SEARCH PROPERTY LIST","SECURITY POLICY","SELECTIVE XML INDEX","SEND","SENSITIVITY CLASSIFICATION","SEQUENCE","SERVER AUDIT","SERVER AUDIT SPECIFICATION","SERVER CONFIGURATION","SERVER ROLE","SERVICE","SERVICE MASTER KEY","SETUSER","SHOWPLAN_ALL","SHOWPLAN_TEXT","SHOWPLAN_XML","SIGNATURE","SPATIAL INDEX","STATISTICS","STATISTICS IO","STATISTICS PROFILE","STATISTICS TIME","STATISTICS XML","SYMMETRIC KEY","SYNONYM","TABLE","TABLE IDENTITY","TEXTSIZE","TRANSACTION ISOLATION LEVEL","TRIGGER","TYPE","UPDATE STATISTICS","USER","WORKLOAD GROUP","XACT_ABORT","XML INDEX","XML SCHEMA COLLECTION"]),m_=M(["UNION [ALL]","EXCEPT","INTERSECT"]),H_=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","{CROSS | OUTER} APPLY"]),B_=M(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),b_={name:"transactsql",tokenizerOptions:{reservedSelect:G_,reservedClauses:[...g_,...uR],reservedSetOperations:m_,reservedJoins:H_,reservedPhrases:B_,reservedKeywords:d_,reservedDataTypes:h_,reservedFunctionNames:U_,nestedBlockComments:!0,stringTypes:[{quote:"''-qq",prefixes:["N"]}],identTypes:['""-qq',"[]"],identChars:{first:"#@",rest:"#@$"},paramTypes:{named:["@"],quoted:["@"]},operators:["%","&","|","^","~","!<","!>","+=","-=","*=","/=","%=","|=","&=","^=","::",":"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:uR}},F_=["ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","_BINARY","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DROP","DUAL","EACH","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","EXTRA_JOIN","FALSE","FETCH","FOR","FORCE","FORCE_COMPILED_MODE","FORCE_INTERPRETER_MODE","FOREIGN","FROM","FULL","FULLTEXT","GRANT","GROUP","HAVING","HEARTBEAT_NO_LOGGING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","IN","_INTERNAL_DYNAMIC_TYPECAST","INTERSECT","INTERVAL","INTO","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LOOP","LOW_PRIORITY","MATCH","MAXVALUE","MINUS","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NO_QUERY_REWRITE","NOT","NO_WRITE_TO_BINLOG","NO_QUERY_REWRITE","NULL","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PRIMARY","PROCEDURE","PURGE","RANGE","READ","READS","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESTRICT","RETURN","REVOKE","RIGHT","RIGHT_ANTI_JOIN","RIGHT_SEMI_JOIN","RIGHT_STRAIGHT_JOIN","RLIKE","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SEMI_JOIN","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SPATIAL","SPECIFIC","SQL","SQL_BIG_RESULT","SQL_BUFFER_RESULT","SQL_CACHE","SQL_CALC_FOUND_ROWS","SQLEXCEPTION","SQL_NO_CACHE","SQL_NO_LOGGING","SQL_SMALL_RESULT","SQLSTATE","SQLWARNING","STRAIGHT_JOIN","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNBOUNDED","UNDO","UNION","UNIQUE","UNLOCK","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","_UTF8","VALUES","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WRITE","XOR","YEAR_MONTH","ZEROFILL"],y_=["BIGINT","BINARY","BIT","BLOB","CHAR","CHARACTER","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONG","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","UNSIGNED","VARBINARY","VARCHAR","VARCHARACTER","YEAR"],v_=["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_COUNT_DISTINCT_ACCUMULATE","APPROX_COUNT_DISTINCT_COMBINE","APPROX_COUNT_DISTINCT_ESTIMATE","APPROX_GEOGRAPHY_INTERSECTS","APPROX_PERCENTILE","ASCII","ASIN","ATAN","ATAN2","AVG","BIN","BINARY","BIT_AND","BIT_COUNT","BIT_OR","BIT_XOR","CAST","CEIL","CEILING","CHAR","CHARACTER_LENGTH","CHAR_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COLLECT","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATEDIFF","DATE_FORMAT","DATE_SUB","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DECODE","DEFAULT","DEGREES","DENSE_RANK","DIV","DOT_PRODUCT","ELT","EUCLIDEAN_DISTANCE","EXP","EXTRACT","FIELD","FIRST","FIRST_VALUE","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOGRAPHY_AREA","GEOGRAPHY_CONTAINS","GEOGRAPHY_DISTANCE","GEOGRAPHY_INTERSECTS","GEOGRAPHY_LATITUDE","GEOGRAPHY_LENGTH","GEOGRAPHY_LONGITUDE","GEOGRAPHY_POINT","GEOGRAPHY_WITHIN_DISTANCE","GEOMETRY_AREA","GEOMETRY_CONTAINS","GEOMETRY_DISTANCE","GEOMETRY_FILTER","GEOMETRY_INTERSECTS","GEOMETRY_LENGTH","GEOMETRY_POINT","GEOMETRY_WITHIN_DISTANCE","GEOMETRY_X","GEOMETRY_Y","GREATEST","GROUPING","GROUP_CONCAT","HEX","HIGHLIGHT","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INITCAP","INSERT","INSTR","INTERVAL","IS","IS NULL","JSON_AGG","JSON_ARRAY_CONTAINS_DOUBLE","JSON_ARRAY_CONTAINS_JSON","JSON_ARRAY_CONTAINS_STRING","JSON_ARRAY_PUSH_DOUBLE","JSON_ARRAY_PUSH_JSON","JSON_ARRAY_PUSH_STRING","JSON_DELETE_KEY","JSON_EXTRACT_DOUBLE","JSON_EXTRACT_JSON","JSON_EXTRACT_STRING","JSON_EXTRACT_BIGINT","JSON_GET_TYPE","JSON_LENGTH","JSON_SET_DOUBLE","JSON_SET_JSON","JSON_SET_STRING","JSON_SPLICE_DOUBLE","JSON_SPLICE_JSON","JSON_SPLICE_STRING","LAG","LAST_DAY","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LN","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LPAD","LTRIM","MATCH","MAX","MD5","MEDIAN","MICROSECOND","MIN","MINUTE","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","NOT","NOW","NTH_VALUE","NTILE","NULLIF","OCTET_LENGTH","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIVOT","POSITION","POW","POWER","QUARTER","QUOTE","RADIANS","RAND","RANK","REGEXP","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCALAR","SCHEMA","SEC_TO_TIME","SHA1","SHA2","SIGMOID","SIGN","SIN","SLEEP","SPLIT","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUM","SYS_GUID","TAN","TIME","TIMEDIFF","TIME_BUCKET","TIME_FORMAT","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_JSON","TO_NUMBER","TO_SECONDS","TO_TIMESTAMP","TRIM","TRUNC","TRUNCATE","UCASE","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","VALUES","VARIANCE","VAR_POP","VAR_SAMP","VECTOR_SUB","VERSION","WEEK","WEEKDAY","WEEKOFYEAR","YEAR"],Y_=M(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),V_=M(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [IGNORE] [INTO]","VALUES","REPLACE [INTO]","ON DUPLICATE KEY UPDATE","SET","CREATE [OR REPLACE] [TEMPORARY] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] [EXTERNAL] FUNCTION"]),PR=M(["CREATE [ROWSTORE] [REFERENCE | TEMPORARY | GLOBAL TEMPORARY] TABLE [IF NOT EXISTS]","CREATE VIEW","UPDATE","DELETE [FROM]","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] TABLE","ADD [COLUMN]","ADD [UNIQUE] {INDEX | KEY}","DROP [COLUMN]","MODIFY [COLUMN]","CHANGE","RENAME [TO | AS]","TRUNCATE [TABLE]","ADD AGGREGATOR","ADD LEAF","AGGREGATOR SET AS MASTER","ALTER DATABASE","ALTER PIPELINE","ALTER RESOURCE POOL","ALTER USER","ALTER VIEW","ANALYZE TABLE","ATTACH DATABASE","ATTACH LEAF","ATTACH LEAF ALL","BACKUP DATABASE","BINLOG","BOOTSTRAP AGGREGATOR","CACHE INDEX","CALL","CHANGE","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK BLOB CHECKSUM","CHECK TABLE","CHECKSUM TABLE","CLEAR ORPHAN DATABASES","CLONE","COMMIT","CREATE DATABASE","CREATE GROUP","CREATE INDEX","CREATE LINK","CREATE MILESTONE","CREATE PIPELINE","CREATE RESOURCE POOL","CREATE ROLE","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DETACH DATABASE","DETACH PIPELINE","DROP DATABASE","DROP FUNCTION","DROP INDEX","DROP LINK","DROP PIPELINE","DROP PROCEDURE","DROP RESOURCE POOL","DROP ROLE","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","FORCE","GRANT","HANDLER","HELP","KILL CONNECTION","KILLALL QUERIES","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","REBALANCE PARTITIONS","RELEASE SAVEPOINT","REMOVE AGGREGATOR","REMOVE LEAF","REPAIR TABLE","REPLACE","REPLICATE DATABASE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","RESTORE DATABASE","RESTORE REDUNDANCY","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE FUNCTION","SHOW CREATE PIPELINE","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SNAPSHOT DATABASE","SOURCE_POS_WAIT","START GROUP_REPLICATION","START PIPELINE","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP PIPELINE","STOP REPLICA","STOP REPLICATING","STOP SLAVE","TEST PIPELINE","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),x_=M(["UNION [ALL | DISTINCT]","EXCEPT","INTERSECT","MINUS"]),w_=M(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),W_=M(["ON DELETE","ON UPDATE","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),X_={name:"singlestoredb",tokenizerOptions:{reservedSelect:Y_,reservedClauses:[...V_,...PR],reservedSetOperations:x_,reservedJoins:w_,reservedPhrases:W_,reservedKeywords:F_,reservedDataTypes:y_,reservedFunctionNames:v_,stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_$]+"},{quote:"``",prefixes:["@"],requirePrefix:!0}],lineCommentTypes:["--","#"],operators:[":=","&","|","^","~","<<",">>","<=>","&&","||","::","::$","::%",":>","!:>","*.*"],postProcess:Qr},formatOptions:{alwaysDenseOperators:["::","::$","::%"],onelineClauses:PR}},$_=["ABS","ACOS","ACOSH","ADD_MONTHS","ALL_USER_NAMES","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","APPROX_PERCENTILE_ACCUMULATE","APPROX_PERCENTILE_COMBINE","APPROX_PERCENTILE_ESTIMATE","APPROX_TOP_K","APPROX_TOP_K_ACCUMULATE","APPROX_TOP_K_COMBINE","APPROX_TOP_K_ESTIMATE","APPROXIMATE_JACCARD_INDEX","APPROXIMATE_SIMILARITY","ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_COMPACT","ARRAY_CONSTRUCT","ARRAY_CONSTRUCT_COMPACT","ARRAY_CONTAINS","ARRAY_INSERT","ARRAY_INTERSECTION","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_SIZE","ARRAY_SLICE","ARRAY_TO_STRING","ARRAY_UNION_AGG","ARRAY_UNIQUE_AGG","ARRAYS_OVERLAP","AS_ARRAY","AS_BINARY","AS_BOOLEAN","AS_CHAR","AS_VARCHAR","AS_DATE","AS_DECIMAL","AS_NUMBER","AS_DOUBLE","AS_REAL","AS_INTEGER","AS_OBJECT","AS_TIME","AS_TIMESTAMP_LTZ","AS_TIMESTAMP_NTZ","AS_TIMESTAMP_TZ","ASCII","ASIN","ASINH","ATAN","ATAN2","ATANH","AUTO_REFRESH_REGISTRATION_HISTORY","AUTOMATIC_CLUSTERING_HISTORY","AVG","BASE64_DECODE_BINARY","BASE64_DECODE_STRING","BASE64_ENCODE","BIT_LENGTH","BITAND","BITAND_AGG","BITMAP_BIT_POSITION","BITMAP_BUCKET_NUMBER","BITMAP_CONSTRUCT_AGG","BITMAP_COUNT","BITMAP_OR_AGG","BITNOT","BITOR","BITOR_AGG","BITSHIFTLEFT","BITSHIFTRIGHT","BITXOR","BITXOR_AGG","BOOLAND","BOOLAND_AGG","BOOLNOT","BOOLOR","BOOLOR_AGG","BOOLXOR","BOOLXOR_AGG","BUILD_SCOPED_FILE_URL","BUILD_STAGE_FILE_URL","CASE","CAST","CBRT","CEIL","CHARINDEX","CHECK_JSON","CHECK_XML","CHR","CHAR","COALESCE","COLLATE","COLLATION","COMPLETE_TASK_GRAPHS","COMPRESS","CONCAT","CONCAT_WS","CONDITIONAL_CHANGE_EVENT","CONDITIONAL_TRUE_EVENT","CONTAINS","CONVERT_TIMEZONE","COPY_HISTORY","CORR","COS","COSH","COT","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CUME_DIST","CURRENT_ACCOUNT","CURRENT_AVAILABLE_ROLES","CURRENT_CLIENT","CURRENT_DATABASE","CURRENT_DATE","CURRENT_IP_ADDRESS","CURRENT_REGION","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_SECONDARY_ROLES","CURRENT_SESSION","CURRENT_STATEMENT","CURRENT_TASK_GRAPHS","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TRANSACTION","CURRENT_USER","CURRENT_VERSION","CURRENT_WAREHOUSE","DATA_TRANSFER_HISTORY","DATABASE_REFRESH_HISTORY","DATABASE_REFRESH_PROGRESS","DATABASE_REFRESH_PROGRESS_BY_JOB","DATABASE_STORAGE_USAGE_HISTORY","DATE_FROM_PARTS","DATE_PART","DATE_TRUNC","DATEADD","DATEDIFF","DAYNAME","DECODE","DECOMPRESS_BINARY","DECOMPRESS_STRING","DECRYPT","DECRYPT_RAW","DEGREES","DENSE_RANK","DIV0","EDITDISTANCE","ENCRYPT","ENCRYPT_RAW","ENDSWITH","EQUAL_NULL","EXP","EXPLAIN_JSON","EXTERNAL_FUNCTIONS_HISTORY","EXTERNAL_TABLE_FILES","EXTERNAL_TABLE_FILE_REGISTRATION_HISTORY","EXTRACT","EXTRACT_SEMANTIC_CATEGORIES","FACTORIAL","FIRST_VALUE","FLATTEN","FLOOR","GENERATE_COLUMN_DESCRIPTION","GENERATOR","GET","GET_ABSOLUTE_PATH","GET_DDL","GET_IGNORE_CASE","GET_OBJECT_REFERENCES","GET_PATH","GET_PRESIGNED_URL","GET_RELATIVE_PATH","GET_STAGE_LOCATION","GETBIT","GREATEST","GROUPING","GROUPING_ID","HASH","HASH_AGG","HAVERSINE","HEX_DECODE_BINARY","HEX_DECODE_STRING","HEX_ENCODE","HLL","HLL_ACCUMULATE","HLL_COMBINE","HLL_ESTIMATE","HLL_EXPORT","HLL_IMPORT","HOUR","MINUTE","SECOND","IFF","IFNULL","ILIKE","ILIKE ANY","INFER_SCHEMA","INITCAP","INSERT","INVOKER_ROLE","INVOKER_SHARE","IS_ARRAY","IS_BINARY","IS_BOOLEAN","IS_CHAR","IS_VARCHAR","IS_DATE","IS_DATE_VALUE","IS_DECIMAL","IS_DOUBLE","IS_REAL","IS_GRANTED_TO_INVOKER_ROLE","IS_INTEGER","IS_NULL_VALUE","IS_OBJECT","IS_ROLE_IN_SESSION","IS_TIME","IS_TIMESTAMP_LTZ","IS_TIMESTAMP_NTZ","IS_TIMESTAMP_TZ","JAROWINKLER_SIMILARITY","JSON_EXTRACT_PATH_TEXT","KURTOSIS","LAG","LAST_DAY","LAST_QUERY_ID","LAST_TRANSACTION","LAST_VALUE","LEAD","LEAST","LEFT","LENGTH","LEN","LIKE","LIKE ALL","LIKE ANY","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOGIN_HISTORY","LOGIN_HISTORY_BY_USER","LOWER","LPAD","LTRIM","MATERIALIZED_VIEW_REFRESH_HISTORY","MD5","MD5_HEX","MD5_BINARY","MD5_NUMBER — Obsoleted","MD5_NUMBER_LOWER64","MD5_NUMBER_UPPER64","MEDIAN","MIN","MAX","MINHASH","MINHASH_COMBINE","MOD","MODE","MONTHNAME","MONTHS_BETWEEN","NEXT_DAY","NORMAL","NTH_VALUE","NTILE","NULLIF","NULLIFZERO","NVL","NVL2","OBJECT_AGG","OBJECT_CONSTRUCT","OBJECT_CONSTRUCT_KEEP_NULL","OBJECT_DELETE","OBJECT_INSERT","OBJECT_KEYS","OBJECT_PICK","OCTET_LENGTH","PARSE_IP","PARSE_JSON","PARSE_URL","PARSE_XML","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIPE_USAGE_HISTORY","POLICY_CONTEXT","POLICY_REFERENCES","POSITION","POW","POWER","PREVIOUS_DAY","QUERY_ACCELERATION_HISTORY","QUERY_HISTORY","QUERY_HISTORY_BY_SESSION","QUERY_HISTORY_BY_USER","QUERY_HISTORY_BY_WAREHOUSE","RADIANS","RANDOM","RANDSTR","RANK","RATIO_TO_REPORT","REGEXP","REGEXP_COUNT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","REGEXP_SUBSTR_ALL","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","REGR_VALX","REGR_VALY","REPEAT","REPLACE","REPLICATION_GROUP_REFRESH_HISTORY","REPLICATION_GROUP_REFRESH_PROGRESS","REPLICATION_GROUP_REFRESH_PROGRESS_BY_JOB","REPLICATION_GROUP_USAGE_HISTORY","REPLICATION_USAGE_HISTORY","REST_EVENT_HISTORY","RESULT_SCAN","REVERSE","RIGHT","RLIKE","ROUND","ROW_NUMBER","RPAD","RTRIM","RTRIMMED_LENGTH","SEARCH_OPTIMIZATION_HISTORY","SEQ1","SEQ2","SEQ4","SEQ8","SERVERLESS_TASK_HISTORY","SHA1","SHA1_HEX","SHA1_BINARY","SHA2","SHA2_HEX","SHA2_BINARY","SIGN","SIN","SINH","SKEW","SOUNDEX","SPACE","SPLIT","SPLIT_PART","SPLIT_TO_TABLE","SQRT","SQUARE","ST_AREA","ST_ASEWKB","ST_ASEWKT","ST_ASGEOJSON","ST_ASWKB","ST_ASBINARY","ST_ASWKT","ST_ASTEXT","ST_AZIMUTH","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DWITHIN","ST_ENDPOINT","ST_ENVELOPE","ST_GEOGFROMGEOHASH","ST_GEOGPOINTFROMGEOHASH","ST_GEOGRAPHYFROMWKB","ST_GEOGRAPHYFROMWKT","ST_GEOHASH","ST_GEOMETRYFROMWKB","ST_GEOMETRYFROMWKT","ST_HAUSDORFFDISTANCE","ST_INTERSECTION","ST_INTERSECTS","ST_LENGTH","ST_MAKEGEOMPOINT","ST_GEOM_POINT","ST_MAKELINE","ST_MAKEPOINT","ST_POINT","ST_MAKEPOLYGON","ST_POLYGON","ST_NPOINTS","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SETSRID","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","STAGE_DIRECTORY_FILE_REGISTRATION_HISTORY","STAGE_STORAGE_USAGE_HISTORY","STARTSWITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRIP_NULL_VALUE","STRTOK","STRTOK_SPLIT_TO_TABLE","STRTOK_TO_ARRAY","SUBSTR","SUBSTRING","SUM","SYSDATE","SYSTEM$ABORT_SESSION","SYSTEM$ABORT_TRANSACTION","SYSTEM$AUTHORIZE_PRIVATELINK","SYSTEM$AUTHORIZE_STAGE_PRIVATELINK_ACCESS","SYSTEM$BEHAVIOR_CHANGE_BUNDLE_STATUS","SYSTEM$CANCEL_ALL_QUERIES","SYSTEM$CANCEL_QUERY","SYSTEM$CLUSTERING_DEPTH","SYSTEM$CLUSTERING_INFORMATION","SYSTEM$CLUSTERING_RATIO ","SYSTEM$CURRENT_USER_TASK_NAME","SYSTEM$DATABASE_REFRESH_HISTORY ","SYSTEM$DATABASE_REFRESH_PROGRESS","SYSTEM$DATABASE_REFRESH_PROGRESS_BY_JOB ","SYSTEM$DISABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$DISABLE_DATABASE_REPLICATION","SYSTEM$ENABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$ESTIMATE_QUERY_ACCELERATION","SYSTEM$ESTIMATE_SEARCH_OPTIMIZATION_COSTS","SYSTEM$EXPLAIN_JSON_TO_TEXT","SYSTEM$EXPLAIN_PLAN_JSON","SYSTEM$EXTERNAL_TABLE_PIPE_STATUS","SYSTEM$GENERATE_SAML_CSR","SYSTEM$GENERATE_SCIM_ACCESS_TOKEN","SYSTEM$GET_AWS_SNS_IAM_POLICY","SYSTEM$GET_PREDECESSOR_RETURN_VALUE","SYSTEM$GET_PRIVATELINK","SYSTEM$GET_PRIVATELINK_AUTHORIZED_ENDPOINTS","SYSTEM$GET_PRIVATELINK_CONFIG","SYSTEM$GET_SNOWFLAKE_PLATFORM_INFO","SYSTEM$GET_TAG","SYSTEM$GET_TAG_ALLOWED_VALUES","SYSTEM$GET_TAG_ON_CURRENT_COLUMN","SYSTEM$GET_TAG_ON_CURRENT_TABLE","SYSTEM$GLOBAL_ACCOUNT_SET_PARAMETER","SYSTEM$LAST_CHANGE_COMMIT_TIME","SYSTEM$LINK_ACCOUNT_OBJECTS_BY_NAME","SYSTEM$MIGRATE_SAML_IDP_REGISTRATION","SYSTEM$PIPE_FORCE_RESUME","SYSTEM$PIPE_STATUS","SYSTEM$REVOKE_PRIVATELINK","SYSTEM$REVOKE_STAGE_PRIVATELINK_ACCESS","SYSTEM$SET_RETURN_VALUE","SYSTEM$SHOW_OAUTH_CLIENT_SECRETS","SYSTEM$STREAM_GET_TABLE_TIMESTAMP","SYSTEM$STREAM_HAS_DATA","SYSTEM$TASK_DEPENDENTS_ENABLE","SYSTEM$TYPEOF","SYSTEM$USER_TASK_CANCEL_ONGOING_EXECUTIONS","SYSTEM$VERIFY_EXTERNAL_OAUTH_TOKEN","SYSTEM$WAIT","SYSTEM$WHITELIST","SYSTEM$WHITELIST_PRIVATELINK","TAG_REFERENCES","TAG_REFERENCES_ALL_COLUMNS","TAG_REFERENCES_WITH_LINEAGE","TAN","TANH","TASK_DEPENDENTS","TASK_HISTORY","TIME_FROM_PARTS","TIME_SLICE","TIMEADD","TIMEDIFF","TIMESTAMP_FROM_PARTS","TIMESTAMPADD","TIMESTAMPDIFF","TO_ARRAY","TO_BINARY","TO_BOOLEAN","TO_CHAR","TO_VARCHAR","TO_DATE","DATE","TO_DECIMAL","TO_NUMBER","TO_NUMERIC","TO_DOUBLE","TO_GEOGRAPHY","TO_GEOMETRY","TO_JSON","TO_OBJECT","TO_TIME","TIME","TO_TIMESTAMP","TO_TIMESTAMP_LTZ","TO_TIMESTAMP_NTZ","TO_TIMESTAMP_TZ","TO_VARIANT","TO_XML","TRANSLATE","TRIM","TRUNCATE","TRUNC","TRUNC","TRY_BASE64_DECODE_BINARY","TRY_BASE64_DECODE_STRING","TRY_CAST","TRY_HEX_DECODE_BINARY","TRY_HEX_DECODE_STRING","TRY_PARSE_JSON","TRY_TO_BINARY","TRY_TO_BOOLEAN","TRY_TO_DATE","TRY_TO_DECIMAL","TRY_TO_NUMBER","TRY_TO_NUMERIC","TRY_TO_DOUBLE","TRY_TO_GEOGRAPHY","TRY_TO_GEOMETRY","TRY_TO_TIME","TRY_TO_TIMESTAMP","TRY_TO_TIMESTAMP_LTZ","TRY_TO_TIMESTAMP_NTZ","TRY_TO_TIMESTAMP_TZ","TYPEOF","UNICODE","UNIFORM","UPPER","UUID_STRING","VALIDATE","VALIDATE_PIPE_LOAD","VAR_POP","VAR_SAMP","VARIANCE","VARIANCE_SAMP","VARIANCE_POP","WAREHOUSE_LOAD_HISTORY","WAREHOUSE_METERING_HISTORY","WIDTH_BUCKET","XMLGET","YEAR","YEAROFWEEK","YEAROFWEEKISO","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFWEEKISO","DAYOFYEAR","WEEK","WEEK","WEEKOFYEAR","WEEKISO","MONTH","QUARTER","ZEROIFNULL","ZIPF"],K_=["ACCOUNT","ALL","ALTER","AND","ANY","AS","BETWEEN","BY","CASE","CAST","CHECK","COLUMN","CONNECT","CONNECTION","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATABASE","DELETE","DISTINCT","DROP","ELSE","EXISTS","FALSE","FOLLOWING","FOR","FROM","FULL","GRANT","GROUP","GSCLUSTER","HAVING","ILIKE","IN","INCREMENT","INNER","INSERT","INTERSECT","INTO","IS","ISSUE","JOIN","LATERAL","LEFT","LIKE","LOCALTIME","LOCALTIMESTAMP","MINUS","NATURAL","NOT","NULL","OF","ON","OR","ORDER","ORGANIZATION","QUALIFY","REGEXP","REVOKE","RIGHT","RLIKE","ROW","ROWS","SAMPLE","SCHEMA","SELECT","SET","SOME","START","TABLE","TABLESAMPLE","THEN","TO","TRIGGER","TRUE","TRY_CAST","UNION","UNIQUE","UPDATE","USING","VALUES","VIEW","WHEN","WHENEVER","WHERE","WITH","COMMENT"],J_=["NUMBER","DECIMAL","NUMERIC","INT","INTEGER","BIGINT","SMALLINT","TINYINT","BYTEINT","FLOAT","FLOAT4","FLOAT8","DOUBLE","DOUBLE PRECISION","REAL","VARCHAR","CHAR","CHARACTER","STRING","TEXT","BINARY","VARBINARY","BOOLEAN","DATE","DATETIME","TIME","TIMESTAMP","TIMESTAMP_LTZ","TIMESTAMP_NTZ","TIMESTAMP","TIMESTAMP_TZ","VARIANT","OBJECT","ARRAY","GEOGRAPHY","GEOMETRY"],k_=M(["SELECT [ALL | DISTINCT]"]),j_=M(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","QUALIFY","LIMIT","OFFSET","FETCH [FIRST | NEXT]","INSERT [OVERWRITE] [ALL INTO | INTO | ALL | FIRST]","{THEN | ELSE} INTO","VALUES","SET","CLUSTER BY","[WITH] {MASKING POLICY | TAG | ROW ACCESS POLICY}","COPY GRANTS","USING TEMPLATE","MERGE INTO","WHEN MATCHED [AND]","THEN {UPDATE SET | DELETE}","WHEN NOT MATCHED THEN INSERT"]),DR=M(["CREATE [OR REPLACE] [VOLATILE] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [LOCAL | GLOBAL] {TEMP|TEMPORARY} TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [SECURE] [RECURSIVE] VIEW [IF NOT EXISTS]","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","RENAME TO","SWAP WITH","[SUSPEND | RESUME] RECLUSTER","DROP CLUSTERING KEY","ADD [COLUMN]","RENAME COLUMN","{ALTER | MODIFY} [COLUMN]","DROP [COLUMN]","{ADD | ALTER | MODIFY | DROP} [CONSTRAINT]","RENAME CONSTRAINT","{ADD | DROP} SEARCH OPTIMIZATION","{SET | UNSET} TAG","{ADD | DROP} ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","[SET DATA] TYPE","UNSET COMMENT","{SET | UNSET} MASKING POLICY","TRUNCATE [TABLE] [IF EXISTS]","ALTER ACCOUNT","ALTER API INTEGRATION","ALTER CONNECTION","ALTER DATABASE","ALTER EXTERNAL TABLE","ALTER FAILOVER GROUP","ALTER FILE FORMAT","ALTER FUNCTION","ALTER INTEGRATION","ALTER MASKING POLICY","ALTER MATERIALIZED VIEW","ALTER NETWORK POLICY","ALTER NOTIFICATION INTEGRATION","ALTER PIPE","ALTER PROCEDURE","ALTER REPLICATION GROUP","ALTER RESOURCE MONITOR","ALTER ROLE","ALTER ROW ACCESS POLICY","ALTER SCHEMA","ALTER SECURITY INTEGRATION","ALTER SEQUENCE","ALTER SESSION","ALTER SESSION POLICY","ALTER SHARE","ALTER STAGE","ALTER STORAGE INTEGRATION","ALTER STREAM","ALTER TAG","ALTER TASK","ALTER USER","ALTER VIEW","ALTER WAREHOUSE","BEGIN","CALL","COMMIT","COPY INTO","CREATE ACCOUNT","CREATE API INTEGRATION","CREATE CONNECTION","CREATE DATABASE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL TABLE","CREATE FAILOVER GROUP","CREATE FILE FORMAT","CREATE FUNCTION","CREATE INTEGRATION","CREATE MANAGED ACCOUNT","CREATE MASKING POLICY","CREATE MATERIALIZED VIEW","CREATE NETWORK POLICY","CREATE NOTIFICATION INTEGRATION","CREATE PIPE","CREATE PROCEDURE","CREATE REPLICATION GROUP","CREATE RESOURCE MONITOR","CREATE ROLE","CREATE ROW ACCESS POLICY","CREATE SCHEMA","CREATE SECURITY INTEGRATION","CREATE SEQUENCE","CREATE SESSION POLICY","CREATE SHARE","CREATE STAGE","CREATE STORAGE INTEGRATION","CREATE STREAM","CREATE TAG","CREATE TASK","CREATE USER","CREATE WAREHOUSE","DELETE","DESCRIBE DATABASE","DESCRIBE EXTERNAL TABLE","DESCRIBE FILE FORMAT","DESCRIBE FUNCTION","DESCRIBE INTEGRATION","DESCRIBE MASKING POLICY","DESCRIBE MATERIALIZED VIEW","DESCRIBE NETWORK POLICY","DESCRIBE PIPE","DESCRIBE PROCEDURE","DESCRIBE RESULT","DESCRIBE ROW ACCESS POLICY","DESCRIBE SCHEMA","DESCRIBE SEQUENCE","DESCRIBE SESSION POLICY","DESCRIBE SHARE","DESCRIBE STAGE","DESCRIBE STREAM","DESCRIBE TABLE","DESCRIBE TASK","DESCRIBE TRANSACTION","DESCRIBE USER","DESCRIBE VIEW","DESCRIBE WAREHOUSE","DROP CONNECTION","DROP DATABASE","DROP EXTERNAL TABLE","DROP FAILOVER GROUP","DROP FILE FORMAT","DROP FUNCTION","DROP INTEGRATION","DROP MANAGED ACCOUNT","DROP MASKING POLICY","DROP MATERIALIZED VIEW","DROP NETWORK POLICY","DROP PIPE","DROP PROCEDURE","DROP REPLICATION GROUP","DROP RESOURCE MONITOR","DROP ROLE","DROP ROW ACCESS POLICY","DROP SCHEMA","DROP SEQUENCE","DROP SESSION POLICY","DROP SHARE","DROP STAGE","DROP STREAM","DROP TAG","DROP TASK","DROP USER","DROP VIEW","DROP WAREHOUSE","EXECUTE IMMEDIATE","EXECUTE TASK","EXPLAIN","GET","GRANT OWNERSHIP","GRANT ROLE","INSERT","LIST","MERGE","PUT","REMOVE","REVOKE ROLE","ROLLBACK","SHOW COLUMNS","SHOW CONNECTIONS","SHOW DATABASES","SHOW DATABASES IN FAILOVER GROUP","SHOW DATABASES IN REPLICATION GROUP","SHOW DELEGATED AUTHORIZATIONS","SHOW EXTERNAL FUNCTIONS","SHOW EXTERNAL TABLES","SHOW FAILOVER GROUPS","SHOW FILE FORMATS","SHOW FUNCTIONS","SHOW GLOBAL ACCOUNTS","SHOW GRANTS","SHOW INTEGRATIONS","SHOW LOCKS","SHOW MANAGED ACCOUNTS","SHOW MASKING POLICIES","SHOW MATERIALIZED VIEWS","SHOW NETWORK POLICIES","SHOW OBJECTS","SHOW ORGANIZATION ACCOUNTS","SHOW PARAMETERS","SHOW PIPES","SHOW PRIMARY KEYS","SHOW PROCEDURES","SHOW REGIONS","SHOW REPLICATION ACCOUNTS","SHOW REPLICATION DATABASES","SHOW REPLICATION GROUPS","SHOW RESOURCE MONITORS","SHOW ROLES","SHOW ROW ACCESS POLICIES","SHOW SCHEMAS","SHOW SEQUENCES","SHOW SESSION POLICIES","SHOW SHARES","SHOW SHARES IN FAILOVER GROUP","SHOW SHARES IN REPLICATION GROUP","SHOW STAGES","SHOW STREAMS","SHOW TABLES","SHOW TAGS","SHOW TASKS","SHOW TRANSACTIONS","SHOW USER FUNCTIONS","SHOW USERS","SHOW VARIABLES","SHOW VIEWS","SHOW WAREHOUSES","TRUNCATE MATERIALIZED VIEW","UNDROP DATABASE","UNDROP SCHEMA","UNDROP TABLE","UNDROP TAG","UNSET","USE DATABASE","USE ROLE","USE SCHEMA","USE SECONDARY ROLES","USE WAREHOUSE"]),q_=M(["UNION [ALL]","MINUS","EXCEPT","INTERSECT"]),Q_=M(["[INNER] JOIN","[NATURAL] {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | NATURAL} JOIN"]),Z_=M(["{ROWS | RANGE} BETWEEN","ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]"]),z_={name:"snowflake",tokenizerOptions:{reservedSelect:k_,reservedClauses:[...j_,...DR],reservedSetOperations:q_,reservedJoins:Q_,reservedPhrases:Z_,reservedKeywords:K_,reservedDataTypes:J_,reservedFunctionNames:$_,stringTypes:["$$","''-qq-bs"],identTypes:['""-qq'],variableTypes:[{regex:"[$][1-9]\\d*"},{regex:"[$][_a-zA-Z][_a-zA-Z0-9$]*"}],extraParens:["[]"],identChars:{rest:"$"},lineCommentTypes:["--","//"],operators:["%","::","||",":","=>"]},formatOptions:{alwaysDenseOperators:[":","::"],onelineClauses:DR}},Bt=e=>e[e.length-1],Wn=e=>e.sort((E,t)=>t.length-E.length||E.localeCompare(t)),AT=e=>e.replace(/\s+/gu," "),ZT=e=>/\n/.test(e),eE=e=>e.replace(/[.*+?^${}()|[\]\\]/gu,"\\$&"),fR=/\s+/uy,WE=e=>new RegExp(`(?:${e})`,"uy"),el=e=>e.split("").map(E=>/ /gu.test(E)?"\\s+":`[${E.toUpperCase()}${E.toLowerCase()}]`).join(""),El=e=>e+"(?:-"+e+")*",tl=({prefixes:e,requirePrefix:E})=>`(?:${e.map(el).join("|")}${E?"":"|"})`,Tl=e=>new RegExp(`(?:${e.map(eE).join("|")}).*?(?=\r
|\r|
|$)`,"uy"),MR=(e,E=[])=>{const t=e==="open"?0:1,T=["()",...E].map(r=>r[t]);return WE(T.map(eE).join("|"))},rl=e=>WE(`${Wn(e).map(eE).join("|")}`),sl=({rest:e,dashes:E})=>e||E?`(?![${e||""}${E?"-":""}])`:"",_E=(e,E={})=>{if(e.length===0)return/^\b$/u;const t=sl(E),T=Wn(e).map(eE).join("|").replace(/ /gu,"\\s+");return new RegExp(`(?:${T})${t}\\b`,"iuy")},zT=(e,E)=>{if(!e.length)return;const t=e.map(eE).join("|");return WE(`(?:${t})(?:${E})`)},Rl=()=>{const e={"<":">","[":"]","(":")","{":"}"},E="{left}(?:(?!{right}').)*?{right}",t=Object.entries(e).map(([R,A])=>E.replace(/{left}/g,eE(R)).replace(/{right}/g,eE(A))),T=eE(Object.keys(e).join(""));return`[Qq]'(?:${String.raw`(?<tag>[^\s${T}])(?:(?!\k<tag>').)*?\k<tag>`}|${t.join("|")})'`},pR={"``":"(?:`[^`]*`)+","[]":String.raw`(?:\[[^\]]*\])(?:\][^\]]*\])*`,'""-qq':String.raw`(?:"[^"]*")+`,'""-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")`,'""-qq-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")+`,'""-raw':String.raw`(?:"[^"]*")`,"''-qq":String.raw`(?:'[^']*')+`,"''-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')`,"''-qq-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')+`,"''-raw":String.raw`(?:'[^']*')`,$$:String.raw`(?<tag>\$\w*\$)[\s\S]*?\k<tag>`,"'''..'''":String.raw`'''[^\\]*?(?:\\.[^\\]*?)*?'''`,'""".."""':String.raw`"""[^\\]*?(?:\\.[^\\]*?)*?"""`,"{}":String.raw`(?:\{[^\}]*\})`,"q''":Rl()},Xn=e=>typeof e=="string"?pR[e]:"regex"in e?e.regex:tl(e)+pR[e.quote],Al=e=>WE(e.map(E=>"regex"in E?E.regex:Xn(E)).join("|")),$n=e=>e.map(Xn).join("|"),UR=e=>WE($n(e)),nl=(e={})=>WE(Kn(e)),Kn=({first:e,rest:E,dashes:t,allowFirstCharNumber:T}={})=>{const r="\\p{Alphabetic}\\p{Mark}_",s="\\p{Decimal_Number}",R=eE(e??""),A=eE(E??""),S=T?`[${r}${s}${R}][${r}${s}${A}]*`:`[${r}${R}][${r}${s}${A}]*`;return t?El(S):S};function Jn(e,E){const t=e.slice(0,E).split(/\n/);return{line:t.length,col:t[t.length-1].length+1}}var Sl=class{constructor(e,E){this.rules=e,this.dialectName=E,this.input="",this.index=0}tokenize(e){this.input=e,this.index=0;const E=[];let t;for(;this.index<this.input.length;){const T=this.getWhitespace();if(this.index<this.input.length){if(t=this.getNextToken(),!t)throw this.createParseError();E.push(Ve(Be({},t),{precedingWhitespace:T}))}}return E}createParseError(){const e=this.input.slice(this.index,this.index+10),{line:E,col:t}=Jn(this.input,this.index);return new Error(`Parse error: Unexpected "${e}" at line ${E} column ${t}.
${this.dialectInfo()}`)}dialectInfo(){return this.dialectName==="sql"?`This likely happens because you're using the default "sql" dialect.
If possible, please select a more specific dialect (like sqlite, postgresql, etc).`:`SQL dialect used: "${this.dialectName}".`}getWhitespace(){fR.lastIndex=this.index;const e=fR.exec(this.input);if(e)return this.index+=e[0].length,e[0]}getNextToken(){for(const e of this.rules){const E=this.match(e);if(E)return E}}match(e){e.regex.lastIndex=this.index;const E=e.regex.exec(this.input);if(E){const t=E[0],T={type:e.type,raw:t,text:e.text?e.text(t):t,start:this.index};return e.key&&(T.key=e.key(t)),this.index+=t.length,T}}},dR=/\/\*/uy,il=/([^/*]|\*[^/]|\/[^*])+/uy,ol=/\*\//uy,Ol=class{constructor(){this.lastIndex=0}exec(e){let E="",t,T=0;if(t=this.matchSection(dR,e))E+=t,T++;else return null;for(;T>0;)if(t=this.matchSection(dR,e))E+=t,T++;else if(t=this.matchSection(ol,e))E+=t,T--;else if(t=this.matchSection(il,e))E+=t;else return null;return[E]}matchSection(e,E){e.lastIndex=this.lastIndex;const t=e.exec(E);return t&&(this.lastIndex+=t[0].length),t?t[0]:null}},Il=class{constructor(e,E){this.cfg=e,this.dialectName=E,this.rulesBeforeParams=this.buildRulesBeforeParams(e),this.rulesAfterParams=this.buildRulesAfterParams(e)}tokenize(e,E){const t=[...this.rulesBeforeParams,...this.buildParamRules(this.cfg,E),...this.rulesAfterParams],T=new Sl(t,this.dialectName).tokenize(e);return this.cfg.postProcess?this.cfg.postProcess(T):T}buildRulesBeforeParams(e){var E,t;return this.validRules([{type:"BLOCK_COMMENT",regex:e.nestedBlockComments?new Ol:/(\/\*[^]*?\*\/)/uy},{type:"LINE_COMMENT",regex:Tl((E=e.lineCommentTypes)!=null?E:["--"])},{type:"QUOTED_IDENTIFIER",regex:UR(e.identTypes)},{type:"NUMBER",regex:/(?:0x[0-9a-fA-F]+|0b[01]+|(?:-\s*)?[0-9]+(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+(?:\.[0-9]+)?)?)(?![\w\p{Alphabetic}])/uy},{type:"RESERVED_PHRASE",regex:_E((t=e.reservedPhrases)!=null?t:[],e.identChars),text:de},{type:"CASE",regex:/CASE\b/iuy,text:de},{type:"END",regex:/END\b/iuy,text:de},{type:"BETWEEN",regex:/BETWEEN\b/iuy,text:de},{type:"LIMIT",regex:e.reservedClauses.includes("LIMIT")?/LIMIT\b/iuy:void 0,text:de},{type:"RESERVED_CLAUSE",regex:_E(e.reservedClauses,e.identChars),text:de},{type:"RESERVED_SELECT",regex:_E(e.reservedSelect,e.identChars),text:de},{type:"RESERVED_SET_OPERATION",regex:_E(e.reservedSetOperations,e.identChars),text:de},{type:"WHEN",regex:/WHEN\b/iuy,text:de},{type:"ELSE",regex:/ELSE\b/iuy,text:de},{type:"THEN",regex:/THEN\b/iuy,text:de},{type:"RESERVED_JOIN",regex:_E(e.reservedJoins,e.identChars),text:de},{type:"AND",regex:/AND\b/iuy,text:de},{type:"OR",regex:/OR\b/iuy,text:de},{type:"XOR",regex:e.supportsXor?/XOR\b/iuy:void 0,text:de},{type:"RESERVED_FUNCTION_NAME",regex:_E(e.reservedFunctionNames,e.identChars),text:de},{type:"RESERVED_DATA_TYPE",regex:_E(e.reservedDataTypes,e.identChars),text:de},{type:"RESERVED_KEYWORD",regex:_E(e.reservedKeywords,e.identChars),text:de}])}buildRulesAfterParams(e){var E;return this.validRules([{type:"VARIABLE",regex:e.variableTypes?Al(e.variableTypes):void 0},{type:"STRING",regex:UR(e.stringTypes)},{type:"IDENTIFIER",regex:nl(e.identChars)},{type:"DELIMITER",regex:/[;]/uy},{type:"COMMA",regex:/[,]/y},{type:"OPEN_PAREN",regex:MR("open",e.extraParens)},{type:"CLOSE_PAREN",regex:MR("close",e.extraParens)},{type:"OPERATOR",regex:rl(["+","-","/",">","<","=","<>","<=",">=","!=",...(E=e.operators)!=null?E:[]])},{type:"ASTERISK",regex:/[*]/uy},{type:"DOT",regex:/[.]/uy}])}buildParamRules(e,E){var t,T,r,s,R;const A={named:(E==null?void 0:E.named)||((t=e.paramTypes)==null?void 0:t.named)||[],quoted:(E==null?void 0:E.quoted)||((T=e.paramTypes)==null?void 0:T.quoted)||[],numbered:(E==null?void 0:E.numbered)||((r=e.paramTypes)==null?void 0:r.numbered)||[],positional:typeof(E==null?void 0:E.positional)=="boolean"?E.positional:(s=e.paramTypes)==null?void 0:s.positional,custom:(E==null?void 0:E.custom)||((R=e.paramTypes)==null?void 0:R.custom)||[]};return this.validRules([{type:"NAMED_PARAMETER",regex:zT(A.named,Kn(e.paramChars||e.identChars)),key:S=>S.slice(1)},{type:"QUOTED_PARAMETER",regex:zT(A.quoted,$n(e.identTypes)),key:S=>(({tokenKey:n,quoteChar:i})=>n.replace(new RegExp(eE("\\"+i),"gu"),i))({tokenKey:S.slice(2,-1),quoteChar:S.slice(-1)})},{type:"NUMBERED_PARAMETER",regex:zT(A.numbered,"[0-9]+"),key:S=>S.slice(1)},{type:"POSITIONAL_PARAMETER",regex:A.positional?/[?]/y:void 0},...A.custom.map(S=>{var n;return{type:"CUSTOM_PARAMETER",regex:WE(S.regex),key:(n=S.key)!=null?n:i=>i}})])}validRules(e){return e.filter(E=>!!E.regex)}},de=e=>AT(e.toUpperCase()),hR=new Map,Nl=e=>{let E=hR.get(e);return E||(E=al(e),hR.set(e,E)),E},al=e=>({tokenizer:new Il(e.tokenizerOptions,e.name),formatOptions:_l(e.formatOptions)}),_l=e=>({alwaysDenseOperators:e.alwaysDenseOperators||[],onelineClauses:Object.fromEntries(e.onelineClauses.map(E=>[E,!0]))});function ll(e){return e.indentStyle==="tabularLeft"||e.indentStyle==="tabularRight"?" ".repeat(10):e.useTabs?"	":" ".repeat(e.tabWidth)}function Pt(e){return e.indentStyle==="tabularLeft"||e.indentStyle==="tabularRight"}var Cl=class{constructor(e){this.params=e,this.index=0}get({key:e,text:E}){return this.params?e?this.params[e]:this.params[this.index++]:E}getPositionalParameterIndex(){return this.index}setPositionalParameterIndex(e){this.index=e}};function Ll(e){return e.map(cl).map(ul).map(Pl).map(Dl).map(fl)}var cl=(e,E,t)=>{if(wn(e.type)){const T=Ml(t,E);if(T&&T.text===".")return Ve(Be({},e),{type:"IDENTIFIER",text:e.raw})}return e},ul=(e,E,t)=>{if(e.type==="RESERVED_FUNCTION_NAME"){const T=Kt(t,E);if(!T||!kn(T))return Ve(Be({},e),{type:"RESERVED_KEYWORD"})}return e},Pl=(e,E,t)=>{if(e.type==="RESERVED_DATA_TYPE"){const T=Kt(t,E);if(T&&kn(T))return Ve(Be({},e),{type:"RESERVED_PARAMETERIZED_DATA_TYPE"})}return e},Dl=(e,E,t)=>{if(e.type==="IDENTIFIER"){const T=Kt(t,E);if(T&&jn(T))return Ve(Be({},e),{type:"ARRAY_IDENTIFIER"})}return e},fl=(e,E,t)=>{if(e.type==="RESERVED_DATA_TYPE"){const T=Kt(t,E);if(T&&jn(T))return Ve(Be({},e),{type:"ARRAY_KEYWORD"})}return e},Ml=(e,E)=>Kt(e,E,-1),Kt=(e,E,t=1)=>{let T=1;for(;e[E+T*t]&&pl(e[E+T*t]);)T++;return e[E+T*t]},kn=e=>e.type==="OPEN_PAREN"&&e.text==="(",jn=e=>e.type==="OPEN_PAREN"&&e.text==="[",pl=e=>e.type==="BLOCK_COMMENT"||e.type==="LINE_COMMENT",qn=class{constructor(e){this.tokenize=e,this.index=0,this.tokens=[],this.input=""}reset(e,E){this.input=e,this.index=0,this.tokens=this.tokenize(e)}next(){return this.tokens[this.index++]}save(){}formatError(e){const{line:E,col:t}=Jn(this.input,e.start);return`Parse error at token: ${e.text} at line ${E} column ${t}`}has(e){return e in Vn}};function er(e){return e[0]}var j=new qn(e=>[]),HE=([[e]])=>e,he=e=>({type:"keyword",tokenType:e.type,text:e.text,raw:e.raw}),GR=e=>({type:"data_type",text:e.text,raw:e.raw}),Ge=(e,{leading:E,trailing:t})=>(E!=null&&E.length&&(e=Ve(Be({},e),{leadingComments:E})),t!=null&&t.length&&(e=Ve(Be({},e),{trailingComments:t})),e),Ul=(e,{leading:E,trailing:t})=>{if(E!=null&&E.length){const[T,...r]=e;e=[Ge(T,{leading:E}),...r]}if(t!=null&&t.length){const T=e.slice(0,-1),r=e[e.length-1];e=[...T,Ge(r,{trailing:t})]}return e},dl={Lexer:j,ParserRules:[{name:"main$ebnf$1",symbols:[]},{name:"main$ebnf$1",symbols:["main$ebnf$1","statement"],postprocess:e=>e[0].concat([e[1]])},{name:"main",symbols:["main$ebnf$1"],postprocess:([e])=>{const E=e[e.length-1];return E&&!E.hasSemicolon?E.children.length>0?e:e.slice(0,-1):e}},{name:"statement$subexpression$1",symbols:[j.has("DELIMITER")?{type:"DELIMITER"}:DELIMITER]},{name:"statement$subexpression$1",symbols:[j.has("EOF")?{type:"EOF"}:EOF]},{name:"statement",symbols:["expressions_or_clauses","statement$subexpression$1"],postprocess:([e,[E]])=>({type:"statement",children:e,hasSemicolon:E.type==="DELIMITER"})},{name:"expressions_or_clauses$ebnf$1",symbols:[]},{name:"expressions_or_clauses$ebnf$1",symbols:["expressions_or_clauses$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"expressions_or_clauses$ebnf$2",symbols:[]},{name:"expressions_or_clauses$ebnf$2",symbols:["expressions_or_clauses$ebnf$2","clause"],postprocess:e=>e[0].concat([e[1]])},{name:"expressions_or_clauses",symbols:["expressions_or_clauses$ebnf$1","expressions_or_clauses$ebnf$2"],postprocess:([e,E])=>[...e,...E]},{name:"clause$subexpression$1",symbols:["limit_clause"]},{name:"clause$subexpression$1",symbols:["select_clause"]},{name:"clause$subexpression$1",symbols:["other_clause"]},{name:"clause$subexpression$1",symbols:["set_operation"]},{name:"clause",symbols:["clause$subexpression$1"],postprocess:HE},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["free_form_sql"]},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"limit_clause$ebnf$1$subexpression$1",symbols:[j.has("COMMA")?{type:"COMMA"}:COMMA,"limit_clause$ebnf$1$subexpression$1$ebnf$1"]},{name:"limit_clause$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1"],postprocess:er},{name:"limit_clause$ebnf$1",symbols:[],postprocess:()=>null},{name:"limit_clause",symbols:[j.has("LIMIT")?{type:"LIMIT"}:LIMIT,"_","expression_chain_","limit_clause$ebnf$1"],postprocess:([e,E,t,T])=>{if(T){const[r,s]=T;return{type:"limit_clause",limitKw:Ge(he(e),{trailing:E}),offset:t,count:s}}else return{type:"limit_clause",limitKw:Ge(he(e),{trailing:E}),count:t}}},{name:"select_clause$subexpression$1$ebnf$1",symbols:[]},{name:"select_clause$subexpression$1$ebnf$1",symbols:["select_clause$subexpression$1$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"select_clause$subexpression$1",symbols:["all_columns_asterisk","select_clause$subexpression$1$ebnf$1"]},{name:"select_clause$subexpression$1$ebnf$2",symbols:[]},{name:"select_clause$subexpression$1$ebnf$2",symbols:["select_clause$subexpression$1$ebnf$2","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"select_clause$subexpression$1",symbols:["asteriskless_free_form_sql","select_clause$subexpression$1$ebnf$2"]},{name:"select_clause",symbols:[j.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT,"select_clause$subexpression$1"],postprocess:([e,[E,t]])=>({type:"clause",nameKw:he(e),children:[E,...t]})},{name:"select_clause",symbols:[j.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT],postprocess:([e])=>({type:"clause",nameKw:he(e),children:[]})},{name:"all_columns_asterisk",symbols:[j.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK],postprocess:()=>({type:"all_columns_asterisk"})},{name:"other_clause$ebnf$1",symbols:[]},{name:"other_clause$ebnf$1",symbols:["other_clause$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"other_clause",symbols:[j.has("RESERVED_CLAUSE")?{type:"RESERVED_CLAUSE"}:RESERVED_CLAUSE,"other_clause$ebnf$1"],postprocess:([e,E])=>({type:"clause",nameKw:he(e),children:E})},{name:"set_operation$ebnf$1",symbols:[]},{name:"set_operation$ebnf$1",symbols:["set_operation$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"set_operation",symbols:[j.has("RESERVED_SET_OPERATION")?{type:"RESERVED_SET_OPERATION"}:RESERVED_SET_OPERATION,"set_operation$ebnf$1"],postprocess:([e,E])=>({type:"set_operation",nameKw:he(e),children:E})},{name:"expression_chain_$ebnf$1",symbols:["expression_with_comments_"]},{name:"expression_chain_$ebnf$1",symbols:["expression_chain_$ebnf$1","expression_with_comments_"],postprocess:e=>e[0].concat([e[1]])},{name:"expression_chain_",symbols:["expression_chain_$ebnf$1"],postprocess:er},{name:"expression_chain$ebnf$1",symbols:[]},{name:"expression_chain$ebnf$1",symbols:["expression_chain$ebnf$1","_expression_with_comments"],postprocess:e=>e[0].concat([e[1]])},{name:"expression_chain",symbols:["expression","expression_chain$ebnf$1"],postprocess:([e,E])=>[e,...E]},{name:"andless_expression_chain$ebnf$1",symbols:[]},{name:"andless_expression_chain$ebnf$1",symbols:["andless_expression_chain$ebnf$1","_andless_expression_with_comments"],postprocess:e=>e[0].concat([e[1]])},{name:"andless_expression_chain",symbols:["andless_expression","andless_expression_chain$ebnf$1"],postprocess:([e,E])=>[e,...E]},{name:"expression_with_comments_",symbols:["expression","_"],postprocess:([e,E])=>Ge(e,{trailing:E})},{name:"_expression_with_comments",symbols:["_","expression"],postprocess:([e,E])=>Ge(E,{leading:e})},{name:"_andless_expression_with_comments",symbols:["_","andless_expression"],postprocess:([e,E])=>Ge(E,{leading:e})},{name:"free_form_sql$subexpression$1",symbols:["asteriskless_free_form_sql"]},{name:"free_form_sql$subexpression$1",symbols:["asterisk"]},{name:"free_form_sql",symbols:["free_form_sql$subexpression$1"],postprocess:HE},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["logic_operator"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comma"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comment"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["other_keyword"]},{name:"asteriskless_free_form_sql",symbols:["asteriskless_free_form_sql$subexpression$1"],postprocess:HE},{name:"expression$subexpression$1",symbols:["andless_expression"]},{name:"expression$subexpression$1",symbols:["logic_operator"]},{name:"expression",symbols:["expression$subexpression$1"],postprocess:HE},{name:"andless_expression$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"andless_expression$subexpression$1",symbols:["asterisk"]},{name:"andless_expression",symbols:["andless_expression$subexpression$1"],postprocess:HE},{name:"asteriskless_andless_expression$subexpression$1",symbols:["atomic_expression"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["between_predicate"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["case_expression"]},{name:"asteriskless_andless_expression",symbols:["asteriskless_andless_expression$subexpression$1"],postprocess:HE},{name:"atomic_expression$subexpression$1",symbols:["array_subscript"]},{name:"atomic_expression$subexpression$1",symbols:["function_call"]},{name:"atomic_expression$subexpression$1",symbols:["property_access"]},{name:"atomic_expression$subexpression$1",symbols:["parenthesis"]},{name:"atomic_expression$subexpression$1",symbols:["curly_braces"]},{name:"atomic_expression$subexpression$1",symbols:["square_brackets"]},{name:"atomic_expression$subexpression$1",symbols:["operator"]},{name:"atomic_expression$subexpression$1",symbols:["identifier"]},{name:"atomic_expression$subexpression$1",symbols:["parameter"]},{name:"atomic_expression$subexpression$1",symbols:["literal"]},{name:"atomic_expression$subexpression$1",symbols:["data_type"]},{name:"atomic_expression$subexpression$1",symbols:["keyword"]},{name:"atomic_expression",symbols:["atomic_expression$subexpression$1"],postprocess:HE},{name:"array_subscript",symbols:[j.has("ARRAY_IDENTIFIER")?{type:"ARRAY_IDENTIFIER"}:ARRAY_IDENTIFIER,"_","square_brackets"],postprocess:([e,E,t])=>({type:"array_subscript",array:Ge({type:"identifier",quoted:!1,text:e.text},{trailing:E}),parenthesis:t})},{name:"array_subscript",symbols:[j.has("ARRAY_KEYWORD")?{type:"ARRAY_KEYWORD"}:ARRAY_KEYWORD,"_","square_brackets"],postprocess:([e,E,t])=>({type:"array_subscript",array:Ge(he(e),{trailing:E}),parenthesis:t})},{name:"function_call",symbols:[j.has("RESERVED_FUNCTION_NAME")?{type:"RESERVED_FUNCTION_NAME"}:RESERVED_FUNCTION_NAME,"_","parenthesis"],postprocess:([e,E,t])=>({type:"function_call",nameKw:Ge(he(e),{trailing:E}),parenthesis:t})},{name:"parenthesis",symbols:[{literal:"("},"expressions_or_clauses",{literal:")"}],postprocess:([e,E,t])=>({type:"parenthesis",children:E,openParen:"(",closeParen:")"})},{name:"curly_braces$ebnf$1",symbols:[]},{name:"curly_braces$ebnf$1",symbols:["curly_braces$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"curly_braces",symbols:[{literal:"{"},"curly_braces$ebnf$1",{literal:"}"}],postprocess:([e,E,t])=>({type:"parenthesis",children:E,openParen:"{",closeParen:"}"})},{name:"square_brackets$ebnf$1",symbols:[]},{name:"square_brackets$ebnf$1",symbols:["square_brackets$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"square_brackets",symbols:[{literal:"["},"square_brackets$ebnf$1",{literal:"]"}],postprocess:([e,E,t])=>({type:"parenthesis",children:E,openParen:"[",closeParen:"]"})},{name:"property_access$subexpression$1",symbols:["identifier"]},{name:"property_access$subexpression$1",symbols:["array_subscript"]},{name:"property_access$subexpression$1",symbols:["all_columns_asterisk"]},{name:"property_access$subexpression$1",symbols:["parameter"]},{name:"property_access",symbols:["atomic_expression","_",j.has("DOT")?{type:"DOT"}:DOT,"_","property_access$subexpression$1"],postprocess:([e,E,t,T,[r]])=>({type:"property_access",object:Ge(e,{trailing:E}),property:Ge(r,{leading:T})})},{name:"between_predicate",symbols:[j.has("BETWEEN")?{type:"BETWEEN"}:BETWEEN,"_","andless_expression_chain","_",j.has("AND")?{type:"AND"}:AND,"_","andless_expression"],postprocess:([e,E,t,T,r,s,R])=>({type:"between_predicate",betweenKw:he(e),expr1:Ul(t,{leading:E,trailing:T}),andKw:he(r),expr2:[Ge(R,{leading:s})]})},{name:"case_expression$ebnf$1",symbols:["expression_chain_"],postprocess:er},{name:"case_expression$ebnf$1",symbols:[],postprocess:()=>null},{name:"case_expression$ebnf$2",symbols:[]},{name:"case_expression$ebnf$2",symbols:["case_expression$ebnf$2","case_clause"],postprocess:e=>e[0].concat([e[1]])},{name:"case_expression",symbols:[j.has("CASE")?{type:"CASE"}:CASE,"_","case_expression$ebnf$1","case_expression$ebnf$2",j.has("END")?{type:"END"}:END],postprocess:([e,E,t,T,r])=>({type:"case_expression",caseKw:Ge(he(e),{trailing:E}),endKw:he(r),expr:t||[],clauses:T})},{name:"case_clause",symbols:[j.has("WHEN")?{type:"WHEN"}:WHEN,"_","expression_chain_",j.has("THEN")?{type:"THEN"}:THEN,"_","expression_chain_"],postprocess:([e,E,t,T,r,s])=>({type:"case_when",whenKw:Ge(he(e),{trailing:E}),thenKw:Ge(he(T),{trailing:r}),condition:t,result:s})},{name:"case_clause",symbols:[j.has("ELSE")?{type:"ELSE"}:ELSE,"_","expression_chain_"],postprocess:([e,E,t])=>({type:"case_else",elseKw:Ge(he(e),{trailing:E}),result:t})},{name:"comma$subexpression$1",symbols:[j.has("COMMA")?{type:"COMMA"}:COMMA]},{name:"comma",symbols:["comma$subexpression$1"],postprocess:([[e]])=>({type:"comma"})},{name:"asterisk$subexpression$1",symbols:[j.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK]},{name:"asterisk",symbols:["asterisk$subexpression$1"],postprocess:([[e]])=>({type:"operator",text:e.text})},{name:"operator$subexpression$1",symbols:[j.has("OPERATOR")?{type:"OPERATOR"}:OPERATOR]},{name:"operator",symbols:["operator$subexpression$1"],postprocess:([[e]])=>({type:"operator",text:e.text})},{name:"identifier$subexpression$1",symbols:[j.has("IDENTIFIER")?{type:"IDENTIFIER"}:IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[j.has("QUOTED_IDENTIFIER")?{type:"QUOTED_IDENTIFIER"}:QUOTED_IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[j.has("VARIABLE")?{type:"VARIABLE"}:VARIABLE]},{name:"identifier",symbols:["identifier$subexpression$1"],postprocess:([[e]])=>({type:"identifier",quoted:e.type!=="IDENTIFIER",text:e.text})},{name:"parameter$subexpression$1",symbols:[j.has("NAMED_PARAMETER")?{type:"NAMED_PARAMETER"}:NAMED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[j.has("QUOTED_PARAMETER")?{type:"QUOTED_PARAMETER"}:QUOTED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[j.has("NUMBERED_PARAMETER")?{type:"NUMBERED_PARAMETER"}:NUMBERED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[j.has("POSITIONAL_PARAMETER")?{type:"POSITIONAL_PARAMETER"}:POSITIONAL_PARAMETER]},{name:"parameter$subexpression$1",symbols:[j.has("CUSTOM_PARAMETER")?{type:"CUSTOM_PARAMETER"}:CUSTOM_PARAMETER]},{name:"parameter",symbols:["parameter$subexpression$1"],postprocess:([[e]])=>({type:"parameter",key:e.key,text:e.text})},{name:"literal$subexpression$1",symbols:[j.has("NUMBER")?{type:"NUMBER"}:NUMBER]},{name:"literal$subexpression$1",symbols:[j.has("STRING")?{type:"STRING"}:STRING]},{name:"literal",symbols:["literal$subexpression$1"],postprocess:([[e]])=>({type:"literal",text:e.text})},{name:"keyword$subexpression$1",symbols:[j.has("RESERVED_KEYWORD")?{type:"RESERVED_KEYWORD"}:RESERVED_KEYWORD]},{name:"keyword$subexpression$1",symbols:[j.has("RESERVED_PHRASE")?{type:"RESERVED_PHRASE"}:RESERVED_PHRASE]},{name:"keyword$subexpression$1",symbols:[j.has("RESERVED_JOIN")?{type:"RESERVED_JOIN"}:RESERVED_JOIN]},{name:"keyword",symbols:["keyword$subexpression$1"],postprocess:([[e]])=>he(e)},{name:"data_type$subexpression$1",symbols:[j.has("RESERVED_DATA_TYPE")?{type:"RESERVED_DATA_TYPE"}:RESERVED_DATA_TYPE]},{name:"data_type",symbols:["data_type$subexpression$1"],postprocess:([[e]])=>GR(e)},{name:"data_type",symbols:[j.has("RESERVED_PARAMETERIZED_DATA_TYPE")?{type:"RESERVED_PARAMETERIZED_DATA_TYPE"}:RESERVED_PARAMETERIZED_DATA_TYPE,"_","parenthesis"],postprocess:([e,E,t])=>({type:"parameterized_data_type",dataType:Ge(GR(e),{trailing:E}),parenthesis:t})},{name:"logic_operator$subexpression$1",symbols:[j.has("AND")?{type:"AND"}:AND]},{name:"logic_operator$subexpression$1",symbols:[j.has("OR")?{type:"OR"}:OR]},{name:"logic_operator$subexpression$1",symbols:[j.has("XOR")?{type:"XOR"}:XOR]},{name:"logic_operator",symbols:["logic_operator$subexpression$1"],postprocess:([[e]])=>he(e)},{name:"other_keyword$subexpression$1",symbols:[j.has("WHEN")?{type:"WHEN"}:WHEN]},{name:"other_keyword$subexpression$1",symbols:[j.has("THEN")?{type:"THEN"}:THEN]},{name:"other_keyword$subexpression$1",symbols:[j.has("ELSE")?{type:"ELSE"}:ELSE]},{name:"other_keyword$subexpression$1",symbols:[j.has("END")?{type:"END"}:END]},{name:"other_keyword",symbols:["other_keyword$subexpression$1"],postprocess:([[e]])=>he(e)},{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","comment"],postprocess:e=>e[0].concat([e[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:([e])=>e},{name:"comment",symbols:[j.has("LINE_COMMENT")?{type:"LINE_COMMENT"}:LINE_COMMENT],postprocess:([e])=>({type:"line_comment",text:e.text,precedingWhitespace:e.precedingWhitespace})},{name:"comment",symbols:[j.has("BLOCK_COMMENT")?{type:"BLOCK_COMMENT"}:BLOCK_COMMENT],postprocess:([e])=>({type:"block_comment",text:e.text,precedingWhitespace:e.precedingWhitespace})}],ParserStart:"main"},hl=dl,{Parser:Gl,Grammar:gl}=WI;function ml(e){let E={};const t=new qn(r=>[...Ll(e.tokenize(r,E)),xn(r.length)]),T=new Gl(gl.fromCompiled(hl),{lexer:t});return{parse:(r,s)=>{E=s;const{results:R}=T.feed(r);if(R.length===1)return R[0];throw R.length===0?new Error("Parse error: Invalid SQL"):new Error(`Parse error: Ambiguous grammar
${JSON.stringify(R,void 0,2)}`)}}}var Qn=class{constructor(e){this.indentation=e,this.items=[]}add(...e){for(const E of e)switch(E){case 0:this.items.push(0);break;case 1:this.trimHorizontalWhitespace();break;case 2:this.trimWhitespace();break;case 3:this.trimHorizontalWhitespace(),this.addNewline(3);break;case 4:this.trimHorizontalWhitespace(),this.addNewline(4);break;case 5:this.addIndentation();break;case 6:this.items.push(6);break;default:this.items.push(E)}}trimHorizontalWhitespace(){for(;Hl(Bt(this.items));)this.items.pop()}trimWhitespace(){for(;Bl(Bt(this.items));)this.items.pop()}addNewline(e){if(this.items.length>0)switch(Bt(this.items)){case 3:this.items.pop(),this.items.push(e);break;case 4:break;default:this.items.push(e);break}}addIndentation(){for(let e=0;e<this.indentation.getLevel();e++)this.items.push(6)}toString(){return this.items.map(e=>this.itemToString(e)).join("")}getLayoutItems(){return this.items}itemToString(e){switch(e){case 0:return" ";case 3:case 4:return`
`;case 6:return this.indentation.getSingleIndent();default:return e}}},Hl=e=>e===0||e===6,Bl=e=>e===0||e===6||e===3;function gR(e,E){if(E==="standard")return e;let t=[];return e.length>=10&&e.includes(" ")&&([e,...t]=e.split(" ")),E==="tabularLeft"?e=e.padEnd(9," "):e=e.padStart(9," "),e+["",...t].join(" ")}function mR(e){return tN(e)||e==="RESERVED_CLAUSE"||e==="RESERVED_SELECT"||e==="RESERVED_SET_OPERATION"||e==="RESERVED_JOIN"||e==="LIMIT"}var Er="top-level",bl="block-level",Zn=class{constructor(e){this.indent=e,this.indentTypes=[]}getSingleIndent(){return this.indent}getLevel(){return this.indentTypes.length}increaseTopLevel(){this.indentTypes.push(Er)}increaseBlockLevel(){this.indentTypes.push(bl)}decreaseTopLevel(){this.indentTypes.length>0&&Bt(this.indentTypes)===Er&&this.indentTypes.pop()}decreaseBlockLevel(){for(;this.indentTypes.length>0&&this.indentTypes.pop()===Er;);}},Fl=class extends Qn{constructor(e){super(new Zn("")),this.expressionWidth=e,this.length=0,this.trailingSpace=!1}add(...e){if(e.forEach(E=>this.addToLength(E)),this.length>this.expressionWidth)throw new Lr;super.add(...e)}addToLength(e){if(typeof e=="string")this.length+=e.length,this.trailingSpace=!1;else{if(e===4||e===3)throw new Lr;e===5||e===6||e===0?this.trailingSpace||(this.length++,this.trailingSpace=!0):(e===2||e===1)&&this.trailingSpace&&(this.trailingSpace=!1,this.length--)}}},Lr=class extends Error{},yl=class cr{constructor({cfg:E,dialectCfg:t,params:T,layout:r,inline:s=!1}){this.inline=!1,this.nodes=[],this.index=-1,this.cfg=E,this.dialectCfg=t,this.inline=s,this.params=T,this.layout=r}format(E){for(this.nodes=E,this.index=0;this.index<this.nodes.length;this.index++)this.formatNode(this.nodes[this.index]);return this.layout}formatNode(E){this.formatComments(E.leadingComments),this.formatNodeWithoutComments(E),this.formatComments(E.trailingComments)}formatNodeWithoutComments(E){switch(E.type){case"function_call":return this.formatFunctionCall(E);case"parameterized_data_type":return this.formatParameterizedDataType(E);case"array_subscript":return this.formatArraySubscript(E);case"property_access":return this.formatPropertyAccess(E);case"parenthesis":return this.formatParenthesis(E);case"between_predicate":return this.formatBetweenPredicate(E);case"case_expression":return this.formatCaseExpression(E);case"case_when":return this.formatCaseWhen(E);case"case_else":return this.formatCaseElse(E);case"clause":return this.formatClause(E);case"set_operation":return this.formatSetOperation(E);case"limit_clause":return this.formatLimitClause(E);case"all_columns_asterisk":return this.formatAllColumnsAsterisk(E);case"literal":return this.formatLiteral(E);case"identifier":return this.formatIdentifier(E);case"parameter":return this.formatParameter(E);case"operator":return this.formatOperator(E);case"comma":return this.formatComma(E);case"line_comment":return this.formatLineComment(E);case"block_comment":return this.formatBlockComment(E);case"data_type":return this.formatDataType(E);case"keyword":return this.formatKeywordNode(E)}}formatFunctionCall(E){this.withComments(E.nameKw,()=>{this.layout.add(this.showFunctionKw(E.nameKw))}),this.formatNode(E.parenthesis)}formatParameterizedDataType(E){this.withComments(E.dataType,()=>{this.layout.add(this.showDataType(E.dataType))}),this.formatNode(E.parenthesis)}formatArraySubscript(E){let t;switch(E.array.type){case"data_type":t=this.showDataType(E.array);break;case"keyword":t=this.showKw(E.array);break;default:t=this.showIdentifier(E.array);break}this.withComments(E.array,()=>{this.layout.add(t)}),this.formatNode(E.parenthesis)}formatPropertyAccess(E){this.formatNode(E.object),this.layout.add(1,"."),this.formatNode(E.property)}formatParenthesis(E){const t=this.formatInlineExpression(E.children);t?(this.layout.add(E.openParen),this.layout.add(...t.getLayoutItems()),this.layout.add(1,E.closeParen,0)):(this.layout.add(E.openParen,3),Pt(this.cfg)?(this.layout.add(5),this.layout=this.formatSubExpression(E.children)):(this.layout.indentation.increaseBlockLevel(),this.layout.add(5),this.layout=this.formatSubExpression(E.children),this.layout.indentation.decreaseBlockLevel()),this.layout.add(3,5,E.closeParen,0))}formatBetweenPredicate(E){this.layout.add(this.showKw(E.betweenKw),0),this.layout=this.formatSubExpression(E.expr1),this.layout.add(1,0,this.showNonTabularKw(E.andKw),0),this.layout=this.formatSubExpression(E.expr2),this.layout.add(0)}formatCaseExpression(E){this.formatNode(E.caseKw),this.layout.indentation.increaseBlockLevel(),this.layout=this.formatSubExpression(E.expr),this.layout=this.formatSubExpression(E.clauses),this.layout.indentation.decreaseBlockLevel(),this.layout.add(3,5),this.formatNode(E.endKw)}formatCaseWhen(E){this.layout.add(3,5),this.formatNode(E.whenKw),this.layout=this.formatSubExpression(E.condition),this.formatNode(E.thenKw),this.layout=this.formatSubExpression(E.result)}formatCaseElse(E){this.layout.add(3,5),this.formatNode(E.elseKw),this.layout=this.formatSubExpression(E.result)}formatClause(E){this.isOnelineClause(E)?this.formatClauseInOnelineStyle(E):Pt(this.cfg)?this.formatClauseInTabularStyle(E):this.formatClauseInIndentedStyle(E)}isOnelineClause(E){return this.dialectCfg.onelineClauses[E.nameKw.text]}formatClauseInIndentedStyle(E){this.layout.add(3,5,this.showKw(E.nameKw),3),this.layout.indentation.increaseTopLevel(),this.layout.add(5),this.layout=this.formatSubExpression(E.children),this.layout.indentation.decreaseTopLevel()}formatClauseInOnelineStyle(E){this.layout.add(3,5,this.showKw(E.nameKw),0),this.layout=this.formatSubExpression(E.children)}formatClauseInTabularStyle(E){this.layout.add(3,5,this.showKw(E.nameKw),0),this.layout.indentation.increaseTopLevel(),this.layout=this.formatSubExpression(E.children),this.layout.indentation.decreaseTopLevel()}formatSetOperation(E){this.layout.add(3,5,this.showKw(E.nameKw),3),this.layout.add(5),this.layout=this.formatSubExpression(E.children)}formatLimitClause(E){this.withComments(E.limitKw,()=>{this.layout.add(3,5,this.showKw(E.limitKw))}),this.layout.indentation.increaseTopLevel(),Pt(this.cfg)?this.layout.add(0):this.layout.add(3,5),E.offset?(this.layout=this.formatSubExpression(E.offset),this.layout.add(1,",",0),this.layout=this.formatSubExpression(E.count)):this.layout=this.formatSubExpression(E.count),this.layout.indentation.decreaseTopLevel()}formatAllColumnsAsterisk(E){this.layout.add("*",0)}formatLiteral(E){this.layout.add(E.text,0)}formatIdentifier(E){this.layout.add(this.showIdentifier(E),0)}formatParameter(E){this.layout.add(this.params.get(E),0)}formatOperator({text:E}){this.cfg.denseOperators||this.dialectCfg.alwaysDenseOperators.includes(E)?this.layout.add(1,E):E===":"?this.layout.add(1,E,0):this.layout.add(E,0)}formatComma(E){this.inline?this.layout.add(1,",",0):this.layout.add(1,",",3,5)}withComments(E,t){this.formatComments(E.leadingComments),t(),this.formatComments(E.trailingComments)}formatComments(E){E&&E.forEach(t=>{t.type==="line_comment"?this.formatLineComment(t):this.formatBlockComment(t)})}formatLineComment(E){ZT(E.precedingWhitespace||"")?this.layout.add(3,5,E.text,4,5):this.layout.getLayoutItems().length>0?this.layout.add(2,0,E.text,4,5):this.layout.add(E.text,4,5)}formatBlockComment(E){this.isMultilineBlockComment(E)?(this.splitBlockComment(E.text).forEach(t=>{this.layout.add(3,5,t)}),this.layout.add(3,5)):this.layout.add(E.text,0)}isMultilineBlockComment(E){return ZT(E.text)||ZT(E.precedingWhitespace||"")}isDocComment(E){const t=E.split(/\n/);return/^\/\*\*?$/.test(t[0])&&t.slice(1,t.length-1).every(T=>/^\s*\*/.test(T))&&/^\s*\*\/$/.test(Bt(t))}splitBlockComment(E){return this.isDocComment(E)?E.split(/\n/).map(t=>/^\s*\*/.test(t)?" "+t.replace(/^\s*/,""):t):E.split(/\n/).map(t=>t.replace(/^\s*/,""))}formatSubExpression(E){return new cr({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:this.layout,inline:this.inline}).format(E)}formatInlineExpression(E){const t=this.params.getPositionalParameterIndex();try{return new cr({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:new Fl(this.cfg.expressionWidth),inline:!0}).format(E)}catch(T){if(T instanceof Lr){this.params.setPositionalParameterIndex(t);return}else throw T}}formatKeywordNode(E){switch(E.tokenType){case"RESERVED_JOIN":return this.formatJoin(E);case"AND":case"OR":case"XOR":return this.formatLogicalOperator(E);default:return this.formatKeyword(E)}}formatJoin(E){Pt(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(3,5,this.showKw(E),0),this.layout.indentation.increaseTopLevel()):this.layout.add(3,5,this.showKw(E),0)}formatKeyword(E){this.layout.add(this.showKw(E),0)}formatLogicalOperator(E){this.cfg.logicalOperatorNewline==="before"?Pt(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(3,5,this.showKw(E),0),this.layout.indentation.increaseTopLevel()):this.layout.add(3,5,this.showKw(E),0):this.layout.add(this.showKw(E),3,5)}formatDataType(E){this.layout.add(this.showDataType(E),0)}showKw(E){return mR(E.tokenType)?gR(this.showNonTabularKw(E),this.cfg.indentStyle):this.showNonTabularKw(E)}showNonTabularKw(E){switch(this.cfg.keywordCase){case"preserve":return AT(E.raw);case"upper":return E.text;case"lower":return E.text.toLowerCase()}}showFunctionKw(E){return mR(E.tokenType)?gR(this.showNonTabularFunctionKw(E),this.cfg.indentStyle):this.showNonTabularFunctionKw(E)}showNonTabularFunctionKw(E){switch(this.cfg.functionCase){case"preserve":return AT(E.raw);case"upper":return E.text;case"lower":return E.text.toLowerCase()}}showIdentifier(E){if(E.quoted)return E.text;switch(this.cfg.identifierCase){case"preserve":return E.text;case"upper":return E.text.toUpperCase();case"lower":return E.text.toLowerCase()}}showDataType(E){switch(this.cfg.dataTypeCase){case"preserve":return AT(E.raw);case"upper":return E.text;case"lower":return E.text.toLowerCase()}}},vl=class{constructor(e,E){this.dialect=e,this.cfg=E,this.params=new Cl(this.cfg.params)}format(e){const E=this.parse(e);return this.formatAst(E).trimEnd()}parse(e){return ml(this.dialect.tokenizer).parse(e,this.cfg.paramTypes||{})}formatAst(e){return e.map(E=>this.formatStatement(E)).join(`
`.repeat(this.cfg.linesBetweenQueries+1))}formatStatement(e){const E=new yl({cfg:this.cfg,dialectCfg:this.dialect.formatOptions,params:this.params,layout:new Qn(new Zn(ll(this.cfg)))}).format(e.children);return e.hasSemicolon&&(this.cfg.newlineBeforeSemicolon?E.add(3,";"):E.add(2,";")),E.toString()}},ur=class extends Error{};function Yl(e){const E=["multilineLists","newlineBeforeOpenParen","newlineBeforeCloseParen","aliasAs","commaPosition","tabulateAlias"];for(const t of E)if(t in e)throw new ur(`${t} config is no more supported.`);if(e.expressionWidth<=0)throw new ur(`expressionWidth config must be positive number. Received ${e.expressionWidth} instead.`);return e.params&&!Vl(e.params)&&console.warn('WARNING: All "params" option values should be strings.'),e}function Vl(e){return(e instanceof Array?e:Object.values(e)).every(t=>typeof t=="string")}var zn={bigquery:"bigquery",db2:"db2",db2i:"db2i",hive:"hive",mariadb:"mariadb",mysql:"mysql",n1ql:"n1ql",plsql:"plsql",postgresql:"postgresql",redshift:"redshift",spark:"spark",sqlite:"sqlite",sql:"sql",trino:"trino",transactsql:"transactsql",tsql:"transactsql",singlestoredb:"singlestoredb",snowflake:"snowflake"},xl=Object.keys(zn),wl={tabWidth:2,useTabs:!1,keywordCase:"preserve",identifierCase:"preserve",dataTypeCase:"preserve",functionCase:"preserve",indentStyle:"standard",logicalOperatorNewline:"before",expressionWidth:50,linesBetweenQueries:1,denseOperators:!1,newlineBeforeSemicolon:!1},Wl=(e,E={})=>{if(typeof E.language=="string"&&!xl.includes(E.language))throw new ur(`Unsupported SQL dialect: ${E.language}`);const t=zn[E.language||"sql"];return Xl(e,Ve(Be({},E),{dialect:Yn[t]}))},Xl=(e,E)=>{var t=E,{dialect:T}=t,r=KI(t,["dialect"]);if(typeof e!="string")throw new Error("Invalid query argument. Expected string, instead got "+typeof e);const s=Yl(Be(Be({},wl),r));return new vl(Nl(T),s).format(e)};const $l={class:"flex items-center space-x-3"},Kl={class:"font-bold text-lg"},Jl={key:0,class:"px-1 py-0.5 rounded text-xs bg-sky-600 text-white"},kl={key:1,class:"px-1 py-0.5 rounded text-xs bg-emerald-600 text-white"},jl={key:2},ql=["textContent"],Ql={key:0,class:"mt-4 ml-4"},Zl={class:""},zl={class:"mt-3 text-stone-400 text-sm"},eC=["textContent"],EC=["textContent"],tC=me({__name:"QueryItem",props:{query:{}},setup(e){const E=e,t=pE({isOpen:!0,isFormatted:!1});function T(r){const s="text/plain",R=new Blob([r],{type:s}),A=[new ClipboardItem({[s]:R})];navigator.clipboard.write(A)}return(r,s)=>{const R=Xt("highlightjs");return B(),X("div",null,[U("div",$l,[U("button",{class:"flex items-center space-x-1",onClick:s[0]||(s[0]=A=>t.isOpen=!t.isOpen)},[Q(Ae(Bn),{class:$e(["size-4",{"-rotate-90":!t.isOpen}])},null,8,["class"]),U("span",Kl,Re(r.query.name),1)]),E.query.cached?(B(),X("span",Jl,"cached")):Se("",!0),E.query.async?(B(),X("span",kl,"async")):Se("",!0),t.isOpen?(B(),X("div",jl,[U("span",{onClick:s[1]||(s[1]=A=>t.isFormatted=!t.isFormatted),class:"px-3 text-xs uppercase text-stone-400 cursor-pointer",title:"Format SQL query",textContent:Re(t.isFormatted?"unformat":"format")},null,8,ql),U("span",{onClick:s[2]||(s[2]=A=>T(r.query.sql)),class:"px-3 text-xs uppercase text-stone-400 cursor-pointer",title:"Copy SQL query to clipboard"},"copy")])):Se("",!0)]),t.isOpen?(B(),X("div",Ql,[U("div",Zl,[Q(R,{language:"sql",code:t.isFormatted?Ae(Wl)(r.query.sql):r.query.sql},null,8,["code"])]),U("div",zl,[U("div",{textContent:Re(r.query.source[0])},null,8,eC),r.query.source.length>1?(B(!0),X(Le,{key:0},Je(r.query.source.slice(1),A=>(B(),X("div",{class:"pl-4",textContent:Re("↳ "+A)},null,8,EC))),256)):Se("",!0)])])):Se("",!0)])}}}),TC={class:"flex flex-col space-y-8"},rC=me({__name:"QueriesPanel",props:{currentRequest:{}},setup(e){const E=e;return(t,T)=>(B(),fe(OE,null,{default:Ie(()=>[U("div",TC,[(B(!0),X(Le,null,Je(E.currentRequest.queries,r=>(B(),fe(tC,{key:r.id,query:r},null,8,["query"]))),128))])]),_:1}))}}),sC={key:0},RC=U("div",{class:"text-gray-500"},"No jobs enqueued.",-1),AC=[RC],nC={key:1,class:"my-4 mx-6 divide-y divide-stone-300"},SC=U("thead",null,[U("tr",null,[U("th",{scope:"col",class:"w-36 py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-stone-900 sm:pl-0"},"Job"),U("th",{scope:"col",class:"px-3 py-3.5 text-left text-sm font-semibold text-stone-900"},"Args"),U("th",{scope:"col",class:"px-3 py-3.5 text-left text-sm font-semibold text-stone-900"},"Logs")])],-1),iC={class:"divide-y divide-stone-200"},oC={class:"whitespace-nowrap p-4 pr-8 text-stone-900"},OC=["textContent"],IC={class:"text-stone-600 text-sm"},NC=["textContent"],aC=["textContent"],_C={class:"whitespace-nowrap px-3 p-4 pr-8 text-sm"},lC={class:"whitespace-nowrap px-3 p-4 pr-8 text-sm text-stone-500"},CC=["innerHTML"],LC=me({__name:"JobsPanel",props:{jobs:{}},setup(e){const E=e;function t(T){return T==null?"-":new Date(T*1e3).toLocaleString()}return(T,r)=>{const s=Xt("highlightjs");return B(),fe(OE,null,{default:Ie(()=>[E.jobs.length==0?(B(),X("div",sC,AC)):Se("",!0),E.jobs.length>0?(B(),X("table",nC,[SC,U("tbody",iC,[(B(!0),X(Le,null,Je(E.jobs,(R,A)=>(B(),X("tr",{key:R.id},[U("td",oC,[U("div",{class:"text-lg font-bold",textContent:Re(R.class)},null,8,OC),U("div",IC,[U("div",{textContent:Re("Queue: "+R.queue)},null,8,NC),U("div",{textContent:Re("At: "+t(R.scheduled_at))},null,8,aC)])]),U("td",_C,[Q(s,{language:"json",code:JSON.stringify(R.args,null,2)},null,8,["code"])]),U("td",lC,[(B(!0),X(Le,null,Je(R.logs,(S,n)=>(B(),X("div",{innerHTML:(n>0?"  ".repeat(n)+"↳ ":"")+S,class:""},null,8,CC))),256))])]))),128))])])):Se("",!0)]),_:1})}}}),cC={key:0},uC=U("div",{class:"text-gray-500"},"No logs to show. Are you using the correct minimum level in your config?",-1),PC=[uC],DC={class:"flex items-center space-y-1 space-x-3"},fC={class:"w-24 text-right text-gray-400"},MC={class:"w-16 text-center"},pC=["title"],UC=["innerHTML"],dC=me({__name:"LogsPanel",props:{logs:{}},setup(e){const E=e;function t(T){return(T.progname||T.message||"").replace(" ","&nbsp;&nbsp;")}return(T,r)=>(B(),fe(OE,null,{default:Ie(()=>[E.logs.length==0?(B(),X("div",cC,PC)):Se("",!0),(B(!0),X(Le,null,Je(E.logs,s=>(B(),X("div",DC,[U("div",fC,Re(s.time),1),U("div",MC,[U("span",{class:$e(["px-1 py-0.5 rounded text-white text-xs font-mono font-medium",{"bg-stone-400":s.severity==0,"bg-blue-500":s.severity==1,"bg-amber-400":s.severity==2,"bg-red-400":s.severity==2,"bg-fuchsia-500":s.severity>=3}]),title:s.severity_label},Re(s.severity_label),11,pC)]),U("div",{class:"text-gray-800",innerHTML:t(s)},null,8,UC)]))),256))]),_:1}))}}),hC={class:"flex flex-col space-y-8"},GC={class:"space-y-3"},gC=["textContent"],mC={class:"ml-4"},HC={key:0},BC=me({__name:"MessagesPanel",props:{messages:{}},setup(e){const E=e;return(t,T)=>{const r=Xt("highlightjs");return B(),fe(OE,null,{default:Ie(()=>[U("div",hC,[(B(!0),X(Le,null,Je(E.messages,(s,R)=>(B(),X("div",GC,[U("div",{class:"font-bold text-lg",textContent:Re(s.msg)},null,8,gC),U("div",mC,[s.extra?Se("",!0):(B(),X("div",HC,"–")),s.extra?(B(),fe(r,{key:1,language:"json",code:JSON.stringify(s.extra)},null,8,["code"])):Se("",!0)])]))),256))])]),_:1})}}});class bC{constructor(E){je(this,"id");je(this,"meta");je(this,"request");je(this,"response");je(this,"models");je(this,"queries");je(this,"jobs");je(this,"messages");je(this,"cache");je(this,"logs");this.id=(E==null?void 0:E.id)||"null",this.meta=(E==null?void 0:E.meta)||{},this.request=(E==null?void 0:E.request)||{},this.response=(E==null?void 0:E.response)||{},this.models=(E==null?void 0:E.models)||{},this.queries=(E==null?void 0:E.queries)||[],this.jobs=(E==null?void 0:E.jobs)||[],this.messages=(E==null?void 0:E.messages)||[],this.cache=(E==null?void 0:E.cache)||[],this.logs=(E==null?void 0:E.logs)||[]}get modelsCount(){return Object.values(this.models).reduce((E,t)=>E+t,0)}get queryCount(){return this.queries.length}get jobsCount(){return this.jobs.length}get messagesCount(){return this.messages.length}get cacheCount(){return this.cache.reduce((E,t)=>(E.indexOf(t.transaction_id)===-1&&E.push(t.transaction_id),E),[]).length}get logsCount(){return this.logs.length}get pathWithVerb(){return`${this.meta.method.toUpperCase()} ${this.meta.path}`}get dataForTabs(){return{messages:{label:"Debug",count:this.messagesCount},models:{label:"Models",count:this.modelsCount},queries:{label:"Queries",count:this.queryCount},jobs:{label:"Jobs",count:this.jobsCount},cache:{label:"Cache",count:this.cacheCount}}}}let FC=gn("requests",{state:()=>({requests:[],currentRequest:null}),actions:{addRequests(e){const E=[];return e.forEach(t=>{this.requests.find(T=>T.id===t.id)||this.requests.push(new bC(t)),E.push(t.id)}),E},setCurrentRequestById(e){this.currentRequest=this.requests.find(E=>E.id===e)},clearRequests(){this.requests=[],this.currentRequest=null}}});function yC(e,E,t){switch(t.length){case 0:return e.call(E);case 1:return e.call(E,t[0]);case 2:return e.call(E,t[0],t[1]);case 3:return e.call(E,t[0],t[1],t[2])}return e.apply(E,t)}var eS=yC;function vC(e){return e}var ES=vC,YC=eS,HR=Math.max;function VC(e,E,t){return E=HR(E===void 0?e.length-1:E,0),function(){for(var T=arguments,r=-1,s=HR(T.length-E,0),R=Array(s);++r<s;)R[r]=T[E+r];r=-1;for(var A=Array(E+1);++r<E;)A[r]=T[r];return A[E]=t(R),YC(e,this,A)}}var tS=VC;function xC(e){return function(){return e}}var wC=xC,WC=typeof qE=="object"&&qE&&qE.Object===Object&&qE,TS=WC,XC=TS,$C=typeof self=="object"&&self&&self.Object===Object&&self,KC=XC||$C||Function("return this")(),nE=KC,JC=nE,kC=JC.Symbol,Jt=kC,BR=Jt,rS=Object.prototype,jC=rS.hasOwnProperty,qC=rS.toString,Dt=BR?BR.toStringTag:void 0;function QC(e){var E=jC.call(e,Dt),t=e[Dt];try{e[Dt]=void 0;var T=!0}catch{}var r=qC.call(e);return T&&(E?e[Dt]=t:delete e[Dt]),r}var ZC=QC,zC=Object.prototype,eL=zC.toString;function EL(e){return eL.call(e)}var tL=EL,bR=Jt,TL=ZC,rL=tL,sL="[object Null]",RL="[object Undefined]",FR=bR?bR.toStringTag:void 0;function AL(e){return e==null?e===void 0?RL:sL:FR&&FR in Object(e)?TL(e):rL(e)}var ot=AL;function nL(e){var E=typeof e;return e!=null&&(E=="object"||E=="function")}var NE=nL,SL=ot,iL=NE,oL="[object AsyncFunction]",OL="[object Function]",IL="[object GeneratorFunction]",NL="[object Proxy]";function aL(e){if(!iL(e))return!1;var E=SL(e);return E==OL||E==IL||E==oL||E==NL}var Zr=aL,_L=nE,lL=_L["__core-js_shared__"],CL=lL,tr=CL,yR=function(){var e=/[^.]+$/.exec(tr&&tr.keys&&tr.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}();function LL(e){return!!yR&&yR in e}var cL=LL,uL=Function.prototype,PL=uL.toString;function DL(e){if(e!=null){try{return PL.call(e)}catch{}try{return e+""}catch{}}return""}var sS=DL,fL=Zr,ML=cL,pL=NE,UL=sS,dL=/[\\^$.*+?()[\]{}|]/g,hL=/^\[object .+?Constructor\]$/,GL=Function.prototype,gL=Object.prototype,mL=GL.toString,HL=gL.hasOwnProperty,BL=RegExp("^"+mL.call(HL).replace(dL,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function bL(e){if(!pL(e)||ML(e))return!1;var E=fL(e)?BL:hL;return E.test(UL(e))}var FL=bL;function yL(e,E){return e==null?void 0:e[E]}var vL=yL,YL=FL,VL=vL;function xL(e,E){var t=VL(e,E);return YL(t)?t:void 0}var XE=xL,wL=XE,WL=function(){try{var e=wL(Object,"defineProperty");return e({},"",{}),e}catch{}}(),RS=WL,XL=wC,vR=RS,$L=ES,KL=vR?function(e,E){return vR(e,"toString",{configurable:!0,enumerable:!1,value:XL(E),writable:!0})}:$L,JL=KL,kL=800,jL=16,qL=Date.now;function QL(e){var E=0,t=0;return function(){var T=qL(),r=jL-(T-t);if(t=T,r>0){if(++E>=kL)return arguments[0]}else E=0;return e.apply(void 0,arguments)}}var ZL=QL,zL=JL,ec=ZL,Ec=ec(zL),AS=Ec,tc=ES,Tc=tS,rc=AS;function sc(e,E){return rc(Tc(e,E,tc),e+"")}var nS=sc;function Rc(){this.__data__=[],this.size=0}var Ac=Rc;function nc(e,E){return e===E||e!==e&&E!==E}var yT=nc,Sc=yT;function ic(e,E){for(var t=e.length;t--;)if(Sc(e[t][0],E))return t;return-1}var vT=ic,oc=vT,Oc=Array.prototype,Ic=Oc.splice;function Nc(e){var E=this.__data__,t=oc(E,e);if(t<0)return!1;var T=E.length-1;return t==T?E.pop():Ic.call(E,t,1),--this.size,!0}var ac=Nc,_c=vT;function lc(e){var E=this.__data__,t=_c(E,e);return t<0?void 0:E[t][1]}var Cc=lc,Lc=vT;function cc(e){return Lc(this.__data__,e)>-1}var uc=cc,Pc=vT;function Dc(e,E){var t=this.__data__,T=Pc(t,e);return T<0?(++this.size,t.push([e,E])):t[T][1]=E,this}var fc=Dc,Mc=Ac,pc=ac,Uc=Cc,dc=uc,hc=fc;function Ot(e){var E=-1,t=e==null?0:e.length;for(this.clear();++E<t;){var T=e[E];this.set(T[0],T[1])}}Ot.prototype.clear=Mc;Ot.prototype.delete=pc;Ot.prototype.get=Uc;Ot.prototype.has=dc;Ot.prototype.set=hc;var YT=Ot,Gc=YT;function gc(){this.__data__=new Gc,this.size=0}var mc=gc;function Hc(e){var E=this.__data__,t=E.delete(e);return this.size=E.size,t}var Bc=Hc;function bc(e){return this.__data__.get(e)}var Fc=bc;function yc(e){return this.__data__.has(e)}var vc=yc,Yc=XE,Vc=nE,xc=Yc(Vc,"Map"),zr=xc,wc=XE,Wc=wc(Object,"create"),VT=Wc,YR=VT;function Xc(){this.__data__=YR?YR(null):{},this.size=0}var $c=Xc;function Kc(e){var E=this.has(e)&&delete this.__data__[e];return this.size-=E?1:0,E}var Jc=Kc,kc=VT,jc="__lodash_hash_undefined__",qc=Object.prototype,Qc=qc.hasOwnProperty;function Zc(e){var E=this.__data__;if(kc){var t=E[e];return t===jc?void 0:t}return Qc.call(E,e)?E[e]:void 0}var zc=Zc,eu=VT,Eu=Object.prototype,tu=Eu.hasOwnProperty;function Tu(e){var E=this.__data__;return eu?E[e]!==void 0:tu.call(E,e)}var ru=Tu,su=VT,Ru="__lodash_hash_undefined__";function Au(e,E){var t=this.__data__;return this.size+=this.has(e)?0:1,t[e]=su&&E===void 0?Ru:E,this}var nu=Au,Su=$c,iu=Jc,ou=zc,Ou=ru,Iu=nu;function It(e){var E=-1,t=e==null?0:e.length;for(this.clear();++E<t;){var T=e[E];this.set(T[0],T[1])}}It.prototype.clear=Su;It.prototype.delete=iu;It.prototype.get=ou;It.prototype.has=Ou;It.prototype.set=Iu;var Nu=It,VR=Nu,au=YT,_u=zr;function lu(){this.size=0,this.__data__={hash:new VR,map:new(_u||au),string:new VR}}var Cu=lu;function Lu(e){var E=typeof e;return E=="string"||E=="number"||E=="symbol"||E=="boolean"?e!=="__proto__":e===null}var cu=Lu,uu=cu;function Pu(e,E){var t=e.__data__;return uu(E)?t[typeof E=="string"?"string":"hash"]:t.map}var xT=Pu,Du=xT;function fu(e){var E=Du(this,e).delete(e);return this.size-=E?1:0,E}var Mu=fu,pu=xT;function Uu(e){return pu(this,e).get(e)}var du=Uu,hu=xT;function Gu(e){return hu(this,e).has(e)}var gu=Gu,mu=xT;function Hu(e,E){var t=mu(this,e),T=t.size;return t.set(e,E),this.size+=t.size==T?0:1,this}var Bu=Hu,bu=Cu,Fu=Mu,yu=du,vu=gu,Yu=Bu;function Nt(e){var E=-1,t=e==null?0:e.length;for(this.clear();++E<t;){var T=e[E];this.set(T[0],T[1])}}Nt.prototype.clear=bu;Nt.prototype.delete=Fu;Nt.prototype.get=yu;Nt.prototype.has=vu;Nt.prototype.set=Yu;var SS=Nt,Vu=YT,xu=zr,wu=SS,Wu=200;function Xu(e,E){var t=this.__data__;if(t instanceof Vu){var T=t.__data__;if(!xu||T.length<Wu-1)return T.push([e,E]),this.size=++t.size,this;t=this.__data__=new wu(T)}return t.set(e,E),this.size=t.size,this}var $u=Xu,Ku=YT,Ju=mc,ku=Bc,ju=Fc,qu=vc,Qu=$u;function at(e){var E=this.__data__=new Ku(e);this.size=E.size}at.prototype.clear=Ju;at.prototype.delete=ku;at.prototype.get=ju;at.prototype.has=qu;at.prototype.set=Qu;var iS=at,xR=RS;function Zu(e,E,t){E=="__proto__"&&xR?xR(e,E,{configurable:!0,enumerable:!0,value:t,writable:!0}):e[E]=t}var es=Zu,zu=es,eP=yT;function EP(e,E,t){(t!==void 0&&!eP(e[E],t)||t===void 0&&!(E in e))&&zu(e,E,t)}var oS=EP;function tP(e){return function(E,t,T){for(var r=-1,s=Object(E),R=T(E),A=R.length;A--;){var S=R[e?A:++r];if(t(s[S],S,s)===!1)break}return E}}var TP=tP,rP=TP,sP=rP(),RP=sP,LT={exports:{}};LT.exports;(function(e,E){var t=nE,T=E&&!E.nodeType&&E,r=T&&!0&&e&&!e.nodeType&&e,s=r&&r.exports===T,R=s?t.Buffer:void 0,A=R?R.allocUnsafe:void 0;function S(n,i){if(i)return n.slice();var O=n.length,I=A?A(O):new n.constructor(O);return n.copy(I),I}e.exports=S})(LT,LT.exports);var OS=LT.exports,AP=nE,nP=AP.Uint8Array,SP=nP,wR=SP;function iP(e){var E=new e.constructor(e.byteLength);return new wR(E).set(new wR(e)),E}var Es=iP,oP=Es;function OP(e,E){var t=E?oP(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.length)}var IS=OP;function IP(e,E){var t=-1,T=e.length;for(E||(E=Array(T));++t<T;)E[t]=e[t];return E}var NS=IP,NP=NE,WR=Object.create,aP=function(){function e(){}return function(E){if(!NP(E))return{};if(WR)return WR(E);e.prototype=E;var t=new e;return e.prototype=void 0,t}}(),_P=aP;function lP(e,E){return function(t){return e(E(t))}}var aS=lP,CP=aS,LP=CP(Object.getPrototypeOf,Object),ts=LP,cP=Object.prototype;function uP(e){var E=e&&e.constructor,t=typeof E=="function"&&E.prototype||cP;return e===t}var Ts=uP,PP=_P,DP=ts,fP=Ts;function MP(e){return typeof e.constructor=="function"&&!fP(e)?PP(DP(e)):{}}var _S=MP;function pP(e){return e!=null&&typeof e=="object"}var UE=pP,UP=ot,dP=UE,hP="[object Arguments]";function GP(e){return dP(e)&&UP(e)==hP}var gP=GP,XR=gP,mP=UE,lS=Object.prototype,HP=lS.hasOwnProperty,BP=lS.propertyIsEnumerable,bP=XR(function(){return arguments}())?XR:function(e){return mP(e)&&HP.call(e,"callee")&&!BP.call(e,"callee")},rs=bP,FP=Array.isArray,dE=FP,yP=9007199254740991;function vP(e){return typeof e=="number"&&e>-1&&e%1==0&&e<=yP}var CS=vP,YP=Zr,VP=CS;function xP(e){return e!=null&&VP(e.length)&&!YP(e)}var wT=xP,wP=wT,WP=UE;function XP(e){return WP(e)&&wP(e)}var $P=XP,cT={exports:{}};function KP(){return!1}var JP=KP;cT.exports;(function(e,E){var t=nE,T=JP,r=E&&!E.nodeType&&E,s=r&&!0&&e&&!e.nodeType&&e,R=s&&s.exports===r,A=R?t.Buffer:void 0,S=A?A.isBuffer:void 0,n=S||T;e.exports=n})(cT,cT.exports);var ss=cT.exports,kP=ot,jP=ts,qP=UE,QP="[object Object]",ZP=Function.prototype,zP=Object.prototype,LS=ZP.toString,eD=zP.hasOwnProperty,ED=LS.call(Object);function tD(e){if(!qP(e)||kP(e)!=QP)return!1;var E=jP(e);if(E===null)return!0;var t=eD.call(E,"constructor")&&E.constructor;return typeof t=="function"&&t instanceof t&&LS.call(t)==ED}var cS=tD,TD=ot,rD=CS,sD=UE,RD="[object Arguments]",AD="[object Array]",nD="[object Boolean]",SD="[object Date]",iD="[object Error]",oD="[object Function]",OD="[object Map]",ID="[object Number]",ND="[object Object]",aD="[object RegExp]",_D="[object Set]",lD="[object String]",CD="[object WeakMap]",LD="[object ArrayBuffer]",cD="[object DataView]",uD="[object Float32Array]",PD="[object Float64Array]",DD="[object Int8Array]",fD="[object Int16Array]",MD="[object Int32Array]",pD="[object Uint8Array]",UD="[object Uint8ClampedArray]",dD="[object Uint16Array]",hD="[object Uint32Array]",le={};le[uD]=le[PD]=le[DD]=le[fD]=le[MD]=le[pD]=le[UD]=le[dD]=le[hD]=!0;le[RD]=le[AD]=le[LD]=le[nD]=le[cD]=le[SD]=le[iD]=le[oD]=le[OD]=le[ID]=le[ND]=le[aD]=le[_D]=le[lD]=le[CD]=!1;function GD(e){return sD(e)&&rD(e.length)&&!!le[TD(e)]}var gD=GD;function mD(e){return function(E){return e(E)}}var Rs=mD,uT={exports:{}};uT.exports;(function(e,E){var t=TS,T=E&&!E.nodeType&&E,r=T&&!0&&e&&!e.nodeType&&e,s=r&&r.exports===T,R=s&&t.process,A=function(){try{var S=r&&r.require&&r.require("util").types;return S||R&&R.binding&&R.binding("util")}catch{}}();e.exports=A})(uT,uT.exports);var As=uT.exports,HD=gD,BD=Rs,$R=As,KR=$R&&$R.isTypedArray,bD=KR?BD(KR):HD,uS=bD;function FD(e,E){if(!(E==="constructor"&&typeof e[E]=="function")&&E!="__proto__")return e[E]}var PS=FD,yD=es,vD=yT,YD=Object.prototype,VD=YD.hasOwnProperty;function xD(e,E,t){var T=e[E];(!(VD.call(e,E)&&vD(T,t))||t===void 0&&!(E in e))&&yD(e,E,t)}var DS=xD,wD=DS,WD=es;function XD(e,E,t,T){var r=!t;t||(t={});for(var s=-1,R=E.length;++s<R;){var A=E[s],S=T?T(t[A],e[A],A,t,e):void 0;S===void 0&&(S=e[A]),r?WD(t,A,S):wD(t,A,S)}return t}var _t=XD;function $D(e,E){for(var t=-1,T=Array(e);++t<e;)T[t]=E(t);return T}var KD=$D,JD=9007199254740991,kD=/^(?:0|[1-9]\d*)$/;function jD(e,E){var t=typeof e;return E=E??JD,!!E&&(t=="number"||t!="symbol"&&kD.test(e))&&e>-1&&e%1==0&&e<E}var fS=jD,qD=KD,QD=rs,ZD=dE,zD=ss,ef=fS,Ef=uS,tf=Object.prototype,Tf=tf.hasOwnProperty;function rf(e,E){var t=ZD(e),T=!t&&QD(e),r=!t&&!T&&zD(e),s=!t&&!T&&!r&&Ef(e),R=t||T||r||s,A=R?qD(e.length,String):[],S=A.length;for(var n in e)(E||Tf.call(e,n))&&!(R&&(n=="length"||r&&(n=="offset"||n=="parent")||s&&(n=="buffer"||n=="byteLength"||n=="byteOffset")||ef(n,S)))&&A.push(n);return A}var MS=rf;function sf(e){var E=[];if(e!=null)for(var t in Object(e))E.push(t);return E}var Rf=sf,Af=NE,nf=Ts,Sf=Rf,of=Object.prototype,Of=of.hasOwnProperty;function If(e){if(!Af(e))return Sf(e);var E=nf(e),t=[];for(var T in e)T=="constructor"&&(E||!Of.call(e,T))||t.push(T);return t}var Nf=If,af=MS,_f=Nf,lf=wT;function Cf(e){return lf(e)?af(e,!0):_f(e)}var kt=Cf,Lf=_t,cf=kt;function uf(e){return Lf(e,cf(e))}var Pf=uf,JR=oS,Df=OS,ff=IS,Mf=NS,pf=_S,kR=rs,jR=dE,Uf=$P,df=ss,hf=Zr,Gf=NE,gf=cS,mf=uS,qR=PS,Hf=Pf;function Bf(e,E,t,T,r,s,R){var A=qR(e,t),S=qR(E,t),n=R.get(S);if(n){JR(e,t,n);return}var i=s?s(A,S,t+"",e,E,R):void 0,O=i===void 0;if(O){var I=jR(S),D=!I&&df(S),d=!I&&!D&&mf(S);i=S,I||D||d?jR(A)?i=A:Uf(A)?i=Mf(A):D?(O=!1,i=Df(S,!0)):d?(O=!1,i=ff(S,!0)):i=[]:gf(S)||kR(S)?(i=A,kR(A)?i=Hf(A):(!Gf(A)||hf(A))&&(i=pf(S))):O=!1}O&&(R.set(S,i),r(i,S,T,s,R),R.delete(S)),JR(e,t,i)}var bf=Bf,Ff=iS,yf=oS,vf=RP,Yf=bf,Vf=NE,xf=kt,wf=PS;function pS(e,E,t,T,r){e!==E&&vf(E,function(s,R){if(r||(r=new Ff),Vf(s))Yf(e,E,R,t,pS,T,r);else{var A=T?T(wf(e,R),s,R+"",e,E,r):void 0;A===void 0&&(A=s),yf(e,R,A)}},xf)}var US=pS,Wf=US,QR=NE;function dS(e,E,t,T,r,s){return QR(e)&&QR(E)&&(s.set(E,e),Wf(e,E,void 0,dS,s),s.delete(E)),e}var Xf=dS,$f=yT,Kf=wT,Jf=fS,kf=NE;function jf(e,E,t){if(!kf(t))return!1;var T=typeof E;return(T=="number"?Kf(t)&&Jf(E,t.length):T=="string"&&E in t)?$f(t[E],e):!1}var qf=jf,Qf=nS,Zf=qf;function zf(e){return Qf(function(E,t){var T=-1,r=t.length,s=r>1?t[r-1]:void 0,R=r>2?t[2]:void 0;for(s=e.length>3&&typeof s=="function"?(r--,s):void 0,R&&Zf(t[0],t[1],R)&&(s=r<3?void 0:s,r=1),E=Object(E);++T<r;){var A=t[T];A&&e(E,A,T,s)}return E})}var eM=zf,EM=US,tM=eM,TM=tM(function(e,E,t,T){EM(e,E,t,T)}),rM=TM,sM=eS,RM=nS,AM=Xf,nM=rM,SM=RM(function(e){return e.push(void 0,AM),sM(nM,void 0,e)}),iM=SM;const oM=PT(iM);function OM(e){const E=oM(e,{mode:"ws",cable:{url:"ws://127.0.0.1:3000",prefix:"/_debugbar"},channelName:"Debugbar::DebugbarChannel",height:360});return E.actionCableUrl=`${E.cable.url}${E.cable.prefix}/cable`,E}let IM=gn("config",{state:()=>({config:OM(window._debugbarConfigOptions)})});const NM={key:0},aM=U("div",{class:"text-gray-500"},"No cache used.",-1),_M=[aM],lM={class:"space-y-3"},CM={class:"flex items-center space-x-8"},LM={class:"w-24 text-sm text-right text-gray-400"},cM={class:"w-16 text-right"},uM={class:"text-gray-800"},PM={class:"font-medium",title:"cache key"},DM={class:"text-xs text-gray-400",title:"transaction_id"},fM=me({__name:"CachePanel",props:{cache:{}},setup(e){const E=e;return(t,T)=>(B(),fe(OE,null,{default:Ie(()=>[E.cache.length==0?(B(),X("div",NM,_M)):Se("",!0),U("div",lM,[(B(!0),X(Le,null,Je(E.cache,r=>(B(),X("div",CM,[U("div",LM,Re(r.time),1),U("div",cM,[U("span",{class:$e(["px-1 py-0.5 rounded text-white text-xs font-mono font-medium bg-stone-400",{"!bg-emerald-500":r.label=="hit","!bg-indigo-500":r.label=="write","!bg-amber-400":r.label=="read","!bg-red-400":r.label=="delete"}])},Re(r.label),3)]),U("div",uM,[U("div",PM,Re(r.key),1),U("div",DM,Re(r.transaction_id),1)])]))),256))])]),_:1}))}});function MM(e,E){for(var t=-1,T=e==null?0:e.length,r=Array(T);++t<T;)r[t]=E(e[t],t,e);return r}var hS=MM;function pM(e,E){for(var t=-1,T=e==null?0:e.length;++t<T&&E(e[t],t,e)!==!1;);return e}var UM=pM,dM=aS,hM=dM(Object.keys,Object),GM=hM,gM=Ts,mM=GM,HM=Object.prototype,BM=HM.hasOwnProperty;function bM(e){if(!gM(e))return mM(e);var E=[];for(var t in Object(e))BM.call(e,t)&&t!="constructor"&&E.push(t);return E}var FM=bM,yM=MS,vM=FM,YM=wT;function VM(e){return YM(e)?yM(e):vM(e)}var ns=VM,xM=_t,wM=ns;function WM(e,E){return e&&xM(E,wM(E),e)}var XM=WM,$M=_t,KM=kt;function JM(e,E){return e&&$M(E,KM(E),e)}var kM=JM;function jM(e,E){for(var t=-1,T=e==null?0:e.length,r=0,s=[];++t<T;){var R=e[t];E(R,t,e)&&(s[r++]=R)}return s}var qM=jM;function QM(){return[]}var GS=QM,ZM=qM,zM=GS,ep=Object.prototype,Ep=ep.propertyIsEnumerable,ZR=Object.getOwnPropertySymbols,tp=ZR?function(e){return e==null?[]:(e=Object(e),ZM(ZR(e),function(E){return Ep.call(e,E)}))}:zM,Ss=tp,Tp=_t,rp=Ss;function sp(e,E){return Tp(e,rp(e),E)}var Rp=sp;function Ap(e,E){for(var t=-1,T=E.length,r=e.length;++t<T;)e[r+t]=E[t];return e}var is=Ap,np=is,Sp=ts,ip=Ss,op=GS,Op=Object.getOwnPropertySymbols,Ip=Op?function(e){for(var E=[];e;)np(E,ip(e)),e=Sp(e);return E}:op,gS=Ip,Np=_t,ap=gS;function _p(e,E){return Np(e,ap(e),E)}var lp=_p,Cp=is,Lp=dE;function cp(e,E,t){var T=E(e);return Lp(e)?T:Cp(T,t(e))}var mS=cp,up=mS,Pp=Ss,Dp=ns;function fp(e){return up(e,Dp,Pp)}var Mp=fp,pp=mS,Up=gS,dp=kt;function hp(e){return pp(e,dp,Up)}var HS=hp,Gp=XE,gp=nE,mp=Gp(gp,"DataView"),Hp=mp,Bp=XE,bp=nE,Fp=Bp(bp,"Promise"),yp=Fp,vp=XE,Yp=nE,Vp=vp(Yp,"Set"),xp=Vp,wp=XE,Wp=nE,Xp=wp(Wp,"WeakMap"),$p=Xp,Pr=Hp,Dr=zr,fr=yp,Mr=xp,pr=$p,BS=ot,lt=sS,zR="[object Map]",Kp="[object Object]",eA="[object Promise]",EA="[object Set]",tA="[object WeakMap]",TA="[object DataView]",Jp=lt(Pr),kp=lt(Dr),jp=lt(fr),qp=lt(Mr),Qp=lt(pr),BE=BS;(Pr&&BE(new Pr(new ArrayBuffer(1)))!=TA||Dr&&BE(new Dr)!=zR||fr&&BE(fr.resolve())!=eA||Mr&&BE(new Mr)!=EA||pr&&BE(new pr)!=tA)&&(BE=function(e){var E=BS(e),t=E==Kp?e.constructor:void 0,T=t?lt(t):"";if(T)switch(T){case Jp:return TA;case kp:return zR;case jp:return eA;case qp:return EA;case Qp:return tA}return E});var os=BE,Zp=Object.prototype,zp=Zp.hasOwnProperty;function eU(e){var E=e.length,t=new e.constructor(E);return E&&typeof e[0]=="string"&&zp.call(e,"index")&&(t.index=e.index,t.input=e.input),t}var EU=eU,tU=Es;function TU(e,E){var t=E?tU(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.byteLength)}var rU=TU,sU=/\w*$/;function RU(e){var E=new e.constructor(e.source,sU.exec(e));return E.lastIndex=e.lastIndex,E}var AU=RU,rA=Jt,sA=rA?rA.prototype:void 0,RA=sA?sA.valueOf:void 0;function nU(e){return RA?Object(RA.call(e)):{}}var SU=nU,iU=Es,oU=rU,OU=AU,IU=SU,NU=IS,aU="[object Boolean]",_U="[object Date]",lU="[object Map]",CU="[object Number]",LU="[object RegExp]",cU="[object Set]",uU="[object String]",PU="[object Symbol]",DU="[object ArrayBuffer]",fU="[object DataView]",MU="[object Float32Array]",pU="[object Float64Array]",UU="[object Int8Array]",dU="[object Int16Array]",hU="[object Int32Array]",GU="[object Uint8Array]",gU="[object Uint8ClampedArray]",mU="[object Uint16Array]",HU="[object Uint32Array]";function BU(e,E,t){var T=e.constructor;switch(E){case DU:return iU(e);case aU:case _U:return new T(+e);case fU:return oU(e,t);case MU:case pU:case UU:case dU:case hU:case GU:case gU:case mU:case HU:return NU(e,t);case lU:return new T;case CU:case uU:return new T(e);case LU:return OU(e);case cU:return new T;case PU:return IU(e)}}var bU=BU,FU=os,yU=UE,vU="[object Map]";function YU(e){return yU(e)&&FU(e)==vU}var VU=YU,xU=VU,wU=Rs,AA=As,nA=AA&&AA.isMap,WU=nA?wU(nA):xU,XU=WU,$U=os,KU=UE,JU="[object Set]";function kU(e){return KU(e)&&$U(e)==JU}var jU=kU,qU=jU,QU=Rs,SA=As,iA=SA&&SA.isSet,ZU=iA?QU(iA):qU,zU=ZU,ed=iS,Ed=UM,td=DS,Td=XM,rd=kM,sd=OS,Rd=NS,Ad=Rp,nd=lp,Sd=Mp,id=HS,od=os,Od=EU,Id=bU,Nd=_S,ad=dE,_d=ss,ld=XU,Cd=NE,Ld=zU,cd=ns,ud=kt,Pd=1,Dd=2,fd=4,bS="[object Arguments]",Md="[object Array]",pd="[object Boolean]",Ud="[object Date]",dd="[object Error]",FS="[object Function]",hd="[object GeneratorFunction]",Gd="[object Map]",gd="[object Number]",yS="[object Object]",md="[object RegExp]",Hd="[object Set]",Bd="[object String]",bd="[object Symbol]",Fd="[object WeakMap]",yd="[object ArrayBuffer]",vd="[object DataView]",Yd="[object Float32Array]",Vd="[object Float64Array]",xd="[object Int8Array]",wd="[object Int16Array]",Wd="[object Int32Array]",Xd="[object Uint8Array]",$d="[object Uint8ClampedArray]",Kd="[object Uint16Array]",Jd="[object Uint32Array]",ae={};ae[bS]=ae[Md]=ae[yd]=ae[vd]=ae[pd]=ae[Ud]=ae[Yd]=ae[Vd]=ae[xd]=ae[wd]=ae[Wd]=ae[Gd]=ae[gd]=ae[yS]=ae[md]=ae[Hd]=ae[Bd]=ae[bd]=ae[Xd]=ae[$d]=ae[Kd]=ae[Jd]=!0;ae[dd]=ae[FS]=ae[Fd]=!1;function nT(e,E,t,T,r,s){var R,A=E&Pd,S=E&Dd,n=E&fd;if(t&&(R=r?t(e,T,r,s):t(e)),R!==void 0)return R;if(!Cd(e))return e;var i=ad(e);if(i){if(R=Od(e),!A)return Rd(e,R)}else{var O=od(e),I=O==FS||O==hd;if(_d(e))return sd(e,A);if(O==yS||O==bS||I&&!r){if(R=S||I?{}:Nd(e),!A)return S?nd(e,rd(R,e)):Ad(e,Td(R,e))}else{if(!ae[O])return r?e:{};R=Id(e,O,A)}}s||(s=new ed);var D=s.get(e);if(D)return D;s.set(e,R),Ld(e)?e.forEach(function(x){R.add(nT(x,E,t,x,e,s))}):ld(e)&&e.forEach(function(x,$){R.set($,nT(x,E,t,$,e,s))});var d=n?S?id:Sd:S?ud:cd,b=i?void 0:d(e);return Ed(b||e,function(x,$){b&&($=x,x=e[$]),td(R,$,nT(x,E,t,$,e,s))}),R}var kd=nT,jd=ot,qd=UE,Qd="[object Symbol]";function Zd(e){return typeof e=="symbol"||qd(e)&&jd(e)==Qd}var Os=Zd,zd=dE,eh=Os,Eh=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,th=/^\w*$/;function Th(e,E){if(zd(e))return!1;var t=typeof e;return t=="number"||t=="symbol"||t=="boolean"||e==null||eh(e)?!0:th.test(e)||!Eh.test(e)||E!=null&&e in Object(E)}var rh=Th,vS=SS,sh="Expected a function";function Is(e,E){if(typeof e!="function"||E!=null&&typeof E!="function")throw new TypeError(sh);var t=function(){var T=arguments,r=E?E.apply(this,T):T[0],s=t.cache;if(s.has(r))return s.get(r);var R=e.apply(this,T);return t.cache=s.set(r,R)||s,R};return t.cache=new(Is.Cache||vS),t}Is.Cache=vS;var Rh=Is,Ah=Rh,nh=500;function Sh(e){var E=Ah(e,function(T){return t.size===nh&&t.clear(),T}),t=E.cache;return E}var ih=Sh,oh=ih,Oh=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Ih=/\\(\\)?/g,Nh=oh(function(e){var E=[];return e.charCodeAt(0)===46&&E.push(""),e.replace(Oh,function(t,T,r,s){E.push(r?s.replace(Ih,"$1"):T||t)}),E}),ah=Nh,oA=Jt,_h=hS,lh=dE,Ch=Os,Lh=1/0,OA=oA?oA.prototype:void 0,IA=OA?OA.toString:void 0;function YS(e){if(typeof e=="string")return e;if(lh(e))return _h(e,YS)+"";if(Ch(e))return IA?IA.call(e):"";var E=e+"";return E=="0"&&1/e==-Lh?"-0":E}var ch=YS,uh=ch;function Ph(e){return e==null?"":uh(e)}var Dh=Ph,fh=dE,Mh=rh,ph=ah,Uh=Dh;function dh(e,E){return fh(e)?e:Mh(e,E)?[e]:ph(Uh(e))}var Ns=dh;function hh(e){var E=e==null?0:e.length;return E?e[E-1]:void 0}var Gh=hh,gh=Os,mh=1/0;function Hh(e){if(typeof e=="string"||gh(e))return e;var E=e+"";return E=="0"&&1/e==-mh?"-0":E}var VS=Hh,Bh=Ns,bh=VS;function Fh(e,E){E=Bh(E,e);for(var t=0,T=E.length;e!=null&&t<T;)e=e[bh(E[t++])];return t&&t==T?e:void 0}var yh=Fh;function vh(e,E,t){var T=-1,r=e.length;E<0&&(E=-E>r?0:r+E),t=t>r?r:t,t<0&&(t+=r),r=E>t?0:t-E>>>0,E>>>=0;for(var s=Array(r);++T<r;)s[T]=e[T+E];return s}var Yh=vh,Vh=yh,xh=Yh;function wh(e,E){return E.length<2?e:Vh(e,xh(E,0,-1))}var Wh=wh,Xh=Ns,$h=Gh,Kh=Wh,Jh=VS;function kh(e,E){return E=Xh(E,e),e=Kh(e,E),e==null||delete e[Jh($h(E))]}var jh=kh,qh=cS;function Qh(e){return qh(e)?void 0:e}var Zh=Qh,NA=Jt,zh=rs,eG=dE,aA=NA?NA.isConcatSpreadable:void 0;function EG(e){return eG(e)||zh(e)||!!(aA&&e&&e[aA])}var tG=EG,TG=is,rG=tG;function xS(e,E,t,T,r){var s=-1,R=e.length;for(t||(t=rG),r||(r=[]);++s<R;){var A=e[s];E>0&&t(A)?E>1?xS(A,E-1,t,T,r):TG(r,A):T||(r[r.length]=A)}return r}var sG=xS,RG=sG;function AG(e){var E=e==null?0:e.length;return E?RG(e,1):[]}var nG=AG,SG=nG,iG=tS,oG=AS;function OG(e){return oG(iG(e,void 0,SG),e+"")}var IG=OG,NG=hS,aG=kd,_G=jh,lG=Ns,CG=_t,LG=Zh,cG=IG,uG=HS,PG=1,DG=2,fG=4,MG=cG(function(e,E){var t={};if(e==null)return t;var T=!1;E=NG(E,function(s){return s=lG(s,e),T||(T=s.length>1),s}),CG(e,uG(e),t),T&&(t=aG(t,PG|DG|fG,LG));for(var r=E.length;r--;)_G(t,E[r]);return t}),pG=MG;const UG=PT(pG),dG={class:"break-all w-full border-separate border-spacing-1"},hG={key:0},GG=["textContent"],gG=["textContent"],ft=me({__name:"KeyValueTable",props:{keyLabel:{},valueLabel:{}},setup(e){const E=e;return(t,T)=>(B(),X("table",dG,[E.keyLabel||E.valueLabel?(B(),X("tr",hG,[U("th",{textContent:Re(E.keyLabel),class:"bg-amber-50 w-40 px-3 py-1"},null,8,GG),U("th",{textContent:Re(E.valueLabel),class:"bg-amber-50 px-3 py-1"},null,8,gG)])):Se("",!0),$t(t.$slots,"default")]))}}),mG=["textContent"],HG={class:"px-3 py-1"},qe=me({__name:"Row",props:{label:{}},setup(e){const E=e;return(t,T)=>(B(),X("tr",null,[U("td",{textContent:Re(E.label),class:"w-40 font-medium bg-stone-50 px-3 py-1"},null,8,mG),U("td",HG,[$t(t.$slots,"default")])]))}}),BG={class:"font-medium"},bG={key:0},_A=me({__name:"Foldable",props:{label:{},isOpen:{type:Boolean,default:!1}},setup(e){const E=e,t=pE({isOpen:E.isOpen});return(T,r)=>(B(),X("div",null,[U("div",null,[U("button",{class:"flex items-center space-x-1",onClick:r[0]||(r[0]=s=>t.isOpen=!t.isOpen)},[Q(Ae(Bn),{class:$e(["size-4",{"-rotate-90":!t.isOpen}])},null,8,["class"]),U("span",BG,Re(E.label),1)])]),t.isOpen?(B(),X("div",bG,[$t(T.$slots,"default")])):Se("",!0)]))}}),FG={class:"flex"},yG={class:"w-1/2"},vG=U("h2",{class:"mt-0.5 mb-2 px-2 py-1 bg-stone-300 text-black tracking-wide text-xs uppercase font-bold rounded"}," HTTP Request ",-1),YG=U("div",{class:"py-3 text-right italic text-sm text-stone-500"},[Ye(" What else would like to see here? "),U("a",{target:"_blank",class:"underline font-bold",href:"https://github.com/julienbourdeau/debugbar/discussions"},"Tell me!")],-1),VG={class:"w-1/2"},xG=U("h2",{class:"mt-0.5 mb-2 px-2 py-1 bg-stone-300 text-black tracking-wide text-xs uppercase font-bold rounded"}," Routing ",-1),wG=U("h2",{class:"mt-0.5 mb-2 px-2 py-1 bg-stone-300 text-black tracking-wide text-xs uppercase font-bold rounded"}," HTTP Response ",-1),WG={key:0},XG=U("div",{class:"py-3 text-sm text-stone-500"},[Ye(" The response was not captured. "),U("a",{target:"_blank",class:"underline font-bold",href:"https://debugbar.dev/docs/known-limitations/"},"Learn more")],-1),$G=[XG],KG={key:1},JG=me({__name:"RequestPanel",props:{request:{}},setup(e){return(E,t)=>{const T=Xt("highlightjs");return B(),X("div",FG,[U("div",yG,[Q(OE,null,{default:Ie(()=>[vG,Q(ft,null,{default:Ie(()=>[Q(qe,{label:"Method"},{default:Ie(()=>[Ye(Re(E.request.meta.method),1)]),_:1}),Q(qe,{label:"URL"},{default:Ie(()=>[Ye(Re(E.request.meta.path),1)]),_:1}),Q(qe,{label:"Params"},{default:Ie(()=>[Q(T,{class:"text-sm",language:"json",code:JSON.stringify(Ae(UG)(E.request.meta.params,["controller","action"]),null,2)},null,8,["code"])]),_:1}),Q(qe,{label:"Header: Version"},{default:Ie(()=>[Ye(Re(E.request.request.headers.Version),1)]),_:1}),Q(qe,{label:"Header: Cache-Control"},{default:Ie(()=>[Ye(Re(E.request.request.headers["Cache-Control"]),1)]),_:1})]),_:1}),Q(_A,{class:"py-4",label:"All Headers"},{default:Ie(()=>[Q(ft,null,{default:Ie(()=>[(B(!0),X(Le,null,Je(E.request.request.headers,(r,s)=>(B(),fe(qe,{key:s,label:s},{default:Ie(()=>[Ye(Re(r),1)]),_:2},1032,["label"]))),128))]),_:1})]),_:1}),YG]),_:1})]),U("div",VG,[Q(OE,null,{default:Ie(()=>[xG,Q(ft,null,{default:Ie(()=>[Q(qe,{title:"Controller"},{default:Ie(()=>[Ye(Re(E.request.meta.controller)+" > "+Re(E.request.meta.action),1)]),_:1})]),_:1})]),_:1}),Q(OE,null,{default:Ie(()=>{var r,s;return[wG,(r=E.request.response)!=null&&r.status?Se("",!0):(B(),X("div",WG,$G)),(s=E.request.response)!=null&&s.status?(B(),X("div",KG,[Q(ft,null,{default:Ie(()=>[Q(qe,{label:"Status"},{default:Ie(()=>[Ye(Re(E.request.response.status),1)]),_:1}),Q(qe,{label:"Body"},{default:Ie(()=>[Ye(Re(E.request.response.body.substring(0,140)),1)]),_:1}),Q(qe,{label:"Header: Content-Type"},{default:Ie(()=>[Ye(Re(E.request.response.headers["Content-Type"]),1)]),_:1})]),_:1}),Q(_A,{class:"py-4",label:"All Headers"},{default:Ie(()=>[Q(ft,null,{default:Ie(()=>[(B(!0),X(Le,null,Je(E.request.response.headers,(R,A)=>(B(),fe(qe,{key:A,label:A},{default:Ie(()=>[Ye(Re(R),1)]),_:2},1032,["label"]))),128))]),_:1})]),_:1})])):Se("",!0)]}),_:1})])])}}}),kG={class:"p-4 leading-8"},jG=me({__name:"JsonPanel",props:{currentRequest:{}},setup(e){const E=e;return(t,T)=>{const r=Xt("highlightjs");return B(),X("div",kG,[Q(r,{language:"json",code:JSON.stringify(E.currentRequest,null,2)},null,8,["code"])])}}}),qG=U("div",{class:"p-1 pt-1.5"},[U("img",{class:"h-5",src:Hn,alt:"Logo"})],-1),QG=[qG],ZG={key:1,class:"z-[9999] fixed left-0 bottom-0 w-full"},zG=U("div",{class:"h-0.5 bg-red-700 cursor-row-resize"},null,-1),eg={class:"flex items-center justify-between bg-stone-100 border-b border-stone-200"},Eg=U("div",{class:"px-5 py-1.5 italic"},"No request yet",-1),tg={class:"px-3"},Tg={key:2,class:"z-[9999] fixed left-0 bottom-0 w-full"},rg={class:"flex"},sg=U("div",{class:"p-1 pt-1.5"},[U("img",{class:"h-5",src:Hn,alt:"Rails logo"})],-1),Rg={class:"flex items-center space-x-2.5 pr-1"},Ag={class:"text-sm text-stone-600 font-medium tracking-wide"},ng={key:1,class:"text-sm font-bold text-red-600 bg-red-100 px-1 rounded"},Sg=["selected","textContent","value"],ig={class:"flex items-center pl-2 space-x-2"},og=["disabled"],Og=me({__name:"Debugbar",setup(e){let E=FC(),t=IM();const T=cE(null),r=pE({activeTab:"",minimized:!1,isResizing:!1,height:t.config.height}),s=sE(()=>r.activeTab!=""),R=sE(()=>!1),A=sE(()=>{var O,I;return((O=E.currentRequest)==null?void 0:O.meta.params.controller)+"#"+((I=E.currentRequest)==null?void 0:I.meta.params.action)});let S;t.config.mode=="ws"?S=DI.createConsumer(t.config.actionCableUrl).subscriptions.create({channel:t.config.channelName},{connected(){console.log("🟢 Connected to channel"),S.send({ids:[]})},disconnected(){console.log("🔴 Disconnected from channel")},received(O){if(O.length==0)return;const I=E.addRequests(O);s.value||E.setCurrentRequestById(I[I.length-1]),setTimeout(()=>{S.send({ids:I})},50)}}):(console.log('Using debugbar in "offline mode", ideal for demoing with fixtures.'),S={send:O=>{console.log("Ignoring `send` call",O)}});const n=()=>{console.log("Clearing requests"),r.activeTab="",E.clearRequests(),S.send({clear:!0})};Wr(()=>{window.onresize=function(){window.innerHeight<r.height&&(r.height=window.innerHeight-T.value.clientHeight)},document.onmousemove=function(O){r.isResizing&&(r.height=window.innerHeight-O.clientY-T.value.clientHeight)},document.onmouseup=function(O){r.isResizing=!1}});const i=O=>{r.activeTab==O?r.activeTab="":(window.innerHeight<r.height&&(r.height=window.innerHeight-T.value.clientHeight*2),r.activeTab=O)};return(O,I)=>{var D,d,b,x,$,J;return B(),X(Le,null,[r.minimized?(B(),X("div",{key:0,onClick:I[0]||(I[0]=V=>r.minimized=!1),class:"z-[9999] fixed left-0 bottom-0 bg-transparent cursor-pointer"},QG)):Se("",!0),!r.minimized&&Ae(E).currentRequest==null?(B(),X("div",ZG,[zG,U("div",eg,[Eg,U("div",tg,[U("button",{onClick:I[1]||(I[1]=V=>r.minimized=!0),title:"Hide in the corner"},[Q(Ae(TR),{class:"size-4"})])])])])):Se("",!0),!r.minimized&&Ae(E).currentRequest?(B(),X("div",Tg,[U("div",{id:"draggable-bar",onMousedown:I[2]||(I[2]=V=>r.isResizing=!0),class:"h-0.5 bg-red-700 cursor-row-resize"},null,32),U("div",{id:"debubgbar-header",ref_key:"header",ref:T,class:"flex px-1 items-center justify-between bg-stone-100 border-b-2 border-stone-300"},[U("div",null,[U("div",rg,[sg,(B(!0),X(Le,null,Je(Ae(E).currentRequest.dataForTabs,(V,v)=>(B(),fe(dI,{key:"k",label:V.label,count:V==null?void 0:V.count,"is-active":v===r.activeTab,disabled:V.count==0,onClick:re=>i(v)},{default:Ie(()=>[Ye(Re(V.label),1)]),_:2},1032,["label","count","is-active","disabled","onClick"]))),128)),R.value?(B(),X("button",{key:0,onClick:I[3]||(I[3]=V=>i("debug")),class:$e(["px-3 py-1.5 text-stone-600",{"bg-stone-300":r.activeTab=="debug"}])},[Q(Ae(fI),{class:"size-4"})],2)):Se("",!0)])]),U("div",Rg,[U("div",{onClick:I[4]||(I[4]=V=>i("request")),class:"flex space-x-2 cursor-pointer"},[U("span",Ag,Re(A.value),1),Ae(E).currentRequest.meta.duration<1e3?(B(),X("span",{key:0,class:$e(["text-sm font-bold",{"text-orange-600":Ae(E).currentRequest.meta.duration>=800}])},Re(Ae(E).currentRequest.meta.duration.toFixed(1))+"ms",3)):Se("",!0),Ae(E).currentRequest.meta.duration>=1e3?(B(),X("span",ng,Re((Ae(E).currentRequest.meta.duration/1e3).toFixed(2))+"s",1)):Se("",!0),U("span",{class:$e(["px-1 py-0.5 rounded text-xs",{"bg-green-600 text-white":Ae(E).currentRequest.meta.status<300,"bg-amber-600 text-white":Ae(E).currentRequest.meta.status>=400&&Ae(E).currentRequest.meta.status<500,"bg-red-600 text-white":Ae(E).currentRequest.meta.status>=500}])},Re(Ae(E).currentRequest.meta.status),3)]),U("select",{class:"px-2 py-1.5 bg-white border border-stone-200 rounded w-[330px] text-sm",name:"current_request_id",onChange:I[5]||(I[5]=V=>{const v=V.target;Ae(E).setCurrentRequestById(v.value)})},[(B(!0),X(Le,null,Je(Ae(E).requests,V=>(B(),X("option",{selected:Ae(E).currentRequest.id==V.id,textContent:Re(V.pathWithVerb),value:V.id},null,8,Sg))),256))],32),U("button",{onClick:n,title:"Clear all requests (frontend and backend)"},[Q(Ae(MI),{class:"size-4"})]),U("div",ig,[U("button",{onClick:I[6]||(I[6]=V=>r.minimized=!0),title:"Hide in the corner"},[Q(Ae(TR),{class:"size-4"})]),U("button",{disabled:!s.value,onClick:I[7]||(I[7]=V=>r.activeTab=""),title:"Close"},[Q(Ae(pI),{class:"size-4"})],8,og)])])],512),r.activeTab!=""?(B(),X("div",{key:0,ref:"body",id:"debugbar-body",class:"bg-white overflow-scroll",style:dT(`height: ${r.height}px`)},[r.activeTab=="request"?(B(),fe(JG,{key:0,request:Ae(E).currentRequest},null,8,["request"])):Se("",!0),r.activeTab=="messages"?(B(),fe(BC,{key:1,messages:(D=Ae(E).currentRequest)==null?void 0:D.messages},null,8,["messages"])):Se("",!0),r.activeTab=="models"?(B(),fe(xI,{key:2,models:(d=Ae(E).currentRequest)==null?void 0:d.models,count:(b=Ae(E).currentRequest)==null?void 0:b.modelsCount},null,8,["models","count"])):Se("",!0),r.activeTab=="queries"?(B(),fe(rC,{key:3,"current-request":Ae(E).currentRequest},null,8,["current-request"])):Se("",!0),r.activeTab=="jobs"?(B(),fe(LC,{key:4,jobs:(x=Ae(E).currentRequest)==null?void 0:x.jobs},null,8,["jobs"])):Se("",!0),r.activeTab=="cache"?(B(),fe(fM,{key:5,cache:($=Ae(E).currentRequest)==null?void 0:$.cache},null,8,["cache"])):Se("",!0),r.activeTab=="logs"?(B(),fe(dC,{key:6,logs:(J=Ae(E).currentRequest)==null?void 0:J.logs},null,8,["logs"])):Se("",!0),R.value&&r.activeTab=="debug"?(B(),fe(jG,{key:7,"current-request":Ae(E).currentRequest,class:"px-3 py-2"},null,8,["current-request"])):Se("",!0)],4)):Se("",!0)])):Se("",!0)],64)}}}),Ig=`pre code.hljs{display:block;overflow-x:auto;padding:1em}code.hljs{padding:3px 5px}/*!
  Theme: GitHub
  Description: Light theme as seen on github.com
  Author: github.com
  Maintainer: @Hirse
  Updated: 2021-05-15

  Outdated base version: https://github.com/primer/github-syntax-light
  Current colors taken from GitHub's CSS
*/.hljs{color:#24292e;background:#fff}.hljs-doctag,.hljs-keyword,.hljs-meta .hljs-keyword,.hljs-template-tag,.hljs-template-variable,.hljs-type,.hljs-variable.language_{color:#d73a49}.hljs-title,.hljs-title.class_,.hljs-title.class_.inherited__,.hljs-title.function_{color:#6f42c1}.hljs-attr,.hljs-attribute,.hljs-literal,.hljs-meta,.hljs-number,.hljs-operator,.hljs-variable,.hljs-selector-attr,.hljs-selector-class,.hljs-selector-id{color:#005cc5}.hljs-regexp,.hljs-string,.hljs-meta .hljs-string{color:#032f62}.hljs-built_in,.hljs-symbol{color:#e36209}.hljs-comment,.hljs-code,.hljs-formula{color:#6a737d}.hljs-name,.hljs-quote,.hljs-selector-tag,.hljs-selector-pseudo{color:#22863a}.hljs-subst{color:#24292e}.hljs-section{color:#005cc5;font-weight:700}.hljs-bullet{color:#735c0f}.hljs-emphasis{color:#24292e;font-style:italic}.hljs-strong{color:#24292e;font-weight:700}.hljs-addition{color:#22863a;background-color:#f0fff4}.hljs-deletion{color:#b31d28;background-color:#ffeef0}/*! tailwindcss v3.4.0 | MIT License | https://tailwindcss.com
*/*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}:before,:after{--tw-content: ""}html,:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}*,:before,:after{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }pre,pre code.hljs{margin:0!important;width:100%;padding:0!important}.fixed{position:fixed}.bottom-0{bottom:0}.left-0{left:0}.z-\\[9999\\]{z-index:9999}.mx-6{margin-left:1.5rem;margin-right:1.5rem}.mx-auto{margin-left:auto;margin-right:auto}.my-4{margin-top:1rem;margin-bottom:1rem}.mb-2{margin-bottom:.5rem}.ml-4{margin-left:1rem}.mt-0{margin-top:0}.mt-0\\.5{margin-top:.125rem}.mt-1{margin-top:.25rem}.mt-10{margin-top:2.5rem}.mt-16{margin-top:4rem}.mt-2{margin-top:.5rem}.mt-3{margin-top:.75rem}.mt-4{margin-top:1rem}.mt-6{margin-top:1.5rem}.mt-8{margin-top:2rem}.inline{display:inline}.flex{display:flex}.table{display:table}.hidden{display:none}.aspect-video{aspect-ratio:16 / 9}.size-4{width:1rem;height:1rem}.h-0{height:0px}.h-0\\.5{height:.125rem}.h-5{height:1.25rem}.h-6{height:1.5rem}.w-1\\/2{width:50%}.w-16{width:4rem}.w-24{width:6rem}.w-36{width:9rem}.w-40{width:10rem}.w-5{width:1.25rem}.w-6{width:1.5rem}.w-\\[330px\\]{width:330px}.w-full{width:100%}.max-w-2xl{max-width:42rem}.max-w-3xl{max-width:48rem}.max-w-xl{max-width:36rem}.flex-none{flex:none}.border-separate{border-collapse:separate}.border-spacing-1{--tw-border-spacing-x: .25rem;--tw-border-spacing-y: .25rem;border-spacing:var(--tw-border-spacing-x) var(--tw-border-spacing-y)}.-rotate-90{--tw-rotate: -90deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.cursor-pointer{cursor:pointer}.cursor-row-resize{cursor:row-resize}.flex-col{flex-direction:column}.items-center{align-items:center}.justify-between{justify-content:space-between}.gap-x-2{-moz-column-gap:.5rem;column-gap:.5rem}.gap-x-3{-moz-column-gap:.75rem;column-gap:.75rem}.gap-x-4{-moz-column-gap:1rem;column-gap:1rem}.space-x-1>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.25rem * var(--tw-space-x-reverse));margin-left:calc(.25rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-2\\.5>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.625rem * var(--tw-space-x-reverse));margin-left:calc(.625rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-3>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.75rem * var(--tw-space-x-reverse));margin-left:calc(.75rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-8>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(2rem * var(--tw-space-x-reverse));margin-left:calc(2rem * calc(1 - var(--tw-space-x-reverse)))}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.25rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.25rem * var(--tw-space-y-reverse))}.space-y-3>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.75rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.75rem * var(--tw-space-y-reverse))}.space-y-8>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(2rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(2rem * var(--tw-space-y-reverse))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse: 0;border-top-width:calc(1px * calc(1 - var(--tw-divide-y-reverse)));border-bottom-width:calc(1px * var(--tw-divide-y-reverse))}.divide-stone-200>:not([hidden])~:not([hidden]){--tw-divide-opacity: 1;border-color:rgb(231 229 228 / var(--tw-divide-opacity))}.divide-stone-300>:not([hidden])~:not([hidden]){--tw-divide-opacity: 1;border-color:rgb(214 211 209 / var(--tw-divide-opacity))}.overflow-scroll{overflow:scroll}.whitespace-nowrap{white-space:nowrap}.break-all{word-break:break-all}.rounded{border-radius:.25rem}.rounded-full{border-radius:9999px}.rounded-sm{border-radius:.125rem}.rounded-xl{border-radius:.75rem}.border{border-width:1px}.border-0{border-width:0px}.border-b{border-bottom-width:1px}.border-b-2{border-bottom-width:2px}.border-l{border-left-width:1px}.border-indigo-600{--tw-border-opacity: 1;border-color:rgb(79 70 229 / var(--tw-border-opacity))}.border-stone-200{--tw-border-opacity: 1;border-color:rgb(231 229 228 / var(--tw-border-opacity))}.border-stone-300{--tw-border-opacity: 1;border-color:rgb(214 211 209 / var(--tw-border-opacity))}.\\!bg-amber-400{--tw-bg-opacity: 1 !important;background-color:rgb(251 191 36 / var(--tw-bg-opacity))!important}.\\!bg-emerald-500{--tw-bg-opacity: 1 !important;background-color:rgb(16 185 129 / var(--tw-bg-opacity))!important}.\\!bg-indigo-500{--tw-bg-opacity: 1 !important;background-color:rgb(99 102 241 / var(--tw-bg-opacity))!important}.\\!bg-red-400{--tw-bg-opacity: 1 !important;background-color:rgb(248 113 113 / var(--tw-bg-opacity))!important}.\\!bg-red-700{--tw-bg-opacity: 1 !important;background-color:rgb(185 28 28 / var(--tw-bg-opacity))!important}.bg-amber-400{--tw-bg-opacity: 1;background-color:rgb(251 191 36 / var(--tw-bg-opacity))}.bg-amber-50{--tw-bg-opacity: 1;background-color:rgb(255 251 235 / var(--tw-bg-opacity))}.bg-amber-600{--tw-bg-opacity: 1;background-color:rgb(217 119 6 / var(--tw-bg-opacity))}.bg-blue-500{--tw-bg-opacity: 1;background-color:rgb(59 130 246 / var(--tw-bg-opacity))}.bg-emerald-600{--tw-bg-opacity: 1;background-color:rgb(5 150 105 / var(--tw-bg-opacity))}.bg-fuchsia-500{--tw-bg-opacity: 1;background-color:rgb(217 70 239 / var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity: 1;background-color:rgb(249 250 251 / var(--tw-bg-opacity))}.bg-green-600{--tw-bg-opacity: 1;background-color:rgb(22 163 74 / var(--tw-bg-opacity))}.bg-red-100{--tw-bg-opacity: 1;background-color:rgb(254 226 226 / var(--tw-bg-opacity))}.bg-red-400{--tw-bg-opacity: 1;background-color:rgb(248 113 113 / var(--tw-bg-opacity))}.bg-red-600{--tw-bg-opacity: 1;background-color:rgb(220 38 38 / var(--tw-bg-opacity))}.bg-red-700{--tw-bg-opacity: 1;background-color:rgb(185 28 28 / var(--tw-bg-opacity))}.bg-sky-600{--tw-bg-opacity: 1;background-color:rgb(2 132 199 / var(--tw-bg-opacity))}.bg-stone-100{--tw-bg-opacity: 1;background-color:rgb(245 245 244 / var(--tw-bg-opacity))}.bg-stone-300{--tw-bg-opacity: 1;background-color:rgb(214 211 209 / var(--tw-bg-opacity))}.bg-stone-400{--tw-bg-opacity: 1;background-color:rgb(168 162 158 / var(--tw-bg-opacity))}.bg-stone-50{--tw-bg-opacity: 1;background-color:rgb(250 250 249 / var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-white{--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.object-cover{-o-object-fit:cover;object-fit:cover}.p-0{padding:0}.p-0\\.5{padding:.125rem}.p-1{padding:.25rem}.p-4{padding:1rem}.px-1{padding-left:.25rem;padding-right:.25rem}.px-1\\.5{padding-left:.375rem;padding-right:.375rem}.px-2{padding-left:.5rem;padding-right:.5rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-0{padding-top:0;padding-bottom:0}.py-0\\.5{padding-top:.125rem;padding-bottom:.125rem}.py-1{padding-top:.25rem;padding-bottom:.25rem}.py-1\\.5{padding-top:.375rem;padding-bottom:.375rem}.py-2{padding-top:.5rem;padding-bottom:.5rem}.py-3{padding-top:.75rem;padding-bottom:.75rem}.py-3\\.5{padding-top:.875rem;padding-bottom:.875rem}.py-32{padding-top:8rem;padding-bottom:8rem}.py-4{padding-top:1rem;padding-bottom:1rem}.pl-2{padding-left:.5rem}.pl-4{padding-left:1rem}.pl-9{padding-left:2.25rem}.pr-1{padding-right:.25rem}.pr-3{padding-right:.75rem}.pr-8{padding-right:2rem}.pt-1{padding-top:.25rem}.pt-1\\.5{padding-top:.375rem}.text-left{text-align:left}.text-center{text-align:center}.text-right{text-align:right}.font-mono{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}.text-2xl{font-size:1.5rem;line-height:2rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-base{font-size:1rem;line-height:1.5rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-xs{font-size:.75rem;line-height:1rem}.font-bold{font-weight:700}.font-medium{font-weight:500}.font-semibold{font-weight:600}.uppercase{text-transform:uppercase}.italic{font-style:italic}.leading-6{line-height:1.5rem}.leading-7{line-height:1.75rem}.leading-8{line-height:2rem}.tracking-tight{letter-spacing:-.025em}.tracking-wide{letter-spacing:.025em}.\\!text-white{--tw-text-opacity: 1 !important;color:rgb(255 255 255 / var(--tw-text-opacity))!important}.text-black{--tw-text-opacity: 1;color:rgb(0 0 0 / var(--tw-text-opacity))}.text-gray-300{--tw-text-opacity: 1;color:rgb(209 213 219 / var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity: 1;color:rgb(156 163 175 / var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity: 1;color:rgb(107 114 128 / var(--tw-text-opacity))}.text-gray-600{--tw-text-opacity: 1;color:rgb(75 85 99 / var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity: 1;color:rgb(55 65 81 / var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity: 1;color:rgb(31 41 55 / var(--tw-text-opacity))}.text-gray-900{--tw-text-opacity: 1;color:rgb(17 24 39 / var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity: 1;color:rgb(79 70 229 / var(--tw-text-opacity))}.text-orange-600{--tw-text-opacity: 1;color:rgb(234 88 12 / var(--tw-text-opacity))}.text-red-600{--tw-text-opacity: 1;color:rgb(220 38 38 / var(--tw-text-opacity))}.text-stone-400{--tw-text-opacity: 1;color:rgb(168 162 158 / var(--tw-text-opacity))}.text-stone-500{--tw-text-opacity: 1;color:rgb(120 113 108 / var(--tw-text-opacity))}.text-stone-600{--tw-text-opacity: 1;color:rgb(87 83 78 / var(--tw-text-opacity))}.text-stone-900{--tw-text-opacity: 1;color:rgb(28 25 23 / var(--tw-text-opacity))}.text-white{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity))}.underline{text-decoration-line:underline}.shadow{--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}button{cursor:pointer}.simple-button{border-width:1px;--tw-border-opacity: 1;border-color:rgb(214 211 209 / var(--tw-border-opacity));padding-left:.375rem;padding-right:.375rem;font-size:.875rem;line-height:1.25rem;--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.simple-button:hover{--tw-bg-opacity: 1;background-color:rgb(231 229 228 / var(--tw-bg-opacity));--tw-shadow: 0 4px 6px -1px rgb(0 0 0 / .1), 0 2px 4px -2px rgb(0 0 0 / .1);--tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}button[disabled]{cursor:not-allowed;opacity:.5}@media (min-width: 640px){.sm\\:pl-0{padding-left:0}.sm\\:text-4xl{font-size:2.25rem;line-height:2.5rem}}@media (min-width: 1024px){.lg\\:px-8{padding-left:2rem;padding-right:2rem}}`,Ng=me({__name:"App",setup(e){return(E,t)=>(B(),X("div",null,[Q(Ae(lT),{id:"__debugbar-shadow-root"},{default:Ie(()=>[Q(Og),Q(Ae(_T),null,{default:Ie(()=>[Ye(Re(Ae(Ig)),1)]),_:1})]),_:1})]))}});Ut.registerLanguage("sql",yi);Ut.registerLanguage("json",vi);const ag=OI();nI(Ng).use(iI).use(ag).use(PI).mount("#__debugbar");
