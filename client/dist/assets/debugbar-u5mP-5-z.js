var Wo=Object.defineProperty;var Xo=(e,E,t)=>E in e?Wo(e,E,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[E]=t;var je=(e,E,t)=>(Xo(e,typeof E!="symbol"?E+"":E,t),t);var QE=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function fT(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function CR(e){return e instanceof Map?e.clear=e.delete=e.set=function(){throw new Error("map is read-only")}:e instanceof Set&&(e.add=e.clear=e.delete=function(){throw new Error("set is read-only")}),Object.freeze(e),Object.getOwnPropertyNames(e).forEach(E=>{const t=e[E],T=typeof t;(T==="object"||T==="function")&&!Object.isFrozen(t)&&CR(t)}),e}class ls{constructor(E){E.data===void 0&&(E.data={}),this.data=E.data,this.isMatchIgnored=!1}ignoreMatch(){this.isMatchIgnored=!0}}function cR(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")}function LE(e,...E){const t=Object.create(null);for(const T in e)t[T]=e[T];return E.forEach(function(T){for(const r in T)t[r]=T[r]}),t}const $o="</span>",_s=e=>!!e.scope,Ko=(e,{prefix:E})=>{if(e.startsWith("language:"))return e.replace("language:","language-");if(e.includes(".")){const t=e.split(".");return[`${E}${t.shift()}`,...t.map((T,r)=>`${T}${"_".repeat(r+1)}`)].join(" ")}return`${E}${e}`};class Jo{constructor(E,t){this.buffer="",this.classPrefix=t.classPrefix,E.walk(this)}addText(E){this.buffer+=cR(E)}openNode(E){if(!_s(E))return;const t=Ko(E.scope,{prefix:this.classPrefix});this.span(t)}closeNode(E){_s(E)&&(this.buffer+=$o)}value(){return this.buffer}span(E){this.buffer+=`<span class="${E}">`}}const Cs=(e={})=>{const E={children:[]};return Object.assign(E,e),E};class Mr{constructor(){this.rootNode=Cs(),this.stack=[this.rootNode]}get top(){return this.stack[this.stack.length-1]}get root(){return this.rootNode}add(E){this.top.children.push(E)}openNode(E){const t=Cs({scope:E});this.add(t),this.stack.push(t)}closeNode(){if(this.stack.length>1)return this.stack.pop()}closeAllNodes(){for(;this.closeNode(););}toJSON(){return JSON.stringify(this.rootNode,null,4)}walk(E){return this.constructor._walk(E,this.rootNode)}static _walk(E,t){return typeof t=="string"?E.addText(t):t.children&&(E.openNode(t),t.children.forEach(T=>this._walk(E,T)),E.closeNode(t)),E}static _collapse(E){typeof E!="string"&&E.children&&(E.children.every(t=>typeof t=="string")?E.children=[E.children.join("")]:E.children.forEach(t=>{Mr._collapse(t)}))}}class ko extends Mr{constructor(E){super(),this.options=E}addText(E){E!==""&&this.add(E)}startScope(E){this.openNode(E)}endScope(){this.closeNode()}__addSublanguage(E,t){const T=E.root;t&&(T.scope=`language:${t}`),this.add(T)}toHTML(){return new Jo(this,this.options).value()}finalize(){return this.closeAllNodes(),!0}}function Bt(e){return e?typeof e=="string"?e:e.source:null}function LR(e){return WE("(?=",e,")")}function jo(e){return WE("(?:",e,")*")}function qo(e){return WE("(?:",e,")?")}function WE(...e){return e.map(t=>Bt(t)).join("")}function Qo(e){const E=e[e.length-1];return typeof E=="object"&&E.constructor===Object?(e.splice(e.length-1,1),E):{}}function Ur(...e){return"("+(Qo(e).capture?"":"?:")+e.map(T=>Bt(T)).join("|")+")"}function uR(e){return new RegExp(e.toString()+"|").exec("").length-1}function Zo(e,E){const t=e&&e.exec(E);return t&&t.index===0}const zo=/\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./;function hr(e,{joinWith:E}){let t=0;return e.map(T=>{t+=1;const r=t;let s=Bt(T),n="";for(;s.length>0;){const R=zo.exec(s);if(!R){n+=s;break}n+=s.substring(0,R.index),s=s.substring(R.index+R[0].length),R[0][0]==="\\"&&R[1]?n+="\\"+String(Number(R[1])+r):(n+=R[0],R[0]==="("&&t++)}return n}).map(T=>`(${T})`).join(E)}const ei=/\b\B/,pR="[a-zA-Z]\\w*",Gr="[a-zA-Z_]\\w*",fR="\\b\\d+(\\.\\d+)?",PR="(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)",DR="\\b(0b[01]+)",Ei="!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~",ti=(e={})=>{const E=/^#![ ]*\//;return e.binary&&(e.begin=WE(E,/.*\b/,e.binary,/\b.*/)),LE({scope:"meta",begin:E,end:/$/,relevance:0,"on:begin":(t,T)=>{t.index!==0&&T.ignoreMatch()}},e)},Ft={begin:"\\\\[\\s\\S]",relevance:0},Ti={scope:"string",begin:"'",end:"'",illegal:"\\n",contains:[Ft]},ri={scope:"string",begin:'"',end:'"',illegal:"\\n",contains:[Ft]},si={begin:/\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/},PT=function(e,E,t={}){const T=LE({scope:"comment",begin:e,end:E,contains:[]},t);T.contains.push({scope:"doctag",begin:"[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)",end:/(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,excludeBegin:!0,relevance:0});const r=Ur("I","a","is","so","us","to","at","if","in","it","on",/[A-Za-z]+['](d|ve|re|ll|t|s|n)/,/[A-Za-z]+[-][a-z]+/,/[A-Za-z][a-z]{2,}/);return T.contains.push({begin:WE(/[ ]+/,"(",r,/[.]?[:]?([.][ ]|[ ])/,"){3}")}),T},ni=PT("//","$"),Ri=PT("/\\*","\\*/"),Ai=PT("#","$"),oi={scope:"number",begin:fR,relevance:0},ii={scope:"number",begin:PR,relevance:0},Si={scope:"number",begin:DR,relevance:0},Oi={scope:"regexp",begin:/\/(?=[^/\n]*\/)/,end:/\/[gimuy]*/,contains:[Ft,{begin:/\[/,end:/\]/,relevance:0,contains:[Ft]}]},Ii={scope:"title",begin:pR,relevance:0},ai={scope:"title",begin:Gr,relevance:0},Ni={begin:"\\.\\s*"+Gr,relevance:0},li=function(e){return Object.assign(e,{"on:begin":(E,t)=>{t.data._beginMatch=E[1]},"on:end":(E,t)=>{t.data._beginMatch!==E[1]&&t.ignoreMatch()}})};var qt=Object.freeze({__proto__:null,APOS_STRING_MODE:Ti,BACKSLASH_ESCAPE:Ft,BINARY_NUMBER_MODE:Si,BINARY_NUMBER_RE:DR,COMMENT:PT,C_BLOCK_COMMENT_MODE:Ri,C_LINE_COMMENT_MODE:ni,C_NUMBER_MODE:ii,C_NUMBER_RE:PR,END_SAME_AS_BEGIN:li,HASH_COMMENT_MODE:Ai,IDENT_RE:pR,MATCH_NOTHING_RE:ei,METHOD_GUARD:Ni,NUMBER_MODE:oi,NUMBER_RE:fR,PHRASAL_WORDS_MODE:si,QUOTE_STRING_MODE:ri,REGEXP_MODE:Oi,RE_STARTERS_RE:Ei,SHEBANG:ti,TITLE_MODE:Ii,UNDERSCORE_IDENT_RE:Gr,UNDERSCORE_TITLE_MODE:ai});function _i(e,E){e.input[e.index-1]==="."&&E.ignoreMatch()}function Ci(e,E){e.className!==void 0&&(e.scope=e.className,delete e.className)}function ci(e,E){E&&e.beginKeywords&&(e.begin="\\b("+e.beginKeywords.split(" ").join("|")+")(?!\\.)(?=\\b|\\s)",e.__beforeBegin=_i,e.keywords=e.keywords||e.beginKeywords,delete e.beginKeywords,e.relevance===void 0&&(e.relevance=0))}function Li(e,E){Array.isArray(e.illegal)&&(e.illegal=Ur(...e.illegal))}function ui(e,E){if(e.match){if(e.begin||e.end)throw new Error("begin & end are not supported with match");e.begin=e.match,delete e.match}}function pi(e,E){e.relevance===void 0&&(e.relevance=1)}const fi=(e,E)=>{if(!e.beforeMatch)return;if(e.starts)throw new Error("beforeMatch cannot be used with starts");const t=Object.assign({},e);Object.keys(e).forEach(T=>{delete e[T]}),e.keywords=t.keywords,e.begin=WE(t.beforeMatch,LR(t.begin)),e.starts={relevance:0,contains:[Object.assign(t,{endsParent:!0})]},e.relevance=0,delete t.beforeMatch},Pi=["of","and","for","in","not","or","if","then","parent","list","value"],Di="keyword";function dR(e,E,t=Di){const T=Object.create(null);return typeof e=="string"?r(t,e.split(" ")):Array.isArray(e)?r(t,e):Object.keys(e).forEach(function(s){Object.assign(T,dR(e[s],E,s))}),T;function r(s,n){E&&(n=n.map(R=>R.toLowerCase())),n.forEach(function(R){const o=R.split("|");T[o[0]]=[s,di(o[0],o[1])]})}}function di(e,E){return E?Number(E):Mi(e)?0:1}function Mi(e){return Pi.includes(e.toLowerCase())}const cs={},vE=e=>{console.error(e)},Ls=(e,...E)=>{console.log(`WARN: ${e}`,...E)},JE=(e,E)=>{cs[`${e}/${E}`]||(console.log(`Deprecated as of ${e}. ${E}`),cs[`${e}/${E}`]=!0)},iT=new Error;function MR(e,E,{key:t}){let T=0;const r=e[t],s={},n={};for(let R=1;R<=E.length;R++)n[R+T]=r[R],s[R+T]=!0,T+=uR(E[R-1]);e[t]=n,e[t]._emit=s,e[t]._multi=!0}function Ui(e){if(Array.isArray(e.begin)){if(e.skip||e.excludeBegin||e.returnBegin)throw vE("skip, excludeBegin, returnBegin not compatible with beginScope: {}"),iT;if(typeof e.beginScope!="object"||e.beginScope===null)throw vE("beginScope must be object"),iT;MR(e,e.begin,{key:"beginScope"}),e.begin=hr(e.begin,{joinWith:""})}}function hi(e){if(Array.isArray(e.end)){if(e.skip||e.excludeEnd||e.returnEnd)throw vE("skip, excludeEnd, returnEnd not compatible with endScope: {}"),iT;if(typeof e.endScope!="object"||e.endScope===null)throw vE("endScope must be object"),iT;MR(e,e.end,{key:"endScope"}),e.end=hr(e.end,{joinWith:""})}}function Gi(e){e.scope&&typeof e.scope=="object"&&e.scope!==null&&(e.beginScope=e.scope,delete e.scope)}function gi(e){Gi(e),typeof e.beginScope=="string"&&(e.beginScope={_wrap:e.beginScope}),typeof e.endScope=="string"&&(e.endScope={_wrap:e.endScope}),Ui(e),hi(e)}function mi(e){function E(n,R){return new RegExp(Bt(n),"m"+(e.case_insensitive?"i":"")+(e.unicodeRegex?"u":"")+(R?"g":""))}class t{constructor(){this.matchIndexes={},this.regexes=[],this.matchAt=1,this.position=0}addRule(R,o){o.position=this.position++,this.matchIndexes[this.matchAt]=o,this.regexes.push([o,R]),this.matchAt+=uR(R)+1}compile(){this.regexes.length===0&&(this.exec=()=>null);const R=this.regexes.map(o=>o[1]);this.matcherRe=E(hr(R,{joinWith:"|"}),!0),this.lastIndex=0}exec(R){this.matcherRe.lastIndex=this.lastIndex;const o=this.matcherRe.exec(R);if(!o)return null;const A=o.findIndex((O,a)=>a>0&&O!==void 0),i=this.matchIndexes[A];return o.splice(0,A),Object.assign(o,i)}}class T{constructor(){this.rules=[],this.multiRegexes=[],this.count=0,this.lastIndex=0,this.regexIndex=0}getMatcher(R){if(this.multiRegexes[R])return this.multiRegexes[R];const o=new t;return this.rules.slice(R).forEach(([A,i])=>o.addRule(A,i)),o.compile(),this.multiRegexes[R]=o,o}resumingScanAtSamePosition(){return this.regexIndex!==0}considerAll(){this.regexIndex=0}addRule(R,o){this.rules.push([R,o]),o.type==="begin"&&this.count++}exec(R){const o=this.getMatcher(this.regexIndex);o.lastIndex=this.lastIndex;let A=o.exec(R);if(this.resumingScanAtSamePosition()&&!(A&&A.index===this.lastIndex)){const i=this.getMatcher(0);i.lastIndex=this.lastIndex+1,A=i.exec(R)}return A&&(this.regexIndex+=A.position+1,this.regexIndex===this.count&&this.considerAll()),A}}function r(n){const R=new T;return n.contains.forEach(o=>R.addRule(o.begin,{rule:o,type:"begin"})),n.terminatorEnd&&R.addRule(n.terminatorEnd,{type:"end"}),n.illegal&&R.addRule(n.illegal,{type:"illegal"}),R}function s(n,R){const o=n;if(n.isCompiled)return o;[Ci,ui,gi,fi].forEach(i=>i(n,R)),e.compilerExtensions.forEach(i=>i(n,R)),n.__beforeBegin=null,[ci,Li,pi].forEach(i=>i(n,R)),n.isCompiled=!0;let A=null;return typeof n.keywords=="object"&&n.keywords.$pattern&&(n.keywords=Object.assign({},n.keywords),A=n.keywords.$pattern,delete n.keywords.$pattern),A=A||/\w+/,n.keywords&&(n.keywords=dR(n.keywords,e.case_insensitive)),o.keywordPatternRe=E(A,!0),R&&(n.begin||(n.begin=/\B|\b/),o.beginRe=E(o.begin),!n.end&&!n.endsWithParent&&(n.end=/\B|\b/),n.end&&(o.endRe=E(o.end)),o.terminatorEnd=Bt(o.end)||"",n.endsWithParent&&R.terminatorEnd&&(o.terminatorEnd+=(n.end?"|":"")+R.terminatorEnd)),n.illegal&&(o.illegalRe=E(n.illegal)),n.contains||(n.contains=[]),n.contains=[].concat(...n.contains.map(function(i){return Hi(i==="self"?n:i)})),n.contains.forEach(function(i){s(i,o)}),n.starts&&s(n.starts,R),o.matcher=r(o),o}if(e.compilerExtensions||(e.compilerExtensions=[]),e.contains&&e.contains.includes("self"))throw new Error("ERR: contains `self` is not supported at the top-level of a language.  See documentation.");return e.classNameAliases=LE(e.classNameAliases||{}),s(e)}function UR(e){return e?e.endsWithParent||UR(e.starts):!1}function Hi(e){return e.variants&&!e.cachedVariants&&(e.cachedVariants=e.variants.map(function(E){return LE(e,{variants:null},E)})),e.cachedVariants?e.cachedVariants:UR(e)?LE(e,{starts:e.starts?LE(e.starts):null}):Object.isFrozen(e)?LE(e):e}var yi="11.9.0";class bi extends Error{constructor(E,t){super(E),this.name="HTMLInjectionError",this.html=t}}const XT=cR,us=LE,ps=Symbol("nomatch"),Bi=7,hR=function(e){const E=Object.create(null),t=Object.create(null),T=[];let r=!0;const s="Could not find the language '{}', did you forget to load/include a language module?",n={disableAutodetect:!0,name:"Plain text",contains:[]};let R={ignoreUnescapedHTML:!1,throwUnescapedHTML:!1,noHighlightRe:/^(no-?highlight)$/i,languageDetectRe:/\blang(?:uage)?-([\w-]+)\b/i,classPrefix:"hljs-",cssSelector:"pre code",languages:null,__emitter:ko};function o(L){return R.noHighlightRe.test(L)}function A(L){let G=L.className+" ";G+=L.parentNode?L.parentNode.className:"";const Ee=R.languageDetectRe.exec(G);if(Ee){const Ie=j(Ee[1]);return Ie||(Ls(s.replace("{}",Ee[1])),Ls("Falling back to no-highlight mode for this block.",L)),Ie?Ee[1]:"no-highlight"}return G.split(/\s+/).find(Ie=>o(Ie)||j(Ie))}function i(L,G,Ee){let Ie="",ae="";typeof G=="object"?(Ie=L,Ee=G.ignoreIllegals,ae=G.language):(JE("10.7.0","highlight(lang, code, ...args) has been deprecated."),JE("10.7.0",`Please use highlight(code, options) instead.
https://github.com/highlightjs/highlight.js/issues/2277`),ae=L,Ie=G),Ee===void 0&&(Ee=!0);const fe={code:Ie,language:ae};le("before:highlight",fe);const ke=fe.result?fe.result:O(fe.language,fe.code,Ee);return ke.code=fe.code,le("after:highlight",ke),ke}function O(L,G,Ee,Ie){const ae=Object.create(null);function fe(M,h){return M.keywords[h]}function ke(){if(!l.keywords){p.addText(y);return}let M=0;l.keywordPatternRe.lastIndex=0;let h=l.keywordPatternRe.exec(y),W="";for(;h;){W+=y.substring(M,h.index);const te=f.case_insensitive?h[0].toLowerCase():h[0],pe=fe(l,te);if(pe){const[Ke,gE]=pe;if(p.addText(W),W="",ae[te]=(ae[te]||0)+1,ae[te]<=Bi&&(Y+=gE),Ke.startsWith("_"))W+=h[0];else{const jt=f.classNameAliases[Ke]||Ke;De(h[0],jt)}}else W+=h[0];M=l.keywordPatternRe.lastIndex,h=l.keywordPatternRe.exec(y)}W+=y.substring(M),p.addText(W)}function KE(){if(y==="")return;let M=null;if(typeof l.subLanguage=="string"){if(!E[l.subLanguage]){p.addText(y);return}M=O(l.subLanguage,y,!0,m[l.subLanguage]),m[l.subLanguage]=M._top}else M=P(y,l.subLanguage.length?l.subLanguage:null);l.relevance>0&&(Y+=M.relevance),p.__addSublanguage(M._emitter,M.language)}function ve(){l.subLanguage!=null?KE():ke(),y=""}function De(M,h){M!==""&&(p.startScope(h),p.addText(M),p.endScope())}function GE(M,h){let W=1;const te=h.length-1;for(;W<=te;){if(!M._emit[W]){W++;continue}const pe=f.classNameAliases[M[W]]||M[W],Ke=h[W];pe?De(Ke,pe):(y=Ke,ke(),y=""),W++}}function ct(M,h){return M.scope&&typeof M.scope=="string"&&p.openNode(f.classNameAliases[M.scope]||M.scope),M.beginScope&&(M.beginScope._wrap?(De(y,f.classNameAliases[M.beginScope._wrap]||M.beginScope._wrap),y=""):M.beginScope._multi&&(GE(M.beginScope,h),y="")),l=Object.create(M,{parent:{value:l}}),l}function iE(M,h,W){let te=Zo(M.endRe,W);if(te){if(M["on:end"]){const pe=new ls(M);M["on:end"](h,pe),pe.isMatchIgnored&&(te=!1)}if(te){for(;M.endsParent&&M.parent;)M=M.parent;return M}}if(M.endsWithParent)return iE(M.parent,h,W)}function Lt(M){return l.matcher.regexIndex===0?(y+=M[0],1):(se=!0,0)}function ut(M){const h=M[0],W=M.rule,te=new ls(W),pe=[W.__beforeBegin,W["on:begin"]];for(const Ke of pe)if(Ke&&(Ke(M,te),te.isMatchIgnored))return Lt(h);return W.skip?y+=h:(W.excludeBegin&&(y+=h),ve(),!W.returnBegin&&!W.excludeBegin&&(y=h)),ct(W,M),W.returnBegin?0:h.length}function S(M){const h=M[0],W=G.substring(M.index),te=iE(l,M,W);if(!te)return ps;const pe=l;l.endScope&&l.endScope._wrap?(ve(),De(h,l.endScope._wrap)):l.endScope&&l.endScope._multi?(ve(),GE(l.endScope,M)):pe.skip?y+=h:(pe.returnEnd||pe.excludeEnd||(y+=h),ve(),pe.excludeEnd&&(y=h));do l.scope&&p.closeNode(),!l.skip&&!l.subLanguage&&(Y+=l.relevance),l=l.parent;while(l!==te.parent);return te.starts&&ct(te.starts,M),pe.returnEnd?0:h.length}function N(){const M=[];for(let h=l;h!==f;h=h.parent)h.scope&&M.unshift(h.scope);M.forEach(h=>p.openNode(h))}let C={};function D(M,h){const W=h&&h[0];if(y+=M,W==null)return ve(),0;if(C.type==="begin"&&h.type==="end"&&C.index===h.index&&W===""){if(y+=G.slice(h.index,h.index+1),!r){const te=new Error(`0 width match regex (${L})`);throw te.languageName=L,te.badRule=C.rule,te}return 1}if(C=h,h.type==="begin")return ut(h);if(h.type==="illegal"&&!Ee){const te=new Error('Illegal lexeme "'+W+'" for mode "'+(l.scope||"<unnamed>")+'"');throw te.mode=l,te}else if(h.type==="end"){const te=S(h);if(te!==ps)return te}if(h.type==="illegal"&&W==="")return 1;if(Q>1e5&&Q>h.index*3)throw new Error("potential infinite loop, way more iterations than matches");return y+=W,W.length}const f=j(L);if(!f)throw vE(s.replace("{}",L)),new Error('Unknown language: "'+L+'"');const g=mi(f);let B="",l=Ie||g;const m={},p=new R.__emitter(R);N();let y="",Y=0,w=0,Q=0,se=!1;try{if(f.__emitTokens)f.__emitTokens(G,p);else{for(l.matcher.considerAll();;){Q++,se?se=!1:l.matcher.considerAll(),l.matcher.lastIndex=w;const M=l.matcher.exec(G);if(!M)break;const h=G.substring(w,M.index),W=D(h,M);w=M.index+W}D(G.substring(w))}return p.finalize(),B=p.toHTML(),{language:L,value:B,relevance:Y,illegal:!1,_emitter:p,_top:l}}catch(M){if(M.message&&M.message.includes("Illegal"))return{language:L,value:XT(G),illegal:!0,relevance:0,_illegalBy:{message:M.message,index:w,context:G.slice(w-100,w+100),mode:M.mode,resultSoFar:B},_emitter:p};if(r)return{language:L,value:XT(G),illegal:!1,relevance:0,errorRaised:M,_emitter:p,_top:l};throw M}}function a(L){const G={value:XT(L),illegal:!1,relevance:0,_top:n,_emitter:new R.__emitter(R)};return G._emitter.addText(L),G}function P(L,G){G=G||R.languages||Object.keys(E);const Ee=a(L),Ie=G.filter(j).filter(u).map(ve=>O(ve,L,!1));Ie.unshift(Ee);const ae=Ie.sort((ve,De)=>{if(ve.relevance!==De.relevance)return De.relevance-ve.relevance;if(ve.language&&De.language){if(j(ve.language).supersetOf===De.language)return 1;if(j(De.language).supersetOf===ve.language)return-1}return 0}),[fe,ke]=ae,KE=fe;return KE.secondBest=ke,KE}function U(L,G,Ee){const Ie=G&&t[G]||Ee;L.classList.add("hljs"),L.classList.add(`language-${Ie}`)}function b(L){let G=null;const Ee=A(L);if(o(Ee))return;if(le("before:highlightElement",{el:L,language:Ee}),L.dataset.highlighted){console.log("Element previously highlighted. To highlight again, first unset `dataset.highlighted`.",L);return}if(L.children.length>0&&(R.ignoreUnescapedHTML||(console.warn("One of your code blocks includes unescaped HTML. This is a potentially serious security risk."),console.warn("https://github.com/highlightjs/highlight.js/wiki/security"),console.warn("The element with unescaped HTML:"),console.warn(L)),R.throwUnescapedHTML))throw new bi("One of your code blocks includes unescaped HTML.",L.innerHTML);G=L;const Ie=G.textContent,ae=Ee?i(Ie,{language:Ee,ignoreIllegals:!0}):P(Ie);L.innerHTML=ae.value,L.dataset.highlighted="yes",U(L,Ee,ae.language),L.result={language:ae.language,re:ae.relevance,relevance:ae.relevance},ae.secondBest&&(L.secondBest={language:ae.secondBest.language,relevance:ae.secondBest.relevance}),le("after:highlightElement",{el:L,result:ae,text:Ie})}function x(L){R=us(R,L)}const $=()=>{v(),JE("10.6.0","initHighlighting() deprecated.  Use highlightAll() now.")};function k(){v(),JE("10.6.0","initHighlightingOnLoad() deprecated.  Use highlightAll() now.")}let V=!1;function v(){if(document.readyState==="loading"){V=!0;return}document.querySelectorAll(R.cssSelector).forEach(b)}function re(){V&&v()}typeof window<"u"&&window.addEventListener&&window.addEventListener("DOMContentLoaded",re,!1);function ue(L,G){let Ee=null;try{Ee=G(e)}catch(Ie){if(vE("Language definition for '{}' could not be registered.".replace("{}",L)),r)vE(Ie);else throw Ie;Ee=n}Ee.name||(Ee.name=L),E[L]=Ee,Ee.rawDefinition=G.bind(null,e),Ee.aliases&&_(Ee.aliases,{languageName:L})}function Ae(L){delete E[L];for(const G of Object.keys(t))t[G]===L&&delete t[G]}function ee(){return Object.keys(E)}function j(L){return L=(L||"").toLowerCase(),E[L]||E[t[L]]}function _(L,{languageName:G}){typeof L=="string"&&(L=[L]),L.forEach(Ee=>{t[Ee.toLowerCase()]=G})}function u(L){const G=j(L);return G&&!G.disableAutodetect}function c(L){L["before:highlightBlock"]&&!L["before:highlightElement"]&&(L["before:highlightElement"]=G=>{L["before:highlightBlock"](Object.assign({block:G.el},G))}),L["after:highlightBlock"]&&!L["after:highlightElement"]&&(L["after:highlightElement"]=G=>{L["after:highlightBlock"](Object.assign({block:G.el},G))})}function F(L){c(L),T.push(L)}function J(L){const G=T.indexOf(L);G!==-1&&T.splice(G,1)}function le(L,G){const Ee=L;T.forEach(function(Ie){Ie[Ee]&&Ie[Ee](G)})}function Z(L){return JE("10.7.0","highlightBlock will be removed entirely in v12.0"),JE("10.7.0","Please use highlightElement now."),b(L)}Object.assign(e,{highlight:i,highlightAuto:P,highlightAll:v,highlightElement:b,highlightBlock:Z,configure:x,initHighlighting:$,initHighlightingOnLoad:k,registerLanguage:ue,unregisterLanguage:Ae,listLanguages:ee,getLanguage:j,registerAliases:_,autoDetection:u,inherit:us,addPlugin:F,removePlugin:J}),e.debugMode=function(){r=!1},e.safeMode=function(){r=!0},e.versionString=yi,e.regex={concat:WE,lookahead:LR,either:Ur,optional:qo,anyNumberOfTimes:jo};for(const L in qt)typeof qt[L]=="object"&&CR(qt[L]);return Object.assign(e,qt),e},Tt=hR({});Tt.newInstance=()=>hR({});var Fi=Tt;Tt.HighlightJS=Tt;Tt.default=Tt;const Ut=fT(Fi);function vi(e){const E=e.regex,t=e.COMMENT("--","$"),T={className:"string",variants:[{begin:/'/,end:/'/,contains:[{begin:/''/}]}]},r={begin:/"/,end:/"/,contains:[{begin:/""/}]},s=["true","false","unknown"],n=["double precision","large object","with timezone","without timezone"],R=["bigint","binary","blob","boolean","char","character","clob","date","dec","decfloat","decimal","float","int","integer","interval","nchar","nclob","national","numeric","real","row","smallint","time","timestamp","varchar","varying","varbinary"],o=["add","asc","collation","desc","final","first","last","view"],A=["abs","acos","all","allocate","alter","and","any","are","array","array_agg","array_max_cardinality","as","asensitive","asin","asymmetric","at","atan","atomic","authorization","avg","begin","begin_frame","begin_partition","between","bigint","binary","blob","boolean","both","by","call","called","cardinality","cascaded","case","cast","ceil","ceiling","char","char_length","character","character_length","check","classifier","clob","close","coalesce","collate","collect","column","commit","condition","connect","constraint","contains","convert","copy","corr","corresponding","cos","cosh","count","covar_pop","covar_samp","create","cross","cube","cume_dist","current","current_catalog","current_date","current_default_transform_group","current_path","current_role","current_row","current_schema","current_time","current_timestamp","current_path","current_role","current_transform_group_for_type","current_user","cursor","cycle","date","day","deallocate","dec","decimal","decfloat","declare","default","define","delete","dense_rank","deref","describe","deterministic","disconnect","distinct","double","drop","dynamic","each","element","else","empty","end","end_frame","end_partition","end-exec","equals","escape","every","except","exec","execute","exists","exp","external","extract","false","fetch","filter","first_value","float","floor","for","foreign","frame_row","free","from","full","function","fusion","get","global","grant","group","grouping","groups","having","hold","hour","identity","in","indicator","initial","inner","inout","insensitive","insert","int","integer","intersect","intersection","interval","into","is","join","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","language","large","last_value","lateral","lead","leading","left","like","like_regex","listagg","ln","local","localtime","localtimestamp","log","log10","lower","match","match_number","match_recognize","matches","max","member","merge","method","min","minute","mod","modifies","module","month","multiset","national","natural","nchar","nclob","new","no","none","normalize","not","nth_value","ntile","null","nullif","numeric","octet_length","occurrences_regex","of","offset","old","omit","on","one","only","open","or","order","out","outer","over","overlaps","overlay","parameter","partition","pattern","per","percent","percent_rank","percentile_cont","percentile_disc","period","portion","position","position_regex","power","precedes","precision","prepare","primary","procedure","ptf","range","rank","reads","real","recursive","ref","references","referencing","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","release","result","return","returns","revoke","right","rollback","rollup","row","row_number","rows","running","savepoint","scope","scroll","search","second","seek","select","sensitive","session_user","set","show","similar","sin","sinh","skip","smallint","some","specific","specifictype","sql","sqlexception","sqlstate","sqlwarning","sqrt","start","static","stddev_pop","stddev_samp","submultiset","subset","substring","substring_regex","succeeds","sum","symmetric","system","system_time","system_user","table","tablesample","tan","tanh","then","time","timestamp","timezone_hour","timezone_minute","to","trailing","translate","translate_regex","translation","treat","trigger","trim","trim_array","true","truncate","uescape","union","unique","unknown","unnest","update","upper","user","using","value","values","value_of","var_pop","var_samp","varbinary","varchar","varying","versioning","when","whenever","where","width_bucket","window","with","within","without","year"],i=["abs","acos","array_agg","asin","atan","avg","cast","ceil","ceiling","coalesce","corr","cos","cosh","count","covar_pop","covar_samp","cume_dist","dense_rank","deref","element","exp","extract","first_value","floor","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","last_value","lead","listagg","ln","log","log10","lower","max","min","mod","nth_value","ntile","nullif","percent_rank","percentile_cont","percentile_disc","position","position_regex","power","rank","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","row_number","sin","sinh","sqrt","stddev_pop","stddev_samp","substring","substring_regex","sum","tan","tanh","translate","translate_regex","treat","trim","trim_array","unnest","upper","value_of","var_pop","var_samp","width_bucket"],O=["current_catalog","current_date","current_default_transform_group","current_path","current_role","current_schema","current_transform_group_for_type","current_user","session_user","system_time","system_user","current_time","localtime","current_timestamp","localtimestamp"],a=["create table","insert into","primary key","foreign key","not null","alter table","add constraint","grouping sets","on overflow","character set","respect nulls","ignore nulls","nulls first","nulls last","depth first","breadth first"],P=i,U=[...A,...o].filter(V=>!i.includes(V)),b={className:"variable",begin:/@[a-z0-9][a-z0-9_]*/},x={className:"operator",begin:/[-+*/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,relevance:0},$={begin:E.concat(/\b/,E.either(...P),/\s*\(/),relevance:0,keywords:{built_in:P}};function k(V,{exceptions:v,when:re}={}){const ue=re;return v=v||[],V.map(Ae=>Ae.match(/\|\d+$/)||v.includes(Ae)?Ae:ue(Ae)?`${Ae}|0`:Ae)}return{name:"SQL",case_insensitive:!0,illegal:/[{}]|<\//,keywords:{$pattern:/\b[\w\.]+/,keyword:k(U,{when:V=>V.length<3}),literal:s,type:R,built_in:O},contains:[{begin:E.either(...a),relevance:0,keywords:{$pattern:/[\w\.]+/,keyword:U.concat(a),literal:s,type:R}},{className:"type",begin:E.either(...n)},$,b,T,r,e.C_NUMBER_MODE,e.C_BLOCK_COMMENT_MODE,t,x]}}function Yi(e){const E={className:"attr",begin:/"(\\.|[^\\"\r\n])*"(?=\s*:)/,relevance:1.01},t={match:/[{}[\],:]/,className:"punctuation",relevance:0},T=["true","false","null"],r={scope:"literal",beginKeywords:T.join(" ")};return{name:"JSON",keywords:{literal:T},contains:[E,t,e.QUOTE_STRING_MODE,r,e.C_NUMBER_MODE,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE],illegal:"\\S"}}function gr(e,E){const t=Object.create(null),T=e.split(",");for(let r=0;r<T.length;r++)t[T[r]]=!0;return E?r=>!!t[r.toLowerCase()]:r=>!!t[r]}const Ce={},zE=[],RE=()=>{},Vi=()=>!1,DT=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&(e.charCodeAt(2)>122||e.charCodeAt(2)<97),mr=e=>e.startsWith("onUpdate:"),He=Object.assign,Hr=(e,E)=>{const t=e.indexOf(E);t>-1&&e.splice(t,1)},xi=Object.prototype.hasOwnProperty,Se=(e,E)=>xi.call(e,E),z=Array.isArray,et=e=>dT(e)==="[object Map]",GR=e=>dT(e)==="[object Set]",Te=e=>typeof e=="function",de=e=>typeof e=="string",At=e=>typeof e=="symbol",Le=e=>e!==null&&typeof e=="object",gR=e=>(Le(e)||Te(e))&&Te(e.then)&&Te(e.catch),mR=Object.prototype.toString,dT=e=>mR.call(e),wi=e=>dT(e).slice(8,-1),HR=e=>dT(e)==="[object Object]",yr=e=>de(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,rT=gr(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),MT=e=>{const E=Object.create(null);return t=>E[t]||(E[t]=e(t))},Wi=/-(\w)/g,AE=MT(e=>e.replace(Wi,(E,t)=>t?t.toUpperCase():"")),Xi=/\B([A-Z])/g,ot=MT(e=>e.replace(Xi,"-$1").toLowerCase()),UT=MT(e=>e.charAt(0).toUpperCase()+e.slice(1)),$T=MT(e=>e?`on${UT(e)}`:""),xE=(e,E)=>!Object.is(e,E),KT=(e,E)=>{for(let t=0;t<e.length;t++)e[t](E)},ST=(e,E,t)=>{Object.defineProperty(e,E,{configurable:!0,enumerable:!1,value:t})},$i=e=>{const E=parseFloat(e);return isNaN(E)?e:E};let fs;const Tr=()=>fs||(fs=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function hT(e){if(z(e)){const E={};for(let t=0;t<e.length;t++){const T=e[t],r=de(T)?ji(T):hT(T);if(r)for(const s in r)E[s]=r[s]}return E}else if(de(e)||Le(e))return e}const Ki=/;(?![^(]*\))/g,Ji=/:([^]+)/,ki=/\/\*[^]*?\*\//g;function ji(e){const E={};return e.replace(ki,"").split(Ki).forEach(t=>{if(t){const T=t.split(Ji);T.length>1&&(E[T[0].trim()]=T[1].trim())}}),E}function $e(e){let E="";if(de(e))E=e;else if(z(e))for(let t=0;t<e.length;t++){const T=$e(e[t]);T&&(E+=T+" ")}else if(Le(e))for(const t in e)e[t]&&(E+=t+" ");return E.trim()}const qi="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Qi=gr(qi);function yR(e){return!!e||e===""}const ne=e=>de(e)?e:e==null?"":z(e)||Le(e)&&(e.toString===mR||!Te(e.toString))?JSON.stringify(e,bR,2):String(e),bR=(e,E)=>E&&E.__v_isRef?bR(e,E.value):et(E)?{[`Map(${E.size})`]:[...E.entries()].reduce((t,[T,r],s)=>(t[JT(T,s)+" =>"]=r,t),{})}:GR(E)?{[`Set(${E.size})`]:[...E.values()].map(t=>JT(t))}:At(E)?JT(E):Le(E)&&!z(E)&&!HR(E)?String(E):E,JT=(e,E="")=>{var t;return At(e)?`Symbol(${(t=e.description)!=null?t:E})`:e};let Xe;class BR{constructor(E=!1){this.detached=E,this._active=!0,this.effects=[],this.cleanups=[],this.parent=Xe,!E&&Xe&&(this.index=(Xe.scopes||(Xe.scopes=[])).push(this)-1)}get active(){return this._active}run(E){if(this._active){const t=Xe;try{return Xe=this,E()}finally{Xe=t}}}on(){Xe=this}off(){Xe=this.parent}stop(E){if(this._active){let t,T;for(t=0,T=this.effects.length;t<T;t++)this.effects[t].stop();for(t=0,T=this.cleanups.length;t<T;t++)this.cleanups[t]();if(this.scopes)for(t=0,T=this.scopes.length;t<T;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!E){const r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0,this._active=!1}}}function FR(e){return new BR(e)}function Zi(e,E=Xe){E&&E.active&&E.effects.push(e)}function vR(){return Xe}function zi(e){Xe&&Xe.cleanups.push(e)}const br=e=>{const E=new Set(e);return E.w=0,E.n=0,E},YR=e=>(e.w&DE)>0,VR=e=>(e.n&DE)>0,eS=({deps:e})=>{if(e.length)for(let E=0;E<e.length;E++)e[E].w|=DE},ES=e=>{const{deps:E}=e;if(E.length){let t=0;for(let T=0;T<E.length;T++){const r=E[T];YR(r)&&!VR(r)?r.delete(e):E[t++]=r,r.w&=~DE,r.n&=~DE}E.length=t}},OT=new WeakMap;let dt=0,DE=1;const rr=30;let Qe;const YE=Symbol(""),sr=Symbol("");class Br{constructor(E,t=null,T){this.fn=E,this.scheduler=t,this.active=!0,this.deps=[],this.parent=void 0,Zi(this,T)}run(){if(!this.active)return this.fn();let E=Qe,t=pE;for(;E;){if(E===this)return;E=E.parent}try{return this.parent=Qe,Qe=this,pE=!0,DE=1<<++dt,dt<=rr?eS(this):Ps(this),this.fn()}finally{dt<=rr&&ES(this),DE=1<<--dt,Qe=this.parent,pE=t,this.parent=void 0,this.deferStop&&this.stop()}}stop(){Qe===this?this.deferStop=!0:this.active&&(Ps(this),this.onStop&&this.onStop(),this.active=!1)}}function Ps(e){const{deps:E}=e;if(E.length){for(let t=0;t<E.length;t++)E[t].delete(e);E.length=0}}let pE=!0;const xR=[];function it(){xR.push(pE),pE=!1}function St(){const e=xR.pop();pE=e===void 0?!0:e}function we(e,E,t){if(pE&&Qe){let T=OT.get(e);T||OT.set(e,T=new Map);let r=T.get(t);r||T.set(t,r=br()),wR(r)}}function wR(e,E){let t=!1;dt<=rr?VR(e)||(e.n|=DE,t=!YR(e)):t=!e.has(Qe),t&&(e.add(Qe),Qe.deps.push(e))}function OE(e,E,t,T,r,s){const n=OT.get(e);if(!n)return;let R=[];if(E==="clear")R=[...n.values()];else if(t==="length"&&z(e)){const o=Number(T);n.forEach((A,i)=>{(i==="length"||!At(i)&&i>=o)&&R.push(A)})}else switch(t!==void 0&&R.push(n.get(t)),E){case"add":z(e)?yr(t)&&R.push(n.get("length")):(R.push(n.get(YE)),et(e)&&R.push(n.get(sr)));break;case"delete":z(e)||(R.push(n.get(YE)),et(e)&&R.push(n.get(sr)));break;case"set":et(e)&&R.push(n.get(YE));break}if(R.length===1)R[0]&&nr(R[0]);else{const o=[];for(const A of R)A&&o.push(...A);nr(br(o))}}function nr(e,E){const t=z(e)?e:[...e];for(const T of t)T.computed&&Ds(T);for(const T of t)T.computed||Ds(T)}function Ds(e,E){(e!==Qe||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}function tS(e,E){var t;return(t=OT.get(e))==null?void 0:t.get(E)}const TS=gr("__proto__,__v_isRef,__isVue"),WR=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(At)),ds=rS();function rS(){const e={};return["includes","indexOf","lastIndexOf"].forEach(E=>{e[E]=function(...t){const T=Oe(this);for(let s=0,n=this.length;s<n;s++)we(T,"get",s+"");const r=T[E](...t);return r===-1||r===!1?T[E](...t.map(Oe)):r}}),["push","pop","shift","unshift","splice"].forEach(E=>{e[E]=function(...t){it();const T=Oe(this)[E].apply(this,t);return St(),T}}),e}function sS(e){const E=Oe(this);return we(E,"has",e),E.hasOwnProperty(e)}class XR{constructor(E=!1,t=!1){this._isReadonly=E,this._shallow=t}get(E,t,T){const r=this._isReadonly,s=this._shallow;if(t==="__v_isReactive")return!r;if(t==="__v_isReadonly")return r;if(t==="__v_isShallow")return s;if(t==="__v_raw")return T===(r?s?CS:kR:s?JR:KR).get(E)||Object.getPrototypeOf(E)===Object.getPrototypeOf(T)?E:void 0;const n=z(E);if(!r){if(n&&Se(ds,t))return Reflect.get(ds,t,T);if(t==="hasOwnProperty")return sS}const R=Reflect.get(E,t,T);return(At(t)?WR.has(t):TS(t))||(r||we(E,"get",t),s)?R:Me(R)?n&&yr(t)?R:R.value:Le(R)?r?jR(R):ME(R):R}}class $R extends XR{constructor(E=!1){super(!1,E)}set(E,t,T,r){let s=E[t];if(!this._shallow){const o=rt(s);if(!IT(T)&&!rt(T)&&(s=Oe(s),T=Oe(T)),!z(E)&&Me(s)&&!Me(T))return o?!1:(s.value=T,!0)}const n=z(E)&&yr(t)?Number(t)<E.length:Se(E,t),R=Reflect.set(E,t,T,r);return E===Oe(r)&&(n?xE(T,s)&&OE(E,"set",t,T):OE(E,"add",t,T)),R}deleteProperty(E,t){const T=Se(E,t);E[t];const r=Reflect.deleteProperty(E,t);return r&&T&&OE(E,"delete",t,void 0),r}has(E,t){const T=Reflect.has(E,t);return(!At(t)||!WR.has(t))&&we(E,"has",t),T}ownKeys(E){return we(E,"iterate",z(E)?"length":YE),Reflect.ownKeys(E)}}class nS extends XR{constructor(E=!1){super(!0,E)}set(E,t){return!0}deleteProperty(E,t){return!0}}const RS=new $R,AS=new nS,oS=new $R(!0),Fr=e=>e,GT=e=>Reflect.getPrototypeOf(e);function Qt(e,E,t=!1,T=!1){e=e.__v_raw;const r=Oe(e),s=Oe(E);t||(xE(E,s)&&we(r,"get",E),we(r,"get",s));const{has:n}=GT(r),R=T?Fr:t?Vr:vt;if(n.call(r,E))return R(e.get(E));if(n.call(r,s))return R(e.get(s));e!==r&&e.get(E)}function Zt(e,E=!1){const t=this.__v_raw,T=Oe(t),r=Oe(e);return E||(xE(e,r)&&we(T,"has",e),we(T,"has",r)),e===r?t.has(e):t.has(e)||t.has(r)}function zt(e,E=!1){return e=e.__v_raw,!E&&we(Oe(e),"iterate",YE),Reflect.get(e,"size",e)}function Ms(e){e=Oe(e);const E=Oe(this);return GT(E).has.call(E,e)||(E.add(e),OE(E,"add",e,e)),this}function Us(e,E){E=Oe(E);const t=Oe(this),{has:T,get:r}=GT(t);let s=T.call(t,e);s||(e=Oe(e),s=T.call(t,e));const n=r.call(t,e);return t.set(e,E),s?xE(E,n)&&OE(t,"set",e,E):OE(t,"add",e,E),this}function hs(e){const E=Oe(this),{has:t,get:T}=GT(E);let r=t.call(E,e);r||(e=Oe(e),r=t.call(E,e)),T&&T.call(E,e);const s=E.delete(e);return r&&OE(E,"delete",e,void 0),s}function Gs(){const e=Oe(this),E=e.size!==0,t=e.clear();return E&&OE(e,"clear",void 0,void 0),t}function eT(e,E){return function(T,r){const s=this,n=s.__v_raw,R=Oe(n),o=E?Fr:e?Vr:vt;return!e&&we(R,"iterate",YE),n.forEach((A,i)=>T.call(r,o(A),o(i),s))}}function ET(e,E,t){return function(...T){const r=this.__v_raw,s=Oe(r),n=et(s),R=e==="entries"||e===Symbol.iterator&&n,o=e==="keys"&&n,A=r[e](...T),i=t?Fr:E?Vr:vt;return!E&&we(s,"iterate",o?sr:YE),{next(){const{value:O,done:a}=A.next();return a?{value:O,done:a}:{value:R?[i(O[0]),i(O[1])]:i(O),done:a}},[Symbol.iterator](){return this}}}}function lE(e){return function(...E){return e==="delete"?!1:e==="clear"?void 0:this}}function iS(){const e={get(s){return Qt(this,s)},get size(){return zt(this)},has:Zt,add:Ms,set:Us,delete:hs,clear:Gs,forEach:eT(!1,!1)},E={get(s){return Qt(this,s,!1,!0)},get size(){return zt(this)},has:Zt,add:Ms,set:Us,delete:hs,clear:Gs,forEach:eT(!1,!0)},t={get(s){return Qt(this,s,!0)},get size(){return zt(this,!0)},has(s){return Zt.call(this,s,!0)},add:lE("add"),set:lE("set"),delete:lE("delete"),clear:lE("clear"),forEach:eT(!0,!1)},T={get(s){return Qt(this,s,!0,!0)},get size(){return zt(this,!0)},has(s){return Zt.call(this,s,!0)},add:lE("add"),set:lE("set"),delete:lE("delete"),clear:lE("clear"),forEach:eT(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(s=>{e[s]=ET(s,!1,!1),t[s]=ET(s,!0,!1),E[s]=ET(s,!1,!0),T[s]=ET(s,!0,!0)}),[e,t,E,T]}const[SS,OS,IS,aS]=iS();function vr(e,E){const t=E?e?aS:IS:e?OS:SS;return(T,r,s)=>r==="__v_isReactive"?!e:r==="__v_isReadonly"?e:r==="__v_raw"?T:Reflect.get(Se(t,r)&&r in T?t:T,r,s)}const NS={get:vr(!1,!1)},lS={get:vr(!1,!0)},_S={get:vr(!0,!1)},KR=new WeakMap,JR=new WeakMap,kR=new WeakMap,CS=new WeakMap;function cS(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function LS(e){return e.__v_skip||!Object.isExtensible(e)?0:cS(wi(e))}function ME(e){return rt(e)?e:Yr(e,!1,RS,NS,KR)}function uS(e){return Yr(e,!1,oS,lS,JR)}function jR(e){return Yr(e,!0,AS,_S,kR)}function Yr(e,E,t,T,r){if(!Le(e)||e.__v_raw&&!(E&&e.__v_isReactive))return e;const s=r.get(e);if(s)return s;const n=LS(e);if(n===0)return e;const R=new Proxy(e,n===2?T:t);return r.set(e,R),R}function fE(e){return rt(e)?fE(e.__v_raw):!!(e&&e.__v_isReactive)}function rt(e){return!!(e&&e.__v_isReadonly)}function IT(e){return!!(e&&e.__v_isShallow)}function qR(e){return fE(e)||rt(e)}function Oe(e){const E=e&&e.__v_raw;return E?Oe(E):e}function gT(e){return ST(e,"__v_skip",!0),e}const vt=e=>Le(e)?ME(e):e,Vr=e=>Le(e)?jR(e):e;function QR(e){pE&&Qe&&(e=Oe(e),wR(e.dep||(e.dep=br())))}function ZR(e,E){e=Oe(e);const t=e.dep;t&&nr(t)}function Me(e){return!!(e&&e.__v_isRef===!0)}function uE(e){return pS(e,!1)}function pS(e,E){return Me(e)?e:new fS(e,E)}class fS{constructor(E,t){this.__v_isShallow=t,this.dep=void 0,this.__v_isRef=!0,this._rawValue=t?E:Oe(E),this._value=t?E:vt(E)}get value(){return QR(this),this._value}set value(E){const t=this.__v_isShallow||IT(E)||rt(E);E=t?E:Oe(E),xE(E,this._rawValue)&&(this._rawValue=E,this._value=t?E:vt(E),ZR(this))}}function Re(e){return Me(e)?e.value:e}const PS={get:(e,E,t)=>Re(Reflect.get(e,E,t)),set:(e,E,t,T)=>{const r=e[E];return Me(r)&&!Me(t)?(r.value=t,!0):Reflect.set(e,E,t,T)}};function zR(e){return fE(e)?e:new Proxy(e,PS)}function DS(e){const E=z(e)?new Array(e.length):{};for(const t in e)E[t]=MS(e,t);return E}class dS{constructor(E,t,T){this._object=E,this._key=t,this._defaultValue=T,this.__v_isRef=!0}get value(){const E=this._object[this._key];return E===void 0?this._defaultValue:E}set value(E){this._object[this._key]=E}get dep(){return tS(Oe(this._object),this._key)}}function MS(e,E,t){const T=e[E];return Me(T)?T:new dS(e,E,t)}class US{constructor(E,t,T,r){this._setter=t,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this._dirty=!0,this.effect=new Br(E,()=>{this._dirty||(this._dirty=!0,ZR(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!r,this.__v_isReadonly=T}get value(){const E=Oe(this);return QR(E),(E._dirty||!E._cacheable)&&(E._dirty=!1,E._value=E.effect.run()),E._value}set value(E){this._setter(E)}}function hS(e,E,t=!1){let T,r;const s=Te(e);return s?(T=e,r=RE):(T=e.get,r=e.set),new US(T,r,s||!r,t)}function PE(e,E,t,T){let r;try{r=T?e(...T):e()}catch(s){mT(s,E,t)}return r}function ze(e,E,t,T){if(Te(e)){const s=PE(e,E,t,T);return s&&gR(s)&&s.catch(n=>{mT(n,E,t)}),s}const r=[];for(let s=0;s<e.length;s++)r.push(ze(e[s],E,t,T));return r}function mT(e,E,t,T=!0){const r=E?E.vnode:null;if(E){let s=E.parent;const n=E.proxy,R=t;for(;s;){const A=s.ec;if(A){for(let i=0;i<A.length;i++)if(A[i](e,n,R)===!1)return}s=s.parent}const o=E.appContext.config.errorHandler;if(o){PE(o,null,10,[e,n,R]);return}}GS(e,t,r,T)}function GS(e,E,t,T=!0){console.error(e)}let Yt=!1,Rr=!1;const Be=[];let rE=0;const Et=[];let SE=null,BE=0;const eA=Promise.resolve();let xr=null;function EA(e){const E=xr||eA;return e?E.then(this?e.bind(this):e):E}function gS(e){let E=rE+1,t=Be.length;for(;E<t;){const T=E+t>>>1,r=Be[T],s=Vt(r);s<e||s===e&&r.pre?E=T+1:t=T}return E}function wr(e){(!Be.length||!Be.includes(e,Yt&&e.allowRecurse?rE+1:rE))&&(e.id==null?Be.push(e):Be.splice(gS(e.id),0,e),tA())}function tA(){!Yt&&!Rr&&(Rr=!0,xr=eA.then(rA))}function mS(e){const E=Be.indexOf(e);E>rE&&Be.splice(E,1)}function HS(e){z(e)?Et.push(...e):(!SE||!SE.includes(e,e.allowRecurse?BE+1:BE))&&Et.push(e),tA()}function gs(e,E,t=Yt?rE+1:0){for(;t<Be.length;t++){const T=Be[t];if(T&&T.pre){if(e&&T.id!==e.uid)continue;Be.splice(t,1),t--,T()}}}function TA(e){if(Et.length){const E=[...new Set(Et)];if(Et.length=0,SE){SE.push(...E);return}for(SE=E,SE.sort((t,T)=>Vt(t)-Vt(T)),BE=0;BE<SE.length;BE++)SE[BE]();SE=null,BE=0}}const Vt=e=>e.id==null?1/0:e.id,yS=(e,E)=>{const t=Vt(e)-Vt(E);if(t===0){if(e.pre&&!E.pre)return-1;if(E.pre&&!e.pre)return 1}return t};function rA(e){Rr=!1,Yt=!0,Be.sort(yS);try{for(rE=0;rE<Be.length;rE++){const E=Be[rE];E&&E.active!==!1&&PE(E,null,14)}}finally{rE=0,Be.length=0,TA(),Yt=!1,xr=null,(Be.length||Et.length)&&rA()}}function bS(e,E,...t){if(e.isUnmounted)return;const T=e.vnode.props||Ce;let r=t;const s=E.startsWith("update:"),n=s&&E.slice(7);if(n&&n in T){const i=`${n==="modelValue"?"model":n}Modifiers`,{number:O,trim:a}=T[i]||Ce;a&&(r=t.map(P=>de(P)?P.trim():P)),O&&(r=t.map($i))}let R,o=T[R=$T(E)]||T[R=$T(AE(E))];!o&&s&&(o=T[R=$T(ot(E))]),o&&ze(o,e,6,r);const A=T[R+"Once"];if(A){if(!e.emitted)e.emitted={};else if(e.emitted[R])return;e.emitted[R]=!0,ze(A,e,6,r)}}function sA(e,E,t=!1){const T=E.emitsCache,r=T.get(e);if(r!==void 0)return r;const s=e.emits;let n={},R=!1;if(!Te(e)){const o=A=>{const i=sA(A,E,!0);i&&(R=!0,He(n,i))};!t&&E.mixins.length&&E.mixins.forEach(o),e.extends&&o(e.extends),e.mixins&&e.mixins.forEach(o)}return!s&&!R?(Le(e)&&T.set(e,null),null):(z(s)?s.forEach(o=>n[o]=null):He(n,s),Le(e)&&T.set(e,n),n)}function HT(e,E){return!e||!DT(E)?!1:(E=E.slice(2).replace(/Once$/,""),Se(e,E[0].toLowerCase()+E.slice(1))||Se(e,ot(E))||Se(e,E))}let Fe=null,nA=null;function aT(e){const E=Fe;return Fe=e,nA=e&&e.type.__scopeId||null,E}function oe(e,E=Fe,t){if(!E||e._n)return e;const T=(...r)=>{T._d&&Ws(-1);const s=aT(E);let n;try{n=e(...r)}finally{aT(s),T._d&&Ws(1)}return n};return T._n=!0,T._c=!0,T._d=!0,T}function kT(e){const{type:E,vnode:t,proxy:T,withProxy:r,props:s,propsOptions:[n],slots:R,attrs:o,emit:A,render:i,renderCache:O,data:a,setupState:P,ctx:U,inheritAttrs:b}=e;let x,$;const k=aT(e);try{if(t.shapeFlag&4){const v=r||T,re=v;x=TE(i.call(re,v,O,s,P,a,U)),$=o}else{const v=E;x=TE(v.length>1?v(s,{attrs:o,slots:R,emit:A}):v(s,null)),$=E.props?o:BS(o)}}catch(v){Ht.length=0,mT(v,e,1),x=K(dE)}let V=x;if($&&b!==!1){const v=Object.keys($),{shapeFlag:re}=V;v.length&&re&7&&(n&&v.some(mr)&&($=FS($,n)),V=st(V,$))}return t.dirs&&(V=st(V),V.dirs=V.dirs?V.dirs.concat(t.dirs):t.dirs),t.transition&&(V.transition=t.transition),x=V,aT(k),x}const BS=e=>{let E;for(const t in e)(t==="class"||t==="style"||DT(t))&&((E||(E={}))[t]=e[t]);return E},FS=(e,E)=>{const t={};for(const T in e)(!mr(T)||!(T.slice(9)in E))&&(t[T]=e[T]);return t};function vS(e,E,t){const{props:T,children:r,component:s}=e,{props:n,children:R,patchFlag:o}=E,A=s.emitsOptions;if(E.dirs||E.transition)return!0;if(t&&o>=0){if(o&1024)return!0;if(o&16)return T?ms(T,n,A):!!n;if(o&8){const i=E.dynamicProps;for(let O=0;O<i.length;O++){const a=i[O];if(n[a]!==T[a]&&!HT(A,a))return!0}}}else return(r||R)&&(!R||!R.$stable)?!0:T===n?!1:T?n?ms(T,n,A):!0:!!n;return!1}function ms(e,E,t){const T=Object.keys(E);if(T.length!==Object.keys(e).length)return!0;for(let r=0;r<T.length;r++){const s=T[r];if(E[s]!==e[s]&&!HT(t,s))return!0}return!1}function YS({vnode:e,parent:E},t){for(;E&&E.subTree===e;)(e=E.vnode).el=t,E=E.parent}const RA="components";function sE(e,E){return xS(RA,e,!0,E)||e}const VS=Symbol.for("v-ndc");function xS(e,E,t=!0,T=!1){const r=Fe||ge;if(r){const s=r.type;if(e===RA){const R=BO(s,!1);if(R&&(R===E||R===AE(E)||R===UT(AE(E))))return s}const n=Hs(r[e]||s[e],E)||Hs(r.appContext[e],E);return!n&&T?s:n}}function Hs(e,E){return e&&(e[E]||e[AE(E)]||e[UT(AE(E))])}const wS=e=>e.__isSuspense;function WS(e,E){E&&E.pendingBranch?z(e)?E.effects.push(...e):E.effects.push(e):HS(e)}const tT={};function tt(e,E,t){return AA(e,E,t)}function AA(e,E,{immediate:t,deep:T,flush:r,onTrack:s,onTrigger:n}=Ce){var R;const o=vR()===((R=ge)==null?void 0:R.scope)?ge:null;let A,i=!1,O=!1;if(Me(e)?(A=()=>e.value,i=IT(e)):fE(e)?(A=()=>e,T=!0):z(e)?(O=!0,i=e.some(v=>fE(v)||IT(v)),A=()=>e.map(v=>{if(Me(v))return v.value;if(fE(v))return ZE(v);if(Te(v))return PE(v,o,2)})):Te(e)?E?A=()=>PE(e,o,2):A=()=>{if(!(o&&o.isUnmounted))return a&&a(),ze(e,o,3,[P])}:A=RE,E&&T){const v=A;A=()=>ZE(v())}let a,P=v=>{a=k.onStop=()=>{PE(v,o,4),a=k.onStop=void 0}},U;if(Wt)if(P=RE,E?t&&ze(E,o,3,[A(),O?[]:void 0,P]):A(),r==="sync"){const v=YO();U=v.__watcherHandles||(v.__watcherHandles=[])}else return RE;let b=O?new Array(e.length).fill(tT):tT;const x=()=>{if(k.active)if(E){const v=k.run();(T||i||(O?v.some((re,ue)=>xE(re,b[ue])):xE(v,b)))&&(a&&a(),ze(E,o,3,[v,b===tT?void 0:O&&b[0]===tT?[]:b,P]),b=v)}else k.run()};x.allowRecurse=!!E;let $;r==="sync"?$=x:r==="post"?$=()=>xe(x,o&&o.suspense):(x.pre=!0,o&&(x.id=o.uid),$=()=>wr(x));const k=new Br(A,$);E?t?x():b=k.run():r==="post"?xe(k.run.bind(k),o&&o.suspense):k.run();const V=()=>{k.stop(),o&&o.scope&&Hr(o.scope.effects,k)};return U&&U.push(V),V}function XS(e,E,t){const T=this.proxy,r=de(e)?e.includes(".")?oA(T,e):()=>T[e]:e.bind(T,T);let s;Te(E)?s=E:(s=E.handler,t=E);const n=ge;nt(this);const R=AA(r,s.bind(T),t);return n?nt(n):VE(),R}function oA(e,E){const t=E.split(".");return()=>{let T=e;for(let r=0;r<t.length&&T;r++)T=T[t[r]];return T}}function ZE(e,E){if(!Le(e)||e.__v_skip||(E=E||new Set,E.has(e)))return e;if(E.add(e),Me(e))ZE(e.value,E);else if(z(e))for(let t=0;t<e.length;t++)ZE(e[t],E);else if(GR(e)||et(e))e.forEach(t=>{ZE(t,E)});else if(HR(e))for(const t in e)ZE(e[t],E);return e}function mE(e,E,t,T){const r=e.dirs,s=E&&E.dirs;for(let n=0;n<r.length;n++){const R=r[n];s&&(R.oldValue=s[n].value);let o=R.dir[T];o&&(it(),ze(o,t,8,[e.el,R,e,E]),St())}}/*! #__NO_SIDE_EFFECTS__ */function me(e,E){return Te(e)?He({name:e.name},E,{setup:e}):e}const ht=e=>!!e.type.__asyncLoader,iA=e=>e.type.__isKeepAlive;function $S(e,E){SA(e,"a",E)}function KS(e,E){SA(e,"da",E)}function SA(e,E,t=ge){const T=e.__wdc||(e.__wdc=()=>{let r=t;for(;r;){if(r.isDeactivated)return;r=r.parent}return e()});if(yT(E,T,t),t){let r=t.parent;for(;r&&r.parent;)iA(r.parent.vnode)&&JS(T,E,t,r),r=r.parent}}function JS(e,E,t,T){const r=yT(E,e,T,!0);IA(()=>{Hr(T[E],r)},t)}function yT(e,E,t=ge,T=!1){if(t){const r=t[e]||(t[e]=[]),s=E.__weh||(E.__weh=(...n)=>{if(t.isUnmounted)return;it(),nt(t);const R=ze(E,t,e,n);return VE(),St(),R});return T?r.unshift(s):r.push(s),s}}const aE=e=>(E,t=ge)=>(!Wt||e==="sp")&&yT(e,(...T)=>E(...T),t),OA=aE("bm"),Wr=aE("m"),kS=aE("bu"),jS=aE("u"),qS=aE("bum"),IA=aE("um"),QS=aE("sp"),ZS=aE("rtg"),zS=aE("rtc");function eO(e,E=ge){yT("ec",e,E)}function Je(e,E,t,T){let r;const s=t&&t[T];if(z(e)||de(e)){r=new Array(e.length);for(let n=0,R=e.length;n<R;n++)r[n]=E(e[n],n,void 0,s&&s[n])}else if(typeof e=="number"){r=new Array(e);for(let n=0;n<e;n++)r[n]=E(n+1,n,void 0,s&&s[n])}else if(Le(e))if(e[Symbol.iterator])r=Array.from(e,(n,R)=>E(n,R,void 0,s&&s[R]));else{const n=Object.keys(e);r=new Array(n.length);for(let R=0,o=n.length;R<o;R++){const A=n[R];r[R]=E(e[A],A,R,s&&s[R])}}else r=[];return t&&(t[T]=r),r}function $t(e,E,t={},T,r){if(Fe.isCE||Fe.parent&&ht(Fe.parent)&&Fe.parent.isCE)return E!=="default"&&(t.name=E),K("slot",t,T&&T());let s=e[E];s&&s._c&&(s._d=!1),H();const n=s&&aA(s(t)),R=Pe(ce,{key:t.key||n&&n.key||`_${E}`},n||(T?T():[]),n&&e._===1?64:-2);return!r&&R.scopeId&&(R.slotScopeIds=[R.scopeId+"-s"]),s&&s._c&&(s._d=!0),R}function aA(e){return e.some(E=>lT(E)?!(E.type===dE||E.type===ce&&!aA(E.children)):!0)?e:null}const Ar=e=>e?DA(e)?jr(e)||e.proxy:Ar(e.parent):null,Gt=He(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>Ar(e.parent),$root:e=>Ar(e.root),$emit:e=>e.emit,$options:e=>Xr(e),$forceUpdate:e=>e.f||(e.f=()=>wr(e.update)),$nextTick:e=>e.n||(e.n=EA.bind(e.proxy)),$watch:e=>XS.bind(e)}),jT=(e,E)=>e!==Ce&&!e.__isScriptSetup&&Se(e,E),EO={get({_:e},E){const{ctx:t,setupState:T,data:r,props:s,accessCache:n,type:R,appContext:o}=e;let A;if(E[0]!=="$"){const P=n[E];if(P!==void 0)switch(P){case 1:return T[E];case 2:return r[E];case 4:return t[E];case 3:return s[E]}else{if(jT(T,E))return n[E]=1,T[E];if(r!==Ce&&Se(r,E))return n[E]=2,r[E];if((A=e.propsOptions[0])&&Se(A,E))return n[E]=3,s[E];if(t!==Ce&&Se(t,E))return n[E]=4,t[E];or&&(n[E]=0)}}const i=Gt[E];let O,a;if(i)return E==="$attrs"&&we(e,"get",E),i(e);if((O=R.__cssModules)&&(O=O[E]))return O;if(t!==Ce&&Se(t,E))return n[E]=4,t[E];if(a=o.config.globalProperties,Se(a,E))return a[E]},set({_:e},E,t){const{data:T,setupState:r,ctx:s}=e;return jT(r,E)?(r[E]=t,!0):T!==Ce&&Se(T,E)?(T[E]=t,!0):Se(e.props,E)||E[0]==="$"&&E.slice(1)in e?!1:(s[E]=t,!0)},has({_:{data:e,setupState:E,accessCache:t,ctx:T,appContext:r,propsOptions:s}},n){let R;return!!t[n]||e!==Ce&&Se(e,n)||jT(E,n)||(R=s[0])&&Se(R,n)||Se(T,n)||Se(Gt,n)||Se(r.config.globalProperties,n)},defineProperty(e,E,t){return t.get!=null?e._.accessCache[E]=0:Se(t,"value")&&this.set(e,E,t.value,null),Reflect.defineProperty(e,E,t)}};function ys(e){return z(e)?e.reduce((E,t)=>(E[t]=null,E),{}):e}let or=!0;function tO(e){const E=Xr(e),t=e.proxy,T=e.ctx;or=!1,E.beforeCreate&&bs(E.beforeCreate,e,"bc");const{data:r,computed:s,methods:n,watch:R,provide:o,inject:A,created:i,beforeMount:O,mounted:a,beforeUpdate:P,updated:U,activated:b,deactivated:x,beforeDestroy:$,beforeUnmount:k,destroyed:V,unmounted:v,render:re,renderTracked:ue,renderTriggered:Ae,errorCaptured:ee,serverPrefetch:j,expose:_,inheritAttrs:u,components:c,directives:F,filters:J}=E;if(A&&TO(A,T,null),n)for(const L in n){const G=n[L];Te(G)&&(T[L]=G.bind(t))}if(r){const L=r.call(t,t);Le(L)&&(e.data=ME(L))}if(or=!0,s)for(const L in s){const G=s[L],Ee=Te(G)?G.bind(t,t):Te(G.get)?G.get.bind(t,t):RE,Ie=!Te(G)&&Te(G.set)?G.set.bind(t):RE,ae=nE({get:Ee,set:Ie});Object.defineProperty(T,L,{enumerable:!0,configurable:!0,get:()=>ae.value,set:fe=>ae.value=fe})}if(R)for(const L in R)NA(R[L],T,t,L);if(o){const L=Te(o)?o.call(t):o;Reflect.ownKeys(L).forEach(G=>{oO(G,L[G])})}i&&bs(i,e,"c");function Z(L,G){z(G)?G.forEach(Ee=>L(Ee.bind(t))):G&&L(G.bind(t))}if(Z(OA,O),Z(Wr,a),Z(kS,P),Z(jS,U),Z($S,b),Z(KS,x),Z(eO,ee),Z(zS,ue),Z(ZS,Ae),Z(qS,k),Z(IA,v),Z(QS,j),z(_))if(_.length){const L=e.exposed||(e.exposed={});_.forEach(G=>{Object.defineProperty(L,G,{get:()=>t[G],set:Ee=>t[G]=Ee})})}else e.exposed||(e.exposed={});re&&e.render===RE&&(e.render=re),u!=null&&(e.inheritAttrs=u),c&&(e.components=c),F&&(e.directives=F)}function TO(e,E,t=RE){z(e)&&(e=ir(e));for(const T in e){const r=e[T];let s;Le(r)?"default"in r?s=gt(r.from||T,r.default,!0):s=gt(r.from||T):s=gt(r),Me(s)?Object.defineProperty(E,T,{enumerable:!0,configurable:!0,get:()=>s.value,set:n=>s.value=n}):E[T]=s}}function bs(e,E,t){ze(z(e)?e.map(T=>T.bind(E.proxy)):e.bind(E.proxy),E,t)}function NA(e,E,t,T){const r=T.includes(".")?oA(t,T):()=>t[T];if(de(e)){const s=E[e];Te(s)&&tt(r,s)}else if(Te(e))tt(r,e.bind(t));else if(Le(e))if(z(e))e.forEach(s=>NA(s,E,t,T));else{const s=Te(e.handler)?e.handler.bind(t):E[e.handler];Te(s)&&tt(r,s,e)}}function Xr(e){const E=e.type,{mixins:t,extends:T}=E,{mixins:r,optionsCache:s,config:{optionMergeStrategies:n}}=e.appContext,R=s.get(E);let o;return R?o=R:!r.length&&!t&&!T?o=E:(o={},r.length&&r.forEach(A=>NT(o,A,n,!0)),NT(o,E,n)),Le(E)&&s.set(E,o),o}function NT(e,E,t,T=!1){const{mixins:r,extends:s}=E;s&&NT(e,s,t,!0),r&&r.forEach(n=>NT(e,n,t,!0));for(const n in E)if(!(T&&n==="expose")){const R=rO[n]||t&&t[n];e[n]=R?R(e[n],E[n]):E[n]}return e}const rO={data:Bs,props:Fs,emits:Fs,methods:Mt,computed:Mt,beforeCreate:Ye,created:Ye,beforeMount:Ye,mounted:Ye,beforeUpdate:Ye,updated:Ye,beforeDestroy:Ye,beforeUnmount:Ye,destroyed:Ye,unmounted:Ye,activated:Ye,deactivated:Ye,errorCaptured:Ye,serverPrefetch:Ye,components:Mt,directives:Mt,watch:nO,provide:Bs,inject:sO};function Bs(e,E){return E?e?function(){return He(Te(e)?e.call(this,this):e,Te(E)?E.call(this,this):E)}:E:e}function sO(e,E){return Mt(ir(e),ir(E))}function ir(e){if(z(e)){const E={};for(let t=0;t<e.length;t++)E[e[t]]=e[t];return E}return e}function Ye(e,E){return e?[...new Set([].concat(e,E))]:E}function Mt(e,E){return e?He(Object.create(null),e,E):E}function Fs(e,E){return e?z(e)&&z(E)?[...new Set([...e,...E])]:He(Object.create(null),ys(e),ys(E??{})):E}function nO(e,E){if(!e)return E;if(!E)return e;const t=He(Object.create(null),e);for(const T in E)t[T]=Ye(e[T],E[T]);return t}function lA(){return{app:null,config:{isNativeTag:Vi,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let RO=0;function AO(e,E){return function(T,r=null){Te(T)||(T=He({},T)),r!=null&&!Le(r)&&(r=null);const s=lA(),n=new WeakSet;let R=!1;const o=s.app={_uid:RO++,_component:T,_props:r,_container:null,_context:s,_instance:null,version:VO,get config(){return s.config},set config(A){},use(A,...i){return n.has(A)||(A&&Te(A.install)?(n.add(A),A.install(o,...i)):Te(A)&&(n.add(A),A(o,...i))),o},mixin(A){return s.mixins.includes(A)||s.mixins.push(A),o},component(A,i){return i?(s.components[A]=i,o):s.components[A]},directive(A,i){return i?(s.directives[A]=i,o):s.directives[A]},mount(A,i,O){if(!R){const a=K(T,r);return a.appContext=s,i&&E?E(a,A):e(a,A,O),R=!0,o._container=A,A.__vue_app__=o,jr(a.component)||a.component.proxy}},unmount(){R&&(e(null,o._container),delete o._container.__vue_app__)},provide(A,i){return s.provides[A]=i,o},runWithContext(A){xt=o;try{return A()}finally{xt=null}}};return o}}let xt=null;function oO(e,E){if(ge){let t=ge.provides;const T=ge.parent&&ge.parent.provides;T===t&&(t=ge.provides=Object.create(T)),t[e]=E}}function gt(e,E,t=!1){const T=ge||Fe;if(T||xt){const r=T?T.parent==null?T.vnode.appContext&&T.vnode.appContext.provides:T.parent.provides:xt._context.provides;if(r&&e in r)return r[e];if(arguments.length>1)return t&&Te(E)?E.call(T&&T.proxy):E}}function iO(){return!!(ge||Fe||xt)}function SO(e,E,t,T=!1){const r={},s={};ST(s,BT,1),e.propsDefaults=Object.create(null),_A(e,E,r,s);for(const n in e.propsOptions[0])n in r||(r[n]=void 0);t?e.props=T?r:uS(r):e.type.props?e.props=r:e.props=s,e.attrs=s}function OO(e,E,t,T){const{props:r,attrs:s,vnode:{patchFlag:n}}=e,R=Oe(r),[o]=e.propsOptions;let A=!1;if((T||n>0)&&!(n&16)){if(n&8){const i=e.vnode.dynamicProps;for(let O=0;O<i.length;O++){let a=i[O];if(HT(e.emitsOptions,a))continue;const P=E[a];if(o)if(Se(s,a))P!==s[a]&&(s[a]=P,A=!0);else{const U=AE(a);r[U]=Sr(o,R,U,P,e,!1)}else P!==s[a]&&(s[a]=P,A=!0)}}}else{_A(e,E,r,s)&&(A=!0);let i;for(const O in R)(!E||!Se(E,O)&&((i=ot(O))===O||!Se(E,i)))&&(o?t&&(t[O]!==void 0||t[i]!==void 0)&&(r[O]=Sr(o,R,O,void 0,e,!0)):delete r[O]);if(s!==R)for(const O in s)(!E||!Se(E,O))&&(delete s[O],A=!0)}A&&OE(e,"set","$attrs")}function _A(e,E,t,T){const[r,s]=e.propsOptions;let n=!1,R;if(E)for(let o in E){if(rT(o))continue;const A=E[o];let i;r&&Se(r,i=AE(o))?!s||!s.includes(i)?t[i]=A:(R||(R={}))[i]=A:HT(e.emitsOptions,o)||(!(o in T)||A!==T[o])&&(T[o]=A,n=!0)}if(s){const o=Oe(t),A=R||Ce;for(let i=0;i<s.length;i++){const O=s[i];t[O]=Sr(r,o,O,A[O],e,!Se(A,O))}}return n}function Sr(e,E,t,T,r,s){const n=e[t];if(n!=null){const R=Se(n,"default");if(R&&T===void 0){const o=n.default;if(n.type!==Function&&!n.skipFactory&&Te(o)){const{propsDefaults:A}=r;t in A?T=A[t]:(nt(r),T=A[t]=o.call(null,E),VE())}else T=o}n[0]&&(s&&!R?T=!1:n[1]&&(T===""||T===ot(t))&&(T=!0))}return T}function CA(e,E,t=!1){const T=E.propsCache,r=T.get(e);if(r)return r;const s=e.props,n={},R=[];let o=!1;if(!Te(e)){const i=O=>{o=!0;const[a,P]=CA(O,E,!0);He(n,a),P&&R.push(...P)};!t&&E.mixins.length&&E.mixins.forEach(i),e.extends&&i(e.extends),e.mixins&&e.mixins.forEach(i)}if(!s&&!o)return Le(e)&&T.set(e,zE),zE;if(z(s))for(let i=0;i<s.length;i++){const O=AE(s[i]);vs(O)&&(n[O]=Ce)}else if(s)for(const i in s){const O=AE(i);if(vs(O)){const a=s[i],P=n[O]=z(a)||Te(a)?{type:a}:He({},a);if(P){const U=xs(Boolean,P.type),b=xs(String,P.type);P[0]=U>-1,P[1]=b<0||U<b,(U>-1||Se(P,"default"))&&R.push(O)}}}const A=[n,R];return Le(e)&&T.set(e,A),A}function vs(e){return e[0]!=="$"}function Ys(e){const E=e&&e.toString().match(/^\s*(function|class) (\w+)/);return E?E[2]:e===null?"null":""}function Vs(e,E){return Ys(e)===Ys(E)}function xs(e,E){return z(E)?E.findIndex(t=>Vs(t,e)):Te(E)&&Vs(E,e)?0:-1}const cA=e=>e[0]==="_"||e==="$stable",$r=e=>z(e)?e.map(TE):[TE(e)],IO=(e,E,t)=>{if(E._n)return E;const T=oe((...r)=>$r(E(...r)),t);return T._c=!1,T},LA=(e,E,t)=>{const T=e._ctx;for(const r in e){if(cA(r))continue;const s=e[r];if(Te(s))E[r]=IO(r,s,T);else if(s!=null){const n=$r(s);E[r]=()=>n}}},uA=(e,E)=>{const t=$r(E);e.slots.default=()=>t},aO=(e,E)=>{if(e.vnode.shapeFlag&32){const t=E._;t?(e.slots=Oe(E),ST(E,"_",t)):LA(E,e.slots={})}else e.slots={},E&&uA(e,E);ST(e.slots,BT,1)},NO=(e,E,t)=>{const{vnode:T,slots:r}=e;let s=!0,n=Ce;if(T.shapeFlag&32){const R=E._;R?t&&R===1?s=!1:(He(r,E),!t&&R===1&&delete r._):(s=!E.$stable,LA(E,r)),n=E}else E&&(uA(e,E),n={default:1});if(s)for(const R in r)!cA(R)&&n[R]==null&&delete r[R]};function Or(e,E,t,T,r=!1){if(z(e)){e.forEach((a,P)=>Or(a,E&&(z(E)?E[P]:E),t,T,r));return}if(ht(T)&&!r)return;const s=T.shapeFlag&4?jr(T.component)||T.component.proxy:T.el,n=r?null:s,{i:R,r:o}=e,A=E&&E.r,i=R.refs===Ce?R.refs={}:R.refs,O=R.setupState;if(A!=null&&A!==o&&(de(A)?(i[A]=null,Se(O,A)&&(O[A]=null)):Me(A)&&(A.value=null)),Te(o))PE(o,R,12,[n,i]);else{const a=de(o),P=Me(o);if(a||P){const U=()=>{if(e.f){const b=a?Se(O,o)?O[o]:i[o]:o.value;r?z(b)&&Hr(b,s):z(b)?b.includes(s)||b.push(s):a?(i[o]=[s],Se(O,o)&&(O[o]=i[o])):(o.value=[s],e.k&&(i[e.k]=o.value))}else a?(i[o]=n,Se(O,o)&&(O[o]=n)):P&&(o.value=n,e.k&&(i[e.k]=n))};n?(U.id=-1,xe(U,t)):U()}}}const xe=WS;function lO(e){return _O(e)}function _O(e,E){const t=Tr();t.__VUE__=!0;const{insert:T,remove:r,patchProp:s,createElement:n,createText:R,createComment:o,setText:A,setElementText:i,parentNode:O,nextSibling:a,setScopeId:P=RE,insertStaticContent:U}=e,b=(S,N,C,D=null,f=null,g=null,B=!1,l=null,m=!!N.dynamicChildren)=>{if(S===N)return;S&&!pt(S,N)&&(D=GE(S),fe(S,f,g,!0),S=null),N.patchFlag===-2&&(m=!1,N.dynamicChildren=null);const{type:p,ref:y,shapeFlag:Y}=N;switch(p){case bT:x(S,N,C,D);break;case dE:$(S,N,C,D);break;case sT:S==null&&k(N,C,D,B);break;case ce:c(S,N,C,D,f,g,B,l,m);break;default:Y&1?re(S,N,C,D,f,g,B,l,m):Y&6?F(S,N,C,D,f,g,B,l,m):(Y&64||Y&128)&&p.process(S,N,C,D,f,g,B,l,m,iE)}y!=null&&f&&Or(y,S&&S.ref,g,N||S,!N)},x=(S,N,C,D)=>{if(S==null)T(N.el=R(N.children),C,D);else{const f=N.el=S.el;N.children!==S.children&&A(f,N.children)}},$=(S,N,C,D)=>{S==null?T(N.el=o(N.children||""),C,D):N.el=S.el},k=(S,N,C,D)=>{[S.el,S.anchor]=U(S.children,N,C,D,S.el,S.anchor)},V=({el:S,anchor:N},C,D)=>{let f;for(;S&&S!==N;)f=a(S),T(S,C,D),S=f;T(N,C,D)},v=({el:S,anchor:N})=>{let C;for(;S&&S!==N;)C=a(S),r(S),S=C;r(N)},re=(S,N,C,D,f,g,B,l,m)=>{B=B||N.type==="svg",S==null?ue(N,C,D,f,g,B,l,m):j(S,N,f,g,B,l,m)},ue=(S,N,C,D,f,g,B,l)=>{let m,p;const{type:y,props:Y,shapeFlag:w,transition:Q,dirs:se}=S;if(m=S.el=n(S.type,g,Y&&Y.is,Y),w&8?i(m,S.children):w&16&&ee(S.children,m,null,D,f,g&&y!=="foreignObject",B,l),se&&mE(S,null,D,"created"),Ae(m,S,S.scopeId,B,D),Y){for(const h in Y)h!=="value"&&!rT(h)&&s(m,h,null,Y[h],g,S.children,D,f,De);"value"in Y&&s(m,"value",null,Y.value),(p=Y.onVnodeBeforeMount)&&tE(p,D,S)}se&&mE(S,null,D,"beforeMount");const M=CO(f,Q);M&&Q.beforeEnter(m),T(m,N,C),((p=Y&&Y.onVnodeMounted)||M||se)&&xe(()=>{p&&tE(p,D,S),M&&Q.enter(m),se&&mE(S,null,D,"mounted")},f)},Ae=(S,N,C,D,f)=>{if(C&&P(S,C),D)for(let g=0;g<D.length;g++)P(S,D[g]);if(f){let g=f.subTree;if(N===g){const B=f.vnode;Ae(S,B,B.scopeId,B.slotScopeIds,f.parent)}}},ee=(S,N,C,D,f,g,B,l,m=0)=>{for(let p=m;p<S.length;p++){const y=S[p]=l?cE(S[p]):TE(S[p]);b(null,y,N,C,D,f,g,B,l)}},j=(S,N,C,D,f,g,B)=>{const l=N.el=S.el;let{patchFlag:m,dynamicChildren:p,dirs:y}=N;m|=S.patchFlag&16;const Y=S.props||Ce,w=N.props||Ce;let Q;C&&HE(C,!1),(Q=w.onVnodeBeforeUpdate)&&tE(Q,C,N,S),y&&mE(N,S,C,"beforeUpdate"),C&&HE(C,!0);const se=f&&N.type!=="foreignObject";if(p?_(S.dynamicChildren,p,l,C,D,se,g):B||G(S,N,l,null,C,D,se,g,!1),m>0){if(m&16)u(l,N,Y,w,C,D,f);else if(m&2&&Y.class!==w.class&&s(l,"class",null,w.class,f),m&4&&s(l,"style",Y.style,w.style,f),m&8){const M=N.dynamicProps;for(let h=0;h<M.length;h++){const W=M[h],te=Y[W],pe=w[W];(pe!==te||W==="value")&&s(l,W,te,pe,f,S.children,C,D,De)}}m&1&&S.children!==N.children&&i(l,N.children)}else!B&&p==null&&u(l,N,Y,w,C,D,f);((Q=w.onVnodeUpdated)||y)&&xe(()=>{Q&&tE(Q,C,N,S),y&&mE(N,S,C,"updated")},D)},_=(S,N,C,D,f,g,B)=>{for(let l=0;l<N.length;l++){const m=S[l],p=N[l],y=m.el&&(m.type===ce||!pt(m,p)||m.shapeFlag&70)?O(m.el):C;b(m,p,y,null,D,f,g,B,!0)}},u=(S,N,C,D,f,g,B)=>{if(C!==D){if(C!==Ce)for(const l in C)!rT(l)&&!(l in D)&&s(S,l,C[l],null,B,N.children,f,g,De);for(const l in D){if(rT(l))continue;const m=D[l],p=C[l];m!==p&&l!=="value"&&s(S,l,p,m,B,N.children,f,g,De)}"value"in D&&s(S,"value",C.value,D.value)}},c=(S,N,C,D,f,g,B,l,m)=>{const p=N.el=S?S.el:R(""),y=N.anchor=S?S.anchor:R("");let{patchFlag:Y,dynamicChildren:w,slotScopeIds:Q}=N;Q&&(l=l?l.concat(Q):Q),S==null?(T(p,C,D),T(y,C,D),ee(N.children,C,y,f,g,B,l,m)):Y>0&&Y&64&&w&&S.dynamicChildren?(_(S.dynamicChildren,w,C,f,g,B,l),(N.key!=null||f&&N===f.subTree)&&Kr(S,N,!0)):G(S,N,C,y,f,g,B,l,m)},F=(S,N,C,D,f,g,B,l,m)=>{N.slotScopeIds=l,S==null?N.shapeFlag&512?f.ctx.activate(N,C,D,B,m):J(N,C,D,f,g,B,m):le(S,N,m)},J=(S,N,C,D,f,g,B)=>{const l=S.component=gO(S,D,f);if(iA(S)&&(l.ctx.renderer=iE),mO(l),l.asyncDep){if(f&&f.registerDep(l,Z),!S.el){const m=l.subTree=K(dE);$(null,m,N,C)}return}Z(l,S,N,C,f,g,B)},le=(S,N,C)=>{const D=N.component=S.component;if(vS(S,N,C))if(D.asyncDep&&!D.asyncResolved){L(D,N,C);return}else D.next=N,mS(D.update),D.update();else N.el=S.el,D.vnode=N},Z=(S,N,C,D,f,g,B)=>{const l=()=>{if(S.isMounted){let{next:y,bu:Y,u:w,parent:Q,vnode:se}=S,M=y,h;HE(S,!1),y?(y.el=se.el,L(S,y,B)):y=se,Y&&KT(Y),(h=y.props&&y.props.onVnodeBeforeUpdate)&&tE(h,Q,y,se),HE(S,!0);const W=kT(S),te=S.subTree;S.subTree=W,b(te,W,O(te.el),GE(te),S,f,g),y.el=W.el,M===null&&YS(S,W.el),w&&xe(w,f),(h=y.props&&y.props.onVnodeUpdated)&&xe(()=>tE(h,Q,y,se),f)}else{let y;const{el:Y,props:w}=N,{bm:Q,m:se,parent:M}=S,h=ht(N);if(HE(S,!1),Q&&KT(Q),!h&&(y=w&&w.onVnodeBeforeMount)&&tE(y,M,N),HE(S,!0),Y&&ut){const W=()=>{S.subTree=kT(S),ut(Y,S.subTree,S,f,null)};h?N.type.__asyncLoader().then(()=>!S.isUnmounted&&W()):W()}else{const W=S.subTree=kT(S);b(null,W,C,D,S,f,g),N.el=W.el}if(se&&xe(se,f),!h&&(y=w&&w.onVnodeMounted)){const W=N;xe(()=>tE(y,M,W),f)}(N.shapeFlag&256||M&&ht(M.vnode)&&M.vnode.shapeFlag&256)&&S.a&&xe(S.a,f),S.isMounted=!0,N=C=D=null}},m=S.effect=new Br(l,()=>wr(p),S.scope),p=S.update=()=>m.run();p.id=S.uid,HE(S,!0),p()},L=(S,N,C)=>{N.component=S;const D=S.vnode.props;S.vnode=N,S.next=null,OO(S,N.props,D,C),NO(S,N.children,C),it(),gs(S),St()},G=(S,N,C,D,f,g,B,l,m=!1)=>{const p=S&&S.children,y=S?S.shapeFlag:0,Y=N.children,{patchFlag:w,shapeFlag:Q}=N;if(w>0){if(w&128){Ie(p,Y,C,D,f,g,B,l,m);return}else if(w&256){Ee(p,Y,C,D,f,g,B,l,m);return}}Q&8?(y&16&&De(p,f,g),Y!==p&&i(C,Y)):y&16?Q&16?Ie(p,Y,C,D,f,g,B,l,m):De(p,f,g,!0):(y&8&&i(C,""),Q&16&&ee(Y,C,D,f,g,B,l,m))},Ee=(S,N,C,D,f,g,B,l,m)=>{S=S||zE,N=N||zE;const p=S.length,y=N.length,Y=Math.min(p,y);let w;for(w=0;w<Y;w++){const Q=N[w]=m?cE(N[w]):TE(N[w]);b(S[w],Q,C,null,f,g,B,l,m)}p>y?De(S,f,g,!0,!1,Y):ee(N,C,D,f,g,B,l,m,Y)},Ie=(S,N,C,D,f,g,B,l,m)=>{let p=0;const y=N.length;let Y=S.length-1,w=y-1;for(;p<=Y&&p<=w;){const Q=S[p],se=N[p]=m?cE(N[p]):TE(N[p]);if(pt(Q,se))b(Q,se,C,null,f,g,B,l,m);else break;p++}for(;p<=Y&&p<=w;){const Q=S[Y],se=N[w]=m?cE(N[w]):TE(N[w]);if(pt(Q,se))b(Q,se,C,null,f,g,B,l,m);else break;Y--,w--}if(p>Y){if(p<=w){const Q=w+1,se=Q<y?N[Q].el:D;for(;p<=w;)b(null,N[p]=m?cE(N[p]):TE(N[p]),C,se,f,g,B,l,m),p++}}else if(p>w)for(;p<=Y;)fe(S[p],f,g,!0),p++;else{const Q=p,se=p,M=new Map;for(p=se;p<=w;p++){const We=N[p]=m?cE(N[p]):TE(N[p]);We.key!=null&&M.set(We.key,p)}let h,W=0;const te=w-se+1;let pe=!1,Ke=0;const gE=new Array(te);for(p=0;p<te;p++)gE[p]=0;for(p=Q;p<=Y;p++){const We=S[p];if(W>=te){fe(We,f,g,!0);continue}let EE;if(We.key!=null)EE=M.get(We.key);else for(h=se;h<=w;h++)if(gE[h-se]===0&&pt(We,N[h])){EE=h;break}EE===void 0?fe(We,f,g,!0):(gE[EE-se]=p+1,EE>=Ke?Ke=EE:pe=!0,b(We,N[EE],C,null,f,g,B,l,m),W++)}const jt=pe?cO(gE):zE;for(h=jt.length-1,p=te-1;p>=0;p--){const We=se+p,EE=N[We],Ns=We+1<y?N[We+1].el:D;gE[p]===0?b(null,EE,C,Ns,f,g,B,l,m):pe&&(h<0||p!==jt[h]?ae(EE,C,Ns,2):h--)}}},ae=(S,N,C,D,f=null)=>{const{el:g,type:B,transition:l,children:m,shapeFlag:p}=S;if(p&6){ae(S.component.subTree,N,C,D);return}if(p&128){S.suspense.move(N,C,D);return}if(p&64){B.move(S,N,C,iE);return}if(B===ce){T(g,N,C);for(let Y=0;Y<m.length;Y++)ae(m[Y],N,C,D);T(S.anchor,N,C);return}if(B===sT){V(S,N,C);return}if(D!==2&&p&1&&l)if(D===0)l.beforeEnter(g),T(g,N,C),xe(()=>l.enter(g),f);else{const{leave:Y,delayLeave:w,afterLeave:Q}=l,se=()=>T(g,N,C),M=()=>{Y(g,()=>{se(),Q&&Q()})};w?w(g,se,M):M()}else T(g,N,C)},fe=(S,N,C,D=!1,f=!1)=>{const{type:g,props:B,ref:l,children:m,dynamicChildren:p,shapeFlag:y,patchFlag:Y,dirs:w}=S;if(l!=null&&Or(l,null,C,S,!0),y&256){N.ctx.deactivate(S);return}const Q=y&1&&w,se=!ht(S);let M;if(se&&(M=B&&B.onVnodeBeforeUnmount)&&tE(M,N,S),y&6)ve(S.component,C,D);else{if(y&128){S.suspense.unmount(C,D);return}Q&&mE(S,null,N,"beforeUnmount"),y&64?S.type.remove(S,N,C,f,iE,D):p&&(g!==ce||Y>0&&Y&64)?De(p,N,C,!1,!0):(g===ce&&Y&384||!f&&y&16)&&De(m,N,C),D&&ke(S)}(se&&(M=B&&B.onVnodeUnmounted)||Q)&&xe(()=>{M&&tE(M,N,S),Q&&mE(S,null,N,"unmounted")},C)},ke=S=>{const{type:N,el:C,anchor:D,transition:f}=S;if(N===ce){KE(C,D);return}if(N===sT){v(S);return}const g=()=>{r(C),f&&!f.persisted&&f.afterLeave&&f.afterLeave()};if(S.shapeFlag&1&&f&&!f.persisted){const{leave:B,delayLeave:l}=f,m=()=>B(C,g);l?l(S.el,g,m):m()}else g()},KE=(S,N)=>{let C;for(;S!==N;)C=a(S),r(S),S=C;r(N)},ve=(S,N,C)=>{const{bum:D,scope:f,update:g,subTree:B,um:l}=S;D&&KT(D),f.stop(),g&&(g.active=!1,fe(B,S,N,C)),l&&xe(l,N),xe(()=>{S.isUnmounted=!0},N),N&&N.pendingBranch&&!N.isUnmounted&&S.asyncDep&&!S.asyncResolved&&S.suspenseId===N.pendingId&&(N.deps--,N.deps===0&&N.resolve())},De=(S,N,C,D=!1,f=!1,g=0)=>{for(let B=g;B<S.length;B++)fe(S[B],N,C,D,f)},GE=S=>S.shapeFlag&6?GE(S.component.subTree):S.shapeFlag&128?S.suspense.next():a(S.anchor||S.el),ct=(S,N,C)=>{S==null?N._vnode&&fe(N._vnode,null,null,!0):b(N._vnode||null,S,N,null,null,null,C),gs(),TA(),N._vnode=S},iE={p:b,um:fe,m:ae,r:ke,mt:J,mc:ee,pc:G,pbc:_,n:GE,o:e};let Lt,ut;return E&&([Lt,ut]=E(iE)),{render:ct,hydrate:Lt,createApp:AO(ct,Lt)}}function HE({effect:e,update:E},t){e.allowRecurse=E.allowRecurse=t}function CO(e,E){return(!e||e&&!e.pendingBranch)&&E&&!E.persisted}function Kr(e,E,t=!1){const T=e.children,r=E.children;if(z(T)&&z(r))for(let s=0;s<T.length;s++){const n=T[s];let R=r[s];R.shapeFlag&1&&!R.dynamicChildren&&((R.patchFlag<=0||R.patchFlag===32)&&(R=r[s]=cE(r[s]),R.el=n.el),t||Kr(n,R)),R.type===bT&&(R.el=n.el)}}function cO(e){const E=e.slice(),t=[0];let T,r,s,n,R;const o=e.length;for(T=0;T<o;T++){const A=e[T];if(A!==0){if(r=t[t.length-1],e[r]<A){E[T]=r,t.push(T);continue}for(s=0,n=t.length-1;s<n;)R=s+n>>1,e[t[R]]<A?s=R+1:n=R;A<e[t[s]]&&(s>0&&(E[T]=t[s-1]),t[s]=T)}}for(s=t.length,n=t[s-1];s-- >0;)t[s]=n,n=E[n];return t}const LO=e=>e.__isTeleport,mt=e=>e&&(e.disabled||e.disabled===""),ws=e=>typeof SVGElement<"u"&&e instanceof SVGElement,Ir=(e,E)=>{const t=e&&e.to;return de(t)?E?E(t):null:t},uO={name:"Teleport",__isTeleport:!0,process(e,E,t,T,r,s,n,R,o,A){const{mc:i,pc:O,pbc:a,o:{insert:P,querySelector:U,createText:b,createComment:x}}=A,$=mt(E.props);let{shapeFlag:k,children:V,dynamicChildren:v}=E;if(e==null){const re=E.el=b(""),ue=E.anchor=b("");P(re,t,T),P(ue,t,T);const Ae=E.target=Ir(E.props,U),ee=E.targetAnchor=b("");Ae&&(P(ee,Ae),n=n||ws(Ae));const j=(_,u)=>{k&16&&i(V,_,u,r,s,n,R,o)};$?j(t,ue):Ae&&j(Ae,ee)}else{E.el=e.el;const re=E.anchor=e.anchor,ue=E.target=e.target,Ae=E.targetAnchor=e.targetAnchor,ee=mt(e.props),j=ee?t:ue,_=ee?re:Ae;if(n=n||ws(ue),v?(a(e.dynamicChildren,v,j,r,s,n,R),Kr(e,E,!0)):o||O(e,E,j,_,r,s,n,R,!1),$)ee?E.props&&e.props&&E.props.to!==e.props.to&&(E.props.to=e.props.to):TT(E,t,re,A,1);else if((E.props&&E.props.to)!==(e.props&&e.props.to)){const u=E.target=Ir(E.props,U);u&&TT(E,u,null,A,0)}else ee&&TT(E,ue,Ae,A,1)}pA(E)},remove(e,E,t,T,{um:r,o:{remove:s}},n){const{shapeFlag:R,children:o,anchor:A,targetAnchor:i,target:O,props:a}=e;if(O&&s(i),n&&s(A),R&16){const P=n||!mt(a);for(let U=0;U<o.length;U++){const b=o[U];r(b,E,t,P,!!b.dynamicChildren)}}},move:TT,hydrate:pO};function TT(e,E,t,{o:{insert:T},m:r},s=2){s===0&&T(e.targetAnchor,E,t);const{el:n,anchor:R,shapeFlag:o,children:A,props:i}=e,O=s===2;if(O&&T(n,E,t),(!O||mt(i))&&o&16)for(let a=0;a<A.length;a++)r(A[a],E,t,2);O&&T(R,E,t)}function pO(e,E,t,T,r,s,{o:{nextSibling:n,parentNode:R,querySelector:o}},A){const i=E.target=Ir(E.props,o);if(i){const O=i._lpa||i.firstChild;if(E.shapeFlag&16)if(mt(E.props))E.anchor=A(n(e),E,R(e),t,T,r,s),E.targetAnchor=O;else{E.anchor=n(e);let a=O;for(;a;)if(a=n(a),a&&a.nodeType===8&&a.data==="teleport anchor"){E.targetAnchor=a,i._lpa=E.targetAnchor&&n(E.targetAnchor);break}A(O,E,i,t,T,r,s)}pA(E)}return E.anchor&&n(E.anchor)}const fO=uO;function pA(e){const E=e.ctx;if(E&&E.ut){let t=e.children[0].el;for(;t&&t!==e.targetAnchor;)t.nodeType===1&&t.setAttribute("data-v-owner",E.uid),t=t.nextSibling;E.ut()}}const ce=Symbol.for("v-fgt"),bT=Symbol.for("v-txt"),dE=Symbol.for("v-cmt"),sT=Symbol.for("v-stc"),Ht=[];let Ze=null;function H(e=!1){Ht.push(Ze=e?null:[])}function PO(){Ht.pop(),Ze=Ht[Ht.length-1]||null}let wt=1;function Ws(e){wt+=e}function fA(e){return e.dynamicChildren=wt>0?Ze||zE:null,PO(),wt>0&&Ze&&Ze.push(e),e}function X(e,E,t,T,r,s){return fA(I(e,E,t,T,r,s,!0))}function Pe(e,E,t,T,r){return fA(K(e,E,t,T,r,!0))}function lT(e){return e?e.__v_isVNode===!0:!1}function pt(e,E){return e.type===E.type&&e.key===E.key}const BT="__vInternal",PA=({key:e})=>e??null,nT=({ref:e,ref_key:E,ref_for:t})=>(typeof e=="number"&&(e=""+e),e!=null?de(e)||Me(e)||Te(e)?{i:Fe,r:e,k:E,f:!!t}:e:null);function I(e,E=null,t=null,T=0,r=null,s=e===ce?0:1,n=!1,R=!1){const o={__v_isVNode:!0,__v_skip:!0,type:e,props:E,key:E&&PA(E),ref:E&&nT(E),scopeId:nA,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:s,patchFlag:T,dynamicProps:r,dynamicChildren:null,appContext:null,ctx:Fe};return R?(Jr(o,t),s&128&&e.normalize(o)):t&&(o.shapeFlag|=de(t)?8:16),wt>0&&!n&&Ze&&(o.patchFlag>0||s&6)&&o.patchFlag!==32&&Ze.push(o),o}const K=DO;function DO(e,E=null,t=null,T=0,r=null,s=!1){if((!e||e===VS)&&(e=dE),lT(e)){const R=st(e,E,!0);return t&&Jr(R,t),wt>0&&!s&&Ze&&(R.shapeFlag&6?Ze[Ze.indexOf(e)]=R:Ze.push(R)),R.patchFlag|=-2,R}if(FO(e)&&(e=e.__vccOpts),E){E=dO(E);let{class:R,style:o}=E;R&&!de(R)&&(E.class=$e(R)),Le(o)&&(qR(o)&&!z(o)&&(o=He({},o)),E.style=hT(o))}const n=de(e)?1:wS(e)?128:LO(e)?64:Le(e)?4:Te(e)?2:0;return I(e,E,t,T,r,n,s,!0)}function dO(e){return e?qR(e)||BT in e?He({},e):e:null}function st(e,E,t=!1){const{props:T,ref:r,patchFlag:s,children:n}=e,R=E?UO(T||{},E):T;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:R,key:R&&PA(R),ref:E&&E.ref?t&&r?z(r)?r.concat(nT(E)):[r,nT(E)]:nT(E):r,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:n,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:E&&e.type!==ce?s===-1?16:s|16:s,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&st(e.ssContent),ssFallback:e.ssFallback&&st(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx,ce:e.ce}}function be(e=" ",E=0){return K(bT,null,e,E)}function MO(e,E){const t=K(sT,null,e);return t.staticCount=E,t}function ie(e="",E=!1){return E?(H(),Pe(dE,null,e)):K(dE,null,e)}function TE(e){return e==null||typeof e=="boolean"?K(dE):z(e)?K(ce,null,e.slice()):typeof e=="object"?cE(e):K(bT,null,String(e))}function cE(e){return e.el===null&&e.patchFlag!==-1||e.memo?e:st(e)}function Jr(e,E){let t=0;const{shapeFlag:T}=e;if(E==null)E=null;else if(z(E))t=16;else if(typeof E=="object")if(T&65){const r=E.default;r&&(r._c&&(r._d=!1),Jr(e,r()),r._c&&(r._d=!0));return}else{t=32;const r=E._;!r&&!(BT in E)?E._ctx=Fe:r===3&&Fe&&(Fe.slots._===1?E._=1:(E._=2,e.patchFlag|=1024))}else Te(E)?(E={default:E,_ctx:Fe},t=32):(E=String(E),T&64?(t=16,E=[be(E)]):t=8);e.children=E,e.shapeFlag|=t}function UO(...e){const E={};for(let t=0;t<e.length;t++){const T=e[t];for(const r in T)if(r==="class")E.class!==T.class&&(E.class=$e([E.class,T.class]));else if(r==="style")E.style=hT([E.style,T.style]);else if(DT(r)){const s=E[r],n=T[r];n&&s!==n&&!(z(s)&&s.includes(n))&&(E[r]=s?[].concat(s,n):n)}else r!==""&&(E[r]=T[r])}return E}function tE(e,E,t,T=null){ze(e,E,7,[t,T])}const hO=lA();let GO=0;function gO(e,E,t){const T=e.type,r=(E?E.appContext:e.appContext)||hO,s={uid:GO++,vnode:e,type:T,parent:E,appContext:r,root:null,next:null,subTree:null,effect:null,update:null,scope:new BR(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:E?E.provides:Object.create(r.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:CA(T,r),emitsOptions:sA(T,r),emit:null,emitted:null,propsDefaults:Ce,inheritAttrs:T.inheritAttrs,ctx:Ce,data:Ce,props:Ce,attrs:Ce,slots:Ce,refs:Ce,setupState:Ce,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return s.ctx={_:s},s.root=E?E.root:s,s.emit=bS.bind(null,s),e.ce&&e.ce(s),s}let ge=null,kr,kE,Xs="__VUE_INSTANCE_SETTERS__";(kE=Tr()[Xs])||(kE=Tr()[Xs]=[]),kE.push(e=>ge=e),kr=e=>{kE.length>1?kE.forEach(E=>E(e)):kE[0](e)};const nt=e=>{kr(e),e.scope.on()},VE=()=>{ge&&ge.scope.off(),kr(null)};function DA(e){return e.vnode.shapeFlag&4}let Wt=!1;function mO(e,E=!1){Wt=E;const{props:t,children:T}=e.vnode,r=DA(e);SO(e,t,r,E),aO(e,T);const s=r?HO(e,E):void 0;return Wt=!1,s}function HO(e,E){const t=e.type;e.accessCache=Object.create(null),e.proxy=gT(new Proxy(e.ctx,EO));const{setup:T}=t;if(T){const r=e.setupContext=T.length>1?bO(e):null;nt(e),it();const s=PE(T,e,0,[e.props,r]);if(St(),VE(),gR(s)){if(s.then(VE,VE),E)return s.then(n=>{$s(e,n,E)}).catch(n=>{mT(n,e,0)});e.asyncDep=s}else $s(e,s,E)}else dA(e,E)}function $s(e,E,t){Te(E)?e.type.__ssrInlineRender?e.ssrRender=E:e.render=E:Le(E)&&(e.setupState=zR(E)),dA(e,t)}let Ks;function dA(e,E,t){const T=e.type;if(!e.render){if(!E&&Ks&&!T.render){const r=T.template||Xr(e).template;if(r){const{isCustomElement:s,compilerOptions:n}=e.appContext.config,{delimiters:R,compilerOptions:o}=T,A=He(He({isCustomElement:s,delimiters:R},n),o);T.render=Ks(r,A)}}e.render=T.render||RE}{nt(e),it();try{tO(e)}finally{St(),VE()}}}function yO(e){return e.attrsProxy||(e.attrsProxy=new Proxy(e.attrs,{get(E,t){return we(e,"get","$attrs"),E[t]}}))}function bO(e){const E=t=>{e.exposed=t||{}};return{get attrs(){return yO(e)},slots:e.slots,emit:e.emit,expose:E}}function jr(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(zR(gT(e.exposed)),{get(E,t){if(t in E)return E[t];if(t in Gt)return Gt[t](e)},has(E,t){return t in E||t in Gt}}))}function BO(e,E=!0){return Te(e)?e.displayName||e.name:e.name||E&&e.__name}function FO(e){return Te(e)&&"__vccOpts"in e}const nE=(e,E)=>hS(e,E,Wt);function Xt(e,E,t){const T=arguments.length;return T===2?Le(E)&&!z(E)?lT(E)?K(e,null,[E]):K(e,E):K(e,null,E):(T>3?t=Array.prototype.slice.call(arguments,2):T===3&&lT(t)&&(t=[t]),K(e,E,t))}const vO=Symbol.for("v-scx"),YO=()=>gt(vO),VO="3.3.13",xO="http://www.w3.org/2000/svg",FE=typeof document<"u"?document:null,Js=FE&&FE.createElement("template"),wO={insert:(e,E,t)=>{E.insertBefore(e,t||null)},remove:e=>{const E=e.parentNode;E&&E.removeChild(e)},createElement:(e,E,t,T)=>{const r=E?FE.createElementNS(xO,e):FE.createElement(e,t?{is:t}:void 0);return e==="select"&&T&&T.multiple!=null&&r.setAttribute("multiple",T.multiple),r},createText:e=>FE.createTextNode(e),createComment:e=>FE.createComment(e),setText:(e,E)=>{e.nodeValue=E},setElementText:(e,E)=>{e.textContent=E},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>FE.querySelector(e),setScopeId(e,E){e.setAttribute(E,"")},insertStaticContent(e,E,t,T,r,s){const n=t?t.previousSibling:E.lastChild;if(r&&(r===s||r.nextSibling))for(;E.insertBefore(r.cloneNode(!0),t),!(r===s||!(r=r.nextSibling)););else{Js.innerHTML=T?`<svg>${e}</svg>`:e;const R=Js.content;if(T){const o=R.firstChild;for(;o.firstChild;)R.appendChild(o.firstChild);R.removeChild(o)}E.insertBefore(R,t)}return[n?n.nextSibling:E.firstChild,t?t.previousSibling:E.lastChild]}},WO=Symbol("_vtc");function XO(e,E,t){const T=e[WO];T&&(E=(E?[E,...T]:[...T]).join(" ")),E==null?e.removeAttribute("class"):t?e.setAttribute("class",E):e.className=E}const $O=Symbol("_vod"),KO=Symbol("");function JO(e,E,t){const T=e.style,r=de(t);if(t&&!r){if(E&&!de(E))for(const s in E)t[s]==null&&ar(T,s,"");for(const s in t)ar(T,s,t[s])}else{const s=T.display;if(r){if(E!==t){const n=T[KO];n&&(t+=";"+n),T.cssText=t}}else E&&e.removeAttribute("style");$O in e&&(T.display=s)}}const ks=/\s*!important$/;function ar(e,E,t){if(z(t))t.forEach(T=>ar(e,E,T));else if(t==null&&(t=""),E.startsWith("--"))e.setProperty(E,t);else{const T=kO(e,E);ks.test(t)?e.setProperty(ot(T),t.replace(ks,""),"important"):e[T]=t}}const js=["Webkit","Moz","ms"],qT={};function kO(e,E){const t=qT[E];if(t)return t;let T=AE(E);if(T!=="filter"&&T in e)return qT[E]=T;T=UT(T);for(let r=0;r<js.length;r++){const s=js[r]+T;if(s in e)return qT[E]=s}return E}const qs="http://www.w3.org/1999/xlink";function jO(e,E,t,T,r){if(T&&E.startsWith("xlink:"))t==null?e.removeAttributeNS(qs,E.slice(6,E.length)):e.setAttributeNS(qs,E,t);else{const s=Qi(E);t==null||s&&!yR(t)?e.removeAttribute(E):e.setAttribute(E,s?"":t)}}function qO(e,E,t,T,r,s,n){if(E==="innerHTML"||E==="textContent"){T&&n(T,r,s),e[E]=t??"";return}const R=e.tagName;if(E==="value"&&R!=="PROGRESS"&&!R.includes("-")){e._value=t;const A=R==="OPTION"?e.getAttribute("value"):e.value,i=t??"";A!==i&&(e.value=i),t==null&&e.removeAttribute(E);return}let o=!1;if(t===""||t==null){const A=typeof e[E];A==="boolean"?t=yR(t):t==null&&A==="string"?(t="",o=!0):A==="number"&&(t=0,o=!0)}try{e[E]=t}catch{}o&&e.removeAttribute(E)}function QO(e,E,t,T){e.addEventListener(E,t,T)}function ZO(e,E,t,T){e.removeEventListener(E,t,T)}const Qs=Symbol("_vei");function zO(e,E,t,T,r=null){const s=e[Qs]||(e[Qs]={}),n=s[E];if(T&&n)n.value=T;else{const[R,o]=eI(E);if(T){const A=s[E]=TI(T,r);QO(e,R,A,o)}else n&&(ZO(e,R,n,o),s[E]=void 0)}}const Zs=/(?:Once|Passive|Capture)$/;function eI(e){let E;if(Zs.test(e)){E={};let T;for(;T=e.match(Zs);)e=e.slice(0,e.length-T[0].length),E[T[0].toLowerCase()]=!0}return[e[2]===":"?e.slice(3):ot(e.slice(2)),E]}let QT=0;const EI=Promise.resolve(),tI=()=>QT||(EI.then(()=>QT=0),QT=Date.now());function TI(e,E){const t=T=>{if(!T._vts)T._vts=Date.now();else if(T._vts<=t.attached)return;ze(rI(T,t.value),E,5,[T])};return t.value=e,t.attached=tI(),t}function rI(e,E){if(z(E)){const t=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{t.call(e),e._stopped=!0},E.map(T=>r=>!r._stopped&&T&&T(r))}else return E}const zs=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&e.charCodeAt(2)>96&&e.charCodeAt(2)<123,sI=(e,E,t,T,r=!1,s,n,R,o)=>{E==="class"?XO(e,T,r):E==="style"?JO(e,t,T):DT(E)?mr(E)||zO(e,E,t,T,n):(E[0]==="."?(E=E.slice(1),!0):E[0]==="^"?(E=E.slice(1),!1):nI(e,E,T,r))?qO(e,E,T,s,n,R,o):(E==="true-value"?e._trueValue=T:E==="false-value"&&(e._falseValue=T),jO(e,E,T,r))};function nI(e,E,t,T){if(T)return!!(E==="innerHTML"||E==="textContent"||E in e&&zs(E)&&Te(t));if(E==="spellcheck"||E==="draggable"||E==="translate"||E==="form"||E==="list"&&e.tagName==="INPUT"||E==="type"&&e.tagName==="TEXTAREA")return!1;if(E==="width"||E==="height"){const r=e.tagName;if(r==="IMG"||r==="VIDEO"||r==="CANVAS"||r==="SOURCE")return!1}return zs(E)&&de(t)?!1:E in e}const RI=He({patchProp:sI},wO);let en;function AI(){return en||(en=lO(RI))}const oI=(...e)=>{const E=AI().createApp(...e),{mount:t}=E;return E.mount=T=>{const r=iI(T);if(!r)return;const s=E._component;!Te(s)&&!s.render&&!s.template&&(s.template=r.innerHTML),r.innerHTML="";const n=t(r,!1,r instanceof SVGElement);return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),n},E};function iI(e){return de(e)?document.querySelector(e):e}var En=me({props:{code:{type:String,required:!0},language:{type:String,default:""},autodetect:{type:Boolean,default:!0},ignoreIllegals:{type:Boolean,default:!0}},setup:function(e){var E=uE(e.language);tt(function(){return e.language},function(r){E.value=r});var t=nE(function(){return e.autodetect||!E.value}),T=nE(function(){return!t.value&&!Ut.getLanguage(E.value)});return{className:nE(function(){return T.value?"":"hljs "+E.value}),highlightedCode:nE(function(){var r;if(T.value)return console.warn('The language "'+E.value+'" you specified could not be found.'),e.code.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;");if(t.value){var s=Ut.highlightAuto(e.code);return E.value=(r=s.language)!==null&&r!==void 0?r:"",s.value}return(s=Ut.highlight(e.code,{language:E.value,ignoreIllegals:e.ignoreIllegals})).value})}},render:function(){return Xt("pre",{},[Xt("code",{class:this.className,innerHTML:this.highlightedCode})])}}),SI={install:function(e){e.component("highlightjs",En)},component:En},OI=!1;/*!
 * pinia v2.1.7
 * (c) 2023 Eduardo San Martin Morote
 * @license MIT
 */let MA;const FT=e=>MA=e,UA=Symbol();function Nr(e){return e&&typeof e=="object"&&Object.prototype.toString.call(e)==="[object Object]"&&typeof e.toJSON!="function"}var yt;(function(e){e.direct="direct",e.patchObject="patch object",e.patchFunction="patch function"})(yt||(yt={}));function II(){const e=FR(!0),E=e.run(()=>uE({}));let t=[],T=[];const r=gT({install(s){FT(r),r._a=s,s.provide(UA,r),s.config.globalProperties.$pinia=r,T.forEach(n=>t.push(n)),T=[]},use(s){return!this._a&&!OI?T.push(s):t.push(s),this},_p:t,_a:null,_e:e,_s:new Map,state:E});return r}const hA=()=>{};function tn(e,E,t,T=hA){e.push(E);const r=()=>{const s=e.indexOf(E);s>-1&&(e.splice(s,1),T())};return!t&&vR()&&zi(r),r}function jE(e,...E){e.slice().forEach(t=>{t(...E)})}const aI=e=>e();function lr(e,E){e instanceof Map&&E instanceof Map&&E.forEach((t,T)=>e.set(T,t)),e instanceof Set&&E instanceof Set&&E.forEach(e.add,e);for(const t in E){if(!E.hasOwnProperty(t))continue;const T=E[t],r=e[t];Nr(r)&&Nr(T)&&e.hasOwnProperty(t)&&!Me(T)&&!fE(T)?e[t]=lr(r,T):e[t]=T}return e}const NI=Symbol();function lI(e){return!Nr(e)||!e.hasOwnProperty(NI)}const{assign:CE}=Object;function _I(e){return!!(Me(e)&&e.effect)}function CI(e,E,t,T){const{state:r,actions:s,getters:n}=E,R=t.state.value[e];let o;function A(){R||(t.state.value[e]=r?r():{});const i=DS(t.state.value[e]);return CE(i,s,Object.keys(n||{}).reduce((O,a)=>(O[a]=gT(nE(()=>{FT(t);const P=t._s.get(e);return n[a].call(P,P)})),O),{}))}return o=GA(e,A,E,t,T,!0),o}function GA(e,E,t={},T,r,s){let n;const R=CE({actions:{}},t),o={deep:!0};let A,i,O=[],a=[],P;const U=T.state.value[e];!s&&!U&&(T.state.value[e]={}),uE({});let b;function x(ee){let j;A=i=!1,typeof ee=="function"?(ee(T.state.value[e]),j={type:yt.patchFunction,storeId:e,events:P}):(lr(T.state.value[e],ee),j={type:yt.patchObject,payload:ee,storeId:e,events:P});const _=b=Symbol();EA().then(()=>{b===_&&(A=!0)}),i=!0,jE(O,j,T.state.value[e])}const $=s?function(){const{state:j}=t,_=j?j():{};this.$patch(u=>{CE(u,_)})}:hA;function k(){n.stop(),O=[],a=[],T._s.delete(e)}function V(ee,j){return function(){FT(T);const _=Array.from(arguments),u=[],c=[];function F(Z){u.push(Z)}function J(Z){c.push(Z)}jE(a,{args:_,name:ee,store:re,after:F,onError:J});let le;try{le=j.apply(this&&this.$id===e?this:re,_)}catch(Z){throw jE(c,Z),Z}return le instanceof Promise?le.then(Z=>(jE(u,Z),Z)).catch(Z=>(jE(c,Z),Promise.reject(Z))):(jE(u,le),le)}}const v={_p:T,$id:e,$onAction:tn.bind(null,a),$patch:x,$reset:$,$subscribe(ee,j={}){const _=tn(O,ee,j.detached,()=>u()),u=n.run(()=>tt(()=>T.state.value[e],c=>{(j.flush==="sync"?i:A)&&ee({storeId:e,type:yt.direct,events:P},c)},CE({},o,j)));return _},$dispose:k},re=ME(v);T._s.set(e,re);const Ae=(T._a&&T._a.runWithContext||aI)(()=>T._e.run(()=>(n=FR()).run(E)));for(const ee in Ae){const j=Ae[ee];if(Me(j)&&!_I(j)||fE(j))s||(U&&lI(j)&&(Me(j)?j.value=U[ee]:lr(j,U[ee])),T.state.value[e][ee]=j);else if(typeof j=="function"){const _=V(ee,j);Ae[ee]=_,R.actions[ee]=j}}return CE(re,Ae),CE(Oe(re),Ae),Object.defineProperty(re,"$state",{get:()=>T.state.value[e],set:ee=>{x(j=>{CE(j,ee)})}}),T._p.forEach(ee=>{CE(re,n.run(()=>ee({store:re,app:T._a,pinia:T,options:R})))}),U&&s&&t.hydrate&&t.hydrate(re.$state,U),A=!0,i=!0,re}function gA(e,E,t){let T,r;const s=typeof E=="function";typeof e=="string"?(T=e,r=s?t:E):(r=e,T=e.id);function n(R,o){const A=iO();return R=R||(A?gt(UA,null):null),R&&FT(R),R=MA,R._s.has(T)||(s?GA(T,E,r,R):CI(T,r,R)),R._s.get(T)}return n.$id=T,n}function cI(e,E){return _r(e,e.childNodes,E)}function _r(e,E,{mode:t="open",delegatesFocus:T=!1}={mode:"open"}){try{const r=e.shadowRoot;if(r!=null){console.error("[shadow] Attach shadow multiple times",e,E,r);return}else{const s=e.attachShadow({mode:t,delegatesFocus:T});return E&&LI(s,E),s}}catch(r){console.error("[shadow] make shadow-root failed",e,E),console.error(r)}}function LI(e,E){const t=document.createDocumentFragment();for(const T of E)t.appendChild(T);e.appendChild(t)}const uI=document.createDocumentFragment(),_T=me({props:{media:String,nonce:String},setup(e,{slots:E}){return()=>{var t;return Xt("style",{media:e.media,nonce:e.nonce},(t=E.default)==null?void 0:t.call(E))}}}),CT=pI()(me({props:{mode:{type:String,default:"open"},delegatesFocus:{type:Boolean,default:!1},abstract:{type:Boolean,default:!1},tag:{type:String,default:"div"},adoptedStyleSheets:{type:Array}},emits:["error"],setup(e,{slots:E,expose:t,emit:T}){const r=uE(!1),s=uE(),n=uE(),R=uE(),o=nE(()=>R.value??uI),A=ME({shadow_root:R});return t(A),OA(()=>{r.value=e.abstract}),Wr(()=>{var i;try{r.value?n.value.parentElement.shadowRoot?R.value=n.value.parentElement.shadowRoot:R.value=_r(n.value.parentElement,void 0,{mode:e.mode,delegatesFocus:e.delegatesFocus}):R.value=_r(s.value,void 0,{mode:e.mode,delegatesFocus:e.delegatesFocus}),(i=R.value)==null||i.styleSheets}catch(O){console.error(O),T("error",O)}}),tt([R,()=>e.adoptedStyleSheets],([i,O])=>{if(!(!i||!O))try{i.adoptedStyleSheets=O}catch(a){console.error(a),T("error",a)}}),()=>{var O;const i=Xt(fO,{ref:n,to:o.value},[(O=E.default)==null?void 0:O.call(E)]);return r.value?i:Xt(e.tag,{ref:s},i)}},install:mA,Style:_T}));function pI(){return e=>e}function mA(e){e.component("shadow-root",CT),e.directive("shadow",{beforeMount(E){console.warn("[VueShadowDom] Deprecated v-shadow directive, use <shadow-root> component"),cI(E)}})}var fI={ShadowRoot:CT,ShadowStyle:_T,shadow_root:CT,shadow_style:_T,install:mA};const PI="/assets/ruby-logo-kn_8RniZ.svg";var Cr={exports:{}};(function(e,E){(function(t,T){T(E)})(QE,function(t){var T={logger:self.console,WebSocket:self.WebSocket},r={log:function(){if(this.enabled){for(var u,c=arguments.length,F=Array(c),J=0;J<c;J++)F[J]=arguments[J];F.push(Date.now()),(u=T.logger).log.apply(u,["[ActionCable]"].concat(F))}}},s=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(_){return typeof _}:function(_){return _&&typeof Symbol=="function"&&_.constructor===Symbol&&_!==Symbol.prototype?"symbol":typeof _},n=function(_,u){if(!(_ instanceof u))throw new TypeError("Cannot call a class as a function")},R=function(){function _(u,c){for(var F=0;F<c.length;F++){var J=c[F];J.enumerable=J.enumerable||!1,J.configurable=!0,"value"in J&&(J.writable=!0),Object.defineProperty(u,J.key,J)}}return function(u,c,F){return c&&_(u.prototype,c),F&&_(u,F),u}}(),o=function(){return new Date().getTime()},A=function(u){return(o()-u)/1e3},i=function(u,c,F){return Math.max(c,Math.min(F,u))},O=function(){function _(u){n(this,_),this.visibilityDidChange=this.visibilityDidChange.bind(this),this.connection=u,this.reconnectAttempts=0}return _.prototype.start=function(){this.isRunning()||(this.startedAt=o(),delete this.stoppedAt,this.startPolling(),addEventListener("visibilitychange",this.visibilityDidChange),r.log("ConnectionMonitor started. pollInterval = "+this.getPollInterval()+" ms"))},_.prototype.stop=function(){this.isRunning()&&(this.stoppedAt=o(),this.stopPolling(),removeEventListener("visibilitychange",this.visibilityDidChange),r.log("ConnectionMonitor stopped"))},_.prototype.isRunning=function(){return this.startedAt&&!this.stoppedAt},_.prototype.recordPing=function(){this.pingedAt=o()},_.prototype.recordConnect=function(){this.reconnectAttempts=0,this.recordPing(),delete this.disconnectedAt,r.log("ConnectionMonitor recorded connect")},_.prototype.recordDisconnect=function(){this.disconnectedAt=o(),r.log("ConnectionMonitor recorded disconnect")},_.prototype.startPolling=function(){this.stopPolling(),this.poll()},_.prototype.stopPolling=function(){clearTimeout(this.pollTimeout)},_.prototype.poll=function(){var c=this;this.pollTimeout=setTimeout(function(){c.reconnectIfStale(),c.poll()},this.getPollInterval())},_.prototype.getPollInterval=function(){var c=this.constructor.pollInterval,F=c.min,J=c.max,le=c.multiplier,Z=le*Math.log(this.reconnectAttempts+1);return Math.round(i(Z,F,J)*1e3)},_.prototype.reconnectIfStale=function(){this.connectionIsStale()&&(r.log("ConnectionMonitor detected stale connection. reconnectAttempts = "+this.reconnectAttempts+", pollInterval = "+this.getPollInterval()+" ms, time disconnected = "+A(this.disconnectedAt)+" s, stale threshold = "+this.constructor.staleThreshold+" s"),this.reconnectAttempts++,this.disconnectedRecently()?r.log("ConnectionMonitor skipping reopening recent disconnect"):(r.log("ConnectionMonitor reopening"),this.connection.reopen()))},_.prototype.connectionIsStale=function(){return A(this.pingedAt?this.pingedAt:this.startedAt)>this.constructor.staleThreshold},_.prototype.disconnectedRecently=function(){return this.disconnectedAt&&A(this.disconnectedAt)<this.constructor.staleThreshold},_.prototype.visibilityDidChange=function(){var c=this;document.visibilityState==="visible"&&setTimeout(function(){(c.connectionIsStale()||!c.connection.isOpen())&&(r.log("ConnectionMonitor reopening stale connection on visibilitychange. visibilityState = "+document.visibilityState),c.connection.reopen())},200)},_}();O.pollInterval={min:3,max:30,multiplier:5},O.staleThreshold=6;var a={message_types:{welcome:"welcome",disconnect:"disconnect",ping:"ping",confirmation:"confirm_subscription",rejection:"reject_subscription"},disconnect_reasons:{unauthorized:"unauthorized",invalid_request:"invalid_request",server_restart:"server_restart"},default_mount_path:"/cable",protocols:["actioncable-v1-json","actioncable-unsupported"]},P=a.message_types,U=a.protocols,b=U.slice(0,U.length-1),x=[].indexOf,$=function(){function _(u){n(this,_),this.open=this.open.bind(this),this.consumer=u,this.subscriptions=this.consumer.subscriptions,this.monitor=new O(this),this.disconnected=!0}return _.prototype.send=function(c){return this.isOpen()?(this.webSocket.send(JSON.stringify(c)),!0):!1},_.prototype.open=function(){return this.isActive()?(r.log("Attempted to open WebSocket, but existing socket is "+this.getState()),!1):(r.log("Opening WebSocket, current state is "+this.getState()+", subprotocols: "+U),this.webSocket&&this.uninstallEventHandlers(),this.webSocket=new T.WebSocket(this.consumer.url,U),this.installEventHandlers(),this.monitor.start(),!0)},_.prototype.close=function(){var c=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{allowReconnect:!0},F=c.allowReconnect;if(F||this.monitor.stop(),this.isActive())return this.webSocket.close()},_.prototype.reopen=function(){if(r.log("Reopening WebSocket, current state is "+this.getState()),this.isActive())try{return this.close()}catch(c){r.log("Failed to reopen WebSocket",c)}finally{r.log("Reopening WebSocket in "+this.constructor.reopenDelay+"ms"),setTimeout(this.open,this.constructor.reopenDelay)}else return this.open()},_.prototype.getProtocol=function(){if(this.webSocket)return this.webSocket.protocol},_.prototype.isOpen=function(){return this.isState("open")},_.prototype.isActive=function(){return this.isState("open","connecting")},_.prototype.isProtocolSupported=function(){return x.call(b,this.getProtocol())>=0},_.prototype.isState=function(){for(var c=arguments.length,F=Array(c),J=0;J<c;J++)F[J]=arguments[J];return x.call(F,this.getState())>=0},_.prototype.getState=function(){if(this.webSocket){for(var c in T.WebSocket)if(T.WebSocket[c]===this.webSocket.readyState)return c.toLowerCase()}return null},_.prototype.installEventHandlers=function(){for(var c in this.events){var F=this.events[c].bind(this);this.webSocket["on"+c]=F}},_.prototype.uninstallEventHandlers=function(){for(var c in this.events)this.webSocket["on"+c]=function(){}},_}();$.reopenDelay=500,$.prototype.events={message:function(u){if(this.isProtocolSupported()){var c=JSON.parse(u.data),F=c.identifier,J=c.message,le=c.reason,Z=c.reconnect,L=c.type;switch(L){case P.welcome:return this.monitor.recordConnect(),this.subscriptions.reload();case P.disconnect:return r.log("Disconnecting. Reason: "+le),this.close({allowReconnect:Z});case P.ping:return this.monitor.recordPing();case P.confirmation:return this.subscriptions.confirmSubscription(F),this.subscriptions.notify(F,"connected");case P.rejection:return this.subscriptions.reject(F);default:return this.subscriptions.notify(F,"received",J)}}},open:function(){if(r.log("WebSocket onopen event, using '"+this.getProtocol()+"' subprotocol"),this.disconnected=!1,!this.isProtocolSupported())return r.log("Protocol is unsupported. Stopping monitor and disconnecting."),this.close({allowReconnect:!1})},close:function(u){if(r.log("WebSocket onclose event"),!this.disconnected)return this.disconnected=!0,this.monitor.recordDisconnect(),this.subscriptions.notifyAll("disconnected",{willAttemptReconnect:this.monitor.isRunning()})},error:function(){r.log("WebSocket onerror event")}};var k=function(u,c){if(c!=null)for(var F in c){var J=c[F];u[F]=J}return u},V=function(){function _(u){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},F=arguments[2];n(this,_),this.consumer=u,this.identifier=JSON.stringify(c),k(this,F)}return _.prototype.perform=function(c){var F=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};return F.action=c,this.send(F)},_.prototype.send=function(c){return this.consumer.send({command:"message",identifier:this.identifier,data:JSON.stringify(c)})},_.prototype.unsubscribe=function(){return this.consumer.subscriptions.remove(this)},_}(),v=function(){function _(u){n(this,_),this.subscriptions=u,this.pendingSubscriptions=[]}return _.prototype.guarantee=function(c){this.pendingSubscriptions.indexOf(c)==-1?(r.log("SubscriptionGuarantor guaranteeing "+c.identifier),this.pendingSubscriptions.push(c)):r.log("SubscriptionGuarantor already guaranteeing "+c.identifier),this.startGuaranteeing()},_.prototype.forget=function(c){r.log("SubscriptionGuarantor forgetting "+c.identifier),this.pendingSubscriptions=this.pendingSubscriptions.filter(function(F){return F!==c})},_.prototype.startGuaranteeing=function(){this.stopGuaranteeing(),this.retrySubscribing()},_.prototype.stopGuaranteeing=function(){clearTimeout(this.retryTimeout)},_.prototype.retrySubscribing=function(){var c=this;this.retryTimeout=setTimeout(function(){c.subscriptions&&typeof c.subscriptions.subscribe=="function"&&c.pendingSubscriptions.map(function(F){r.log("SubscriptionGuarantor resubscribing "+F.identifier),c.subscriptions.subscribe(F)})},500)},_}(),re=function(){function _(u){n(this,_),this.consumer=u,this.guarantor=new v(this),this.subscriptions=[]}return _.prototype.create=function(c,F){var J=c,le=(typeof J>"u"?"undefined":s(J))==="object"?J:{channel:J},Z=new V(this.consumer,le,F);return this.add(Z)},_.prototype.add=function(c){return this.subscriptions.push(c),this.consumer.ensureActiveConnection(),this.notify(c,"initialized"),this.subscribe(c),c},_.prototype.remove=function(c){return this.forget(c),this.findAll(c.identifier).length||this.sendCommand(c,"unsubscribe"),c},_.prototype.reject=function(c){var F=this;return this.findAll(c).map(function(J){return F.forget(J),F.notify(J,"rejected"),J})},_.prototype.forget=function(c){return this.guarantor.forget(c),this.subscriptions=this.subscriptions.filter(function(F){return F!==c}),c},_.prototype.findAll=function(c){return this.subscriptions.filter(function(F){return F.identifier===c})},_.prototype.reload=function(){var c=this;return this.subscriptions.map(function(F){return c.subscribe(F)})},_.prototype.notifyAll=function(c){for(var F=this,J=arguments.length,le=Array(J>1?J-1:0),Z=1;Z<J;Z++)le[Z-1]=arguments[Z];return this.subscriptions.map(function(L){return F.notify.apply(F,[L,c].concat(le))})},_.prototype.notify=function(c,F){for(var J=arguments.length,le=Array(J>2?J-2:0),Z=2;Z<J;Z++)le[Z-2]=arguments[Z];var L=void 0;return typeof c=="string"?L=this.findAll(c):L=[c],L.map(function(G){return typeof G[F]=="function"?G[F].apply(G,le):void 0})},_.prototype.subscribe=function(c){this.sendCommand(c,"subscribe")&&this.guarantor.guarantee(c)},_.prototype.confirmSubscription=function(c){var F=this;r.log("Subscription confirmed "+c),this.findAll(c).map(function(J){return F.guarantor.forget(J)})},_.prototype.sendCommand=function(c,F){var J=c.identifier;return this.consumer.send({command:F,identifier:J})},_}(),ue=function(){function _(u){n(this,_),this._url=u,this.subscriptions=new re(this),this.connection=new $(this)}return _.prototype.send=function(c){return this.connection.send(c)},_.prototype.connect=function(){return this.connection.open()},_.prototype.disconnect=function(){return this.connection.close({allowReconnect:!1})},_.prototype.ensureActiveConnection=function(){if(!this.connection.isActive())return this.connection.open()},R(_,[{key:"url",get:function(){return Ae(this._url)}}]),_}();function Ae(_){if(typeof _=="function"&&(_=_()),_&&!/^wss?:/i.test(_)){var u=document.createElement("a");return u.href=_,u.href=u.href,u.protocol=u.protocol.replace("http","ws"),u.href}else return _}function ee(){var _=arguments.length>0&&arguments[0]!==void 0?arguments[0]:j("url")||a.default_mount_path;return new ue(_)}function j(_){var u=document.head.querySelector("meta[name='action-cable-"+_+"']");if(u)return u.getAttribute("content")}t.Connection=$,t.ConnectionMonitor=O,t.Consumer=ue,t.INTERNAL=a,t.Subscription=V,t.Subscriptions=re,t.SubscriptionGuarantor=v,t.adapters=T,t.createWebSocketURL=Ae,t.logger=r,t.createConsumer=ee,t.getConfig=j,Object.defineProperty(t,"__esModule",{value:!0})})})(Cr,Cr.exports);var DI=Cr.exports;function Tn(e,E){return H(),X("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[I("path",{"fill-rule":"evenodd",d:"M11.78 4.22a.75.75 0 0 1 0 1.06L6.56 10.5h3.69a.75.75 0 0 1 0 1.5h-5.5a.75.75 0 0 1-.75-.75v-5.5a.75.75 0 0 1 1.5 0v3.69l5.22-5.22a.75.75 0 0 1 1.06 0Z","clip-rule":"evenodd"})])}function HA(e,E){return H(),X("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[I("path",{"fill-rule":"evenodd",d:"M4.22 6.22a.75.75 0 0 1 1.06 0L8 8.94l2.72-2.72a.75.75 0 1 1 1.06 1.06l-3.25 3.25a.75.75 0 0 1-1.06 0L4.22 7.28a.75.75 0 0 1 0-1.06Z","clip-rule":"evenodd"})])}function dI(e,E){return H(),X("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[I("path",{"fill-rule":"evenodd",d:"M4.78 4.97a.75.75 0 0 1 0 1.06L2.81 8l1.97 1.97a.75.75 0 1 1-1.06 1.06l-2.5-2.5a.75.75 0 0 1 0-1.06l2.5-2.5a.75.75 0 0 1 1.06 0ZM11.22 4.97a.75.75 0 0 0 0 1.06L13.19 8l-1.97 1.97a.75.75 0 1 0 1.06 1.06l2.5-2.5a.75.75 0 0 0 0-1.06l-2.5-2.5a.75.75 0 0 0-1.06 0ZM8.856 2.008a.75.75 0 0 1 .636.848l-1.5 10.5a.75.75 0 0 1-1.484-.212l1.5-10.5a.75.75 0 0 1 .848-.636Z","clip-rule":"evenodd"})])}function MI(e,E){return H(),X("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[I("path",{"fill-rule":"evenodd",d:"M5 3.25V4H2.75a.75.75 0 0 0 0 1.5h.3l.815 8.15A1.5 1.5 0 0 0 5.357 15h5.285a1.5 1.5 0 0 0 1.493-1.35l.815-8.15h.3a.75.75 0 0 0 0-1.5H11v-.75A2.25 2.25 0 0 0 8.75 1h-1.5A2.25 2.25 0 0 0 5 3.25Zm2.25-.75a.75.75 0 0 0-.75.75V4h3v-.75a.75.75 0 0 0-.75-.75h-1.5ZM6.05 6a.75.75 0 0 1 .787.713l.275 5.5a.75.75 0 0 1-1.498.075l-.275-5.5A.75.75 0 0 1 6.05 6Zm3.9 0a.75.75 0 0 1 .712.787l-.275 5.5a.75.75 0 0 1-1.498-.075l.275-5.5a.75.75 0 0 1 .786-.711Z","clip-rule":"evenodd"})])}function UI(e,E){return H(),X("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 16",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[I("path",{"fill-rule":"evenodd",d:"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14Zm2.78-4.22a.75.75 0 0 1-1.06 0L8 9.06l-1.72 1.72a.75.75 0 1 1-1.06-1.06L6.94 8 5.22 6.28a.75.75 0 0 1 1.06-1.06L8 6.94l1.72-1.72a.75.75 0 1 1 1.06 1.06L9.06 8l1.72 1.72a.75.75 0 0 1 0 1.06Z","clip-rule":"evenodd"})])}const hI=["textContent"],GI=me({__name:"TabButton",props:{label:{},count:{},isActive:{type:Boolean}},setup(e){const E=e;return(t,T)=>(H(),X("button",{class:$e(["text-sm flex items-center space-x-1 px-3 py-2 border-0",{"bg-stone-300 rounded-sm":E.isActive}])},[I("span",{class:$e({"font-medium":E.isActive})},[$t(t.$slots,"default")],2),E.count!=null?(H(),X("span",{key:0,class:$e(["p-0.5 rounded-full text-xs",{"px-1.5":E.count<10,hidden:E.count==0,"bg-stone-300":E.count>0&&!E.isActive,"bg-stone-400":E.count>0&&E.isActive}]),textContent:ne(E.count)},null,10,hI)):ie("",!0)],2))}}),yA=(e,E)=>{const t=e.__vccOpts||e;for(const[T,r]of E)t[T]=r;return t},gI={},mI={class:"px-3 py-2"};function HI(e,E){return H(),X("div",mI,[$t(e.$slots,"default")])}const IE=yA(gI,[["render",HI]]),yI={key:0},bI=I("div",{class:"text-gray-500"},"No models were initialized.",-1),BI=[bI],FI={key:1,class:"divide-y divide-stone-300"},vI=I("thead",null,[I("tr",null,[I("th",{scope:"col",class:"w-36 py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-stone-900 sm:pl-0"}," Model "),I("th",{scope:"col",class:"px-3 py-3.5 text-left text-sm font-semibold text-stone-900"},"Count")])],-1),YI={class:"divide-y divide-stone-200"},VI={class:"whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-stone-900 sm:pl-0"},xI={class:"whitespace-nowrap px-3 py-4 text-sm text-stone-500 text-center"},wI=me({__name:"ModelsPanel",props:{models:{},count:{}},setup(e){const E=e;return(t,T)=>(H(),Pe(IE,null,{default:oe(()=>[E.count==0?(H(),X("div",yI,BI)):ie("",!0),E.count>0?(H(),X("table",FI,[vI,I("tbody",YI,[(H(!0),X(ce,null,Je(E.models,(r,s)=>(H(),X("tr",{key:s},[I("td",VI,ne(s),1),I("td",xI,ne(r),1)]))),128))])])):ie("",!0)]),_:1}))}});var bA={exports:{}};(function(e){(function(E,t){e.exports?e.exports=t():E.nearley=t()})(QE,function(){function E(A,i,O){return this.id=++E.highestId,this.name=A,this.symbols=i,this.postprocess=O,this}E.highestId=0,E.prototype.toString=function(A){var i=typeof A>"u"?this.symbols.map(o).join(" "):this.symbols.slice(0,A).map(o).join(" ")+" ● "+this.symbols.slice(A).map(o).join(" ");return this.name+" → "+i};function t(A,i,O,a){this.rule=A,this.dot=i,this.reference=O,this.data=[],this.wantedBy=a,this.isComplete=this.dot===A.symbols.length}t.prototype.toString=function(){return"{"+this.rule.toString(this.dot)+"}, from: "+(this.reference||0)},t.prototype.nextState=function(A){var i=new t(this.rule,this.dot+1,this.reference,this.wantedBy);return i.left=this,i.right=A,i.isComplete&&(i.data=i.build(),i.right=void 0),i},t.prototype.build=function(){var A=[],i=this;do A.push(i.right.data),i=i.left;while(i.left);return A.reverse(),A},t.prototype.finish=function(){this.rule.postprocess&&(this.data=this.rule.postprocess(this.data,this.reference,n.fail))};function T(A,i){this.grammar=A,this.index=i,this.states=[],this.wants={},this.scannable=[],this.completed={}}T.prototype.process=function(A){for(var i=this.states,O=this.wants,a=this.completed,P=0;P<i.length;P++){var U=i[P];if(U.isComplete){if(U.finish(),U.data!==n.fail){for(var b=U.wantedBy,x=b.length;x--;){var $=b[x];this.complete($,U)}if(U.reference===this.index){var k=U.rule.name;(this.completed[k]=this.completed[k]||[]).push(U)}}}else{var k=U.rule.symbols[U.dot];if(typeof k!="string"){this.scannable.push(U);continue}if(O[k]){if(O[k].push(U),a.hasOwnProperty(k))for(var V=a[k],x=0;x<V.length;x++){var v=V[x];this.complete(U,v)}}else O[k]=[U],this.predict(k)}}},T.prototype.predict=function(A){for(var i=this.grammar.byName[A]||[],O=0;O<i.length;O++){var a=i[O],P=this.wants[A],U=new t(a,0,this.index,P);this.states.push(U)}},T.prototype.complete=function(A,i){var O=A.nextState(i);this.states.push(O)};function r(A,i){this.rules=A,this.start=i||this.rules[0].name;var O=this.byName={};this.rules.forEach(function(a){O.hasOwnProperty(a.name)||(O[a.name]=[]),O[a.name].push(a)})}r.fromCompiled=function(a,i){var O=a.Lexer;a.ParserStart&&(i=a.ParserStart,a=a.ParserRules);var a=a.map(function(U){return new E(U.name,U.symbols,U.postprocess)}),P=new r(a,i);return P.lexer=O,P};function s(){this.reset("")}s.prototype.reset=function(A,i){this.buffer=A,this.index=0,this.line=i?i.line:1,this.lastLineBreak=i?-i.col:0},s.prototype.next=function(){if(this.index<this.buffer.length){var A=this.buffer[this.index++];return A===`
`&&(this.line+=1,this.lastLineBreak=this.index),{value:A}}},s.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak}},s.prototype.formatError=function(A,i){var O=this.buffer;if(typeof O=="string"){var a=O.split(`
`).slice(Math.max(0,this.line-5),this.line),P=O.indexOf(`
`,this.index);P===-1&&(P=O.length);var U=this.index-this.lastLineBreak,b=String(this.line).length;return i+=" at line "+this.line+" col "+U+`:

`,i+=a.map(function($,k){return x(this.line-a.length+k+1,b)+" "+$},this).join(`
`),i+=`
`+x("",b+U)+`^
`,i}else return i+" at index "+(this.index-1);function x($,k){var V=String($);return Array(k-V.length+1).join(" ")+V}};function n(A,i,O){if(A instanceof r)var a=A,O=i;else var a=r.fromCompiled(A,i);this.grammar=a,this.options={keepHistory:!1,lexer:a.lexer||new s};for(var P in O||{})this.options[P]=O[P];this.lexer=this.options.lexer,this.lexerState=void 0;var U=new T(a,0);this.table=[U],U.wants[a.start]=[],U.predict(a.start),U.process(),this.current=0}n.fail={},n.prototype.feed=function(A){var i=this.lexer;i.reset(A,this.lexerState);for(var O;;){try{if(O=i.next(),!O)break}catch(Ae){var b=new T(this.grammar,this.current+1);this.table.push(b);var a=new Error(this.reportLexerError(Ae));throw a.offset=this.current,a.token=Ae.token,a}var P=this.table[this.current];this.options.keepHistory||delete this.table[this.current-1];var U=this.current+1,b=new T(this.grammar,U);this.table.push(b);for(var x=O.text!==void 0?O.text:O.value,$=i.constructor===s?O.value:O,k=P.scannable,V=k.length;V--;){var v=k[V],re=v.rule.symbols[v.dot];if(re.test?re.test($):re.type?re.type===O.type:re.literal===x){var ue=v.nextState({data:$,token:O,isToken:!0,reference:U-1});b.states.push(ue)}}if(b.process(),b.states.length===0){var a=new Error(this.reportError(O));throw a.offset=this.current,a.token=O,a}this.options.keepHistory&&(P.lexerState=i.save()),this.current++}return P&&(this.lexerState=i.save()),this.results=this.finish(),this},n.prototype.reportLexerError=function(A){var i,O,a=A.token;return a?(i="input "+JSON.stringify(a.text[0])+" (lexer error)",O=this.lexer.formatError(a,"Syntax error")):(i="input (lexer error)",O=A.message),this.reportErrorCommon(O,i)},n.prototype.reportError=function(A){var i=(A.type?A.type+" token: ":"")+JSON.stringify(A.value!==void 0?A.value:A),O=this.lexer.formatError(A,"Syntax error");return this.reportErrorCommon(O,i)},n.prototype.reportErrorCommon=function(A,i){var O=[];O.push(A);var a=this.table.length-2,P=this.table[a],U=P.states.filter(function(x){var $=x.rule.symbols[x.dot];return $&&typeof $!="string"});if(U.length===0)O.push("Unexpected "+i+`. I did not expect any more input. Here is the state of my parse table:
`),this.displayStateStack(P.states,O);else{O.push("Unexpected "+i+`. Instead, I was expecting to see one of the following:
`);var b=U.map(function(x){return this.buildFirstStateStack(x,[])||[x]},this);b.forEach(function(x){var $=x[0],k=$.rule.symbols[$.dot],V=this.getSymbolDisplay(k);O.push("A "+V+" based on:"),this.displayStateStack(x,O)},this)}return O.push(""),O.join(`
`)},n.prototype.displayStateStack=function(A,i){for(var O,a=0,P=0;P<A.length;P++){var U=A[P],b=U.rule.toString(U.dot);b===O?a++:(a>0&&i.push("    ^ "+a+" more lines identical to this"),a=0,i.push("    "+b)),O=b}},n.prototype.getSymbolDisplay=function(A){return R(A)},n.prototype.buildFirstStateStack=function(A,i){if(i.indexOf(A)!==-1)return null;if(A.wantedBy.length===0)return[A];var O=A.wantedBy[0],a=[A].concat(i),P=this.buildFirstStateStack(O,a);return P===null?null:[A].concat(P)},n.prototype.save=function(){var A=this.table[this.current];return A.lexerState=this.lexerState,A},n.prototype.restore=function(A){var i=A.index;this.current=i,this.table[i]=A,this.table.splice(i+1),this.lexerState=A.lexerState,this.results=this.finish()},n.prototype.rewind=function(A){if(!this.options.keepHistory)throw new Error("set option `keepHistory` to enable rewinding");this.restore(this.table[A])},n.prototype.finish=function(){var A=[],i=this.grammar.start,O=this.table[this.table.length-1];return O.states.forEach(function(a){a.rule.name===i&&a.dot===a.rule.symbols.length&&a.reference===0&&a.data!==n.fail&&A.push(a)}),A.map(function(a){return a.data})};function R(A){var i=typeof A;if(i==="string")return A;if(i==="object"){if(A.literal)return JSON.stringify(A.literal);if(A instanceof RegExp)return"character matching "+A;if(A.type)return A.type+" token";if(A.test)return"token matching "+String(A.test);throw new Error("Unknown symbol type: "+A)}}function o(A){var i=typeof A;if(i==="string")return A;if(i==="object"){if(A.literal)return JSON.stringify(A.literal);if(A instanceof RegExp)return A.toString();if(A.type)return"%"+A.type;if(A.test)return"<"+String(A.test)+">";throw new Error("Unknown symbol type: "+A)}}return{Parser:n,Grammar:r,Rule:E}})})(bA);var WI=bA.exports;const XI=fT(WI);var BA=Object.defineProperty,$I=Object.defineProperties,KI=Object.getOwnPropertyDescriptors,cT=Object.getOwnPropertySymbols,FA=Object.prototype.hasOwnProperty,vA=Object.prototype.propertyIsEnumerable,rn=(e,E,t)=>E in e?BA(e,E,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[E]=t,ye=(e,E)=>{for(var t in E||(E={}))FA.call(E,t)&&rn(e,t,E[t]);if(cT)for(var t of cT(E))vA.call(E,t)&&rn(e,t,E[t]);return e},Ve=(e,E)=>$I(e,KI(E)),JI=(e,E)=>{var t={};for(var T in e)FA.call(e,T)&&E.indexOf(T)<0&&(t[T]=e[T]);if(e!=null&&cT)for(var T of cT(e))E.indexOf(T)<0&&vA.call(e,T)&&(t[T]=e[T]);return t},kI=(e,E)=>{for(var t in E)BA(e,t,{get:E[t],enumerable:!0})},YA={};kI(YA,{bigquery:()=>Oa,db2:()=>Da,db2i:()=>ya,hive:()=>Wa,mariadb:()=>Za,mysql:()=>RN,n1ql:()=>lN,plsql:()=>DN,postgresql:()=>bN,redshift:()=>XN,singlestoredb:()=>$l,snowflake:()=>e_,spark:()=>zN,sql:()=>Cl,sqlite:()=>ol,transactsql:()=>Bl,trino:()=>Ml});var d=e=>e.flatMap(jI),jI=e=>RT(QI(e)).map(qI),qI=e=>e.replace(/ +/g," ").trim(),QI=e=>({type:"mandatory_block",items:qr(e,0)[0]}),qr=(e,E,t)=>{const T=[];for(;e[E];){const[r,s]=ZI(e,E);if(T.push(r),E=s,e[E]==="|")E++;else if(e[E]==="}"||e[E]==="]"){if(t!==e[E])throw new Error(`Unbalanced parenthesis in: ${e}`);return E++,[T,E]}else if(E===e.length){if(t)throw new Error(`Unbalanced parenthesis in: ${e}`);return[T,E]}else throw new Error(`Unexpected "${e[E]}"`)}return[T,E]},ZI=(e,E)=>{const t=[];for(;;){const[T,r]=zI(e,E);if(T)t.push(T),E=r;else break}return t.length===1?[t[0],E]:[{type:"concatenation",items:t},E]},zI=(e,E)=>{if(e[E]==="{")return ea(e,E+1);if(e[E]==="[")return Ea(e,E+1);{let t="";for(;e[E]&&/[A-Za-z0-9_ ]/.test(e[E]);)t+=e[E],E++;return[t,E]}},ea=(e,E)=>{const[t,T]=qr(e,E,"}");return[{type:"mandatory_block",items:t},T]},Ea=(e,E)=>{const[t,T]=qr(e,E,"]");return[{type:"optional_block",items:t},T]},RT=e=>{if(typeof e=="string")return[e];if(e.type==="concatenation")return e.items.map(RT).reduce(ta,[""]);if(e.type==="mandatory_block")return e.items.flatMap(RT);if(e.type==="optional_block")return["",...e.items.flatMap(RT)];throw new Error(`Unknown node type: ${e}`)},ta=(e,E)=>{const t=[];for(const T of e)for(const r of E)t.push(T+r);return t},VA=(e=>(e.QUOTED_IDENTIFIER="QUOTED_IDENTIFIER",e.IDENTIFIER="IDENTIFIER",e.STRING="STRING",e.VARIABLE="VARIABLE",e.RESERVED_DATA_TYPE="RESERVED_DATA_TYPE",e.RESERVED_PARAMETERIZED_DATA_TYPE="RESERVED_PARAMETERIZED_DATA_TYPE",e.RESERVED_KEYWORD="RESERVED_KEYWORD",e.RESERVED_FUNCTION_NAME="RESERVED_FUNCTION_NAME",e.RESERVED_PHRASE="RESERVED_PHRASE",e.RESERVED_SET_OPERATION="RESERVED_SET_OPERATION",e.RESERVED_CLAUSE="RESERVED_CLAUSE",e.RESERVED_SELECT="RESERVED_SELECT",e.RESERVED_JOIN="RESERVED_JOIN",e.ARRAY_IDENTIFIER="ARRAY_IDENTIFIER",e.ARRAY_KEYWORD="ARRAY_KEYWORD",e.CASE="CASE",e.END="END",e.WHEN="WHEN",e.ELSE="ELSE",e.THEN="THEN",e.LIMIT="LIMIT",e.BETWEEN="BETWEEN",e.AND="AND",e.OR="OR",e.XOR="XOR",e.OPERATOR="OPERATOR",e.COMMA="COMMA",e.ASTERISK="ASTERISK",e.DOT="DOT",e.OPEN_PAREN="OPEN_PAREN",e.CLOSE_PAREN="CLOSE_PAREN",e.LINE_COMMENT="LINE_COMMENT",e.BLOCK_COMMENT="BLOCK_COMMENT",e.NUMBER="NUMBER",e.NAMED_PARAMETER="NAMED_PARAMETER",e.QUOTED_PARAMETER="QUOTED_PARAMETER",e.NUMBERED_PARAMETER="NUMBERED_PARAMETER",e.POSITIONAL_PARAMETER="POSITIONAL_PARAMETER",e.CUSTOM_PARAMETER="CUSTOM_PARAMETER",e.DELIMITER="DELIMITER",e.EOF="EOF",e))(VA||{}),xA=e=>({type:"EOF",raw:"«EOF»",text:"«EOF»",start:e}),Rt=xA(1/0),qE=e=>E=>E.type===e.type&&E.text===e.text,wE={ARRAY:qE({text:"ARRAY",type:"RESERVED_DATA_TYPE"}),BY:qE({text:"BY",type:"RESERVED_KEYWORD"}),SET:qE({text:"SET",type:"RESERVED_CLAUSE"}),STRUCT:qE({text:"STRUCT",type:"RESERVED_DATA_TYPE"}),WINDOW:qE({text:"WINDOW",type:"RESERVED_CLAUSE"}),VALUES:qE({text:"VALUES",type:"RESERVED_CLAUSE"})},wA=e=>e==="RESERVED_DATA_TYPE"||e==="RESERVED_KEYWORD"||e==="RESERVED_FUNCTION_NAME"||e==="RESERVED_PHRASE"||e==="RESERVED_CLAUSE"||e==="RESERVED_SELECT"||e==="RESERVED_SET_OPERATION"||e==="RESERVED_JOIN"||e==="ARRAY_KEYWORD"||e==="CASE"||e==="END"||e==="WHEN"||e==="ELSE"||e==="THEN"||e==="LIMIT"||e==="BETWEEN"||e==="AND"||e==="OR"||e==="XOR",Ta=e=>e==="AND"||e==="OR"||e==="XOR",ra=["KEYS.NEW_KEYSET","KEYS.ADD_KEY_FROM_RAW_BYTES","AEAD.DECRYPT_BYTES","AEAD.DECRYPT_STRING","AEAD.ENCRYPT","KEYS.KEYSET_CHAIN","KEYS.KEYSET_FROM_JSON","KEYS.KEYSET_TO_JSON","KEYS.ROTATE_KEYSET","KEYS.KEYSET_LENGTH","ANY_VALUE","ARRAY_AGG","AVG","CORR","COUNT","COUNTIF","COVAR_POP","COVAR_SAMP","MAX","MIN","ST_CLUSTERDBSCAN","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","VAR_POP","VAR_SAMP","ANY_VALUE","ARRAY_AGG","ARRAY_CONCAT_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","COUNT","COUNTIF","LOGICAL_AND","LOGICAL_OR","MAX","MIN","STRING_AGG","SUM","APPROX_COUNT_DISTINCT","APPROX_QUANTILES","APPROX_TOP_COUNT","APPROX_TOP_SUM","ARRAY_CONCAT","ARRAY_LENGTH","ARRAY_TO_STRING","GENERATE_ARRAY","GENERATE_DATE_ARRAY","GENERATE_TIMESTAMP_ARRAY","ARRAY_REVERSE","OFFSET","SAFE_OFFSET","ORDINAL","SAFE_ORDINAL","BIT_COUNT","PARSE_BIGNUMERIC","PARSE_NUMERIC","SAFE_CAST","CURRENT_DATE","EXTRACT","DATE","DATE_ADD","DATE_SUB","DATE_DIFF","DATE_TRUNC","DATE_FROM_UNIX_DATE","FORMAT_DATE","LAST_DAY","PARSE_DATE","UNIX_DATE","CURRENT_DATETIME","DATETIME","EXTRACT","DATETIME_ADD","DATETIME_SUB","DATETIME_DIFF","DATETIME_TRUNC","FORMAT_DATETIME","LAST_DAY","PARSE_DATETIME","ERROR","EXTERNAL_QUERY","S2_CELLIDFROMPOINT","S2_COVERINGCELLIDS","ST_ANGLE","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_AZIMUTH","ST_BOUNDARY","ST_BOUNDINGBOX","ST_BUFFER","ST_BUFFERWITHTOLERANCE","ST_CENTROID","ST_CENTROID_AGG","ST_CLOSESTPOINT","ST_CLUSTERDBSCAN","ST_CONTAINS","ST_CONVEXHULL","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DUMP","ST_DWITHIN","ST_ENDPOINT","ST_EQUALS","ST_EXTENT","ST_EXTERIORRING","ST_GEOGFROM","ST_GEOGFROMGEOJSON","ST_GEOGFROMTEXT","ST_GEOGFROMWKB","ST_GEOGPOINT","ST_GEOGPOINTFROMGEOHASH","ST_GEOHASH","ST_GEOMETRYTYPE","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_INTERSECTSBOX","ST_ISCOLLECTION","ST_ISEMPTY","ST_LENGTH","ST_MAKELINE","ST_MAKEPOLYGON","ST_MAKEPOLYGONORIENTED","ST_MAXDISTANCE","ST_NPOINTS","ST_NUMGEOMETRIES","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SIMPLIFY","ST_SNAPTOGRID","ST_STARTPOINT","ST_TOUCHES","ST_UNION","ST_UNION_AGG","ST_WITHIN","ST_X","ST_Y","FARM_FINGERPRINT","MD5","SHA1","SHA256","SHA512","HLL_COUNT.INIT","HLL_COUNT.MERGE","HLL_COUNT.MERGE_PARTIAL","HLL_COUNT.EXTRACT","MAKE_INTERVAL","EXTRACT","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL","JSON_EXTRACT","JSON_QUERY","JSON_EXTRACT_SCALAR","JSON_VALUE","JSON_EXTRACT_ARRAY","JSON_QUERY_ARRAY","JSON_EXTRACT_STRING_ARRAY","JSON_VALUE_ARRAY","TO_JSON_STRING","ABS","SIGN","IS_INF","IS_NAN","IEEE_DIVIDE","RAND","SQRT","POW","POWER","EXP","LN","LOG","LOG10","GREATEST","LEAST","DIV","SAFE_DIVIDE","SAFE_MULTIPLY","SAFE_NEGATE","SAFE_ADD","SAFE_SUBTRACT","MOD","ROUND","TRUNC","CEIL","CEILING","FLOOR","COS","COSH","ACOS","ACOSH","SIN","SINH","ASIN","ASINH","TAN","TANH","ATAN","ATANH","ATAN2","RANGE_BUCKET","FIRST_VALUE","LAST_VALUE","NTH_VALUE","LEAD","LAG","PERCENTILE_CONT","PERCENTILE_DISC","NET.IP_FROM_STRING","NET.SAFE_IP_FROM_STRING","NET.IP_TO_STRING","NET.IP_NET_MASK","NET.IP_TRUNC","NET.IPV4_FROM_INT64","NET.IPV4_TO_INT64","NET.HOST","NET.PUBLIC_SUFFIX","NET.REG_DOMAIN","RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","NTILE","ROW_NUMBER","SESSION_USER","CORR","COVAR_POP","COVAR_SAMP","STDDEV_POP","STDDEV_SAMP","STDDEV","VAR_POP","VAR_SAMP","VARIANCE","ASCII","BYTE_LENGTH","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CODE_POINTS_TO_BYTES","CODE_POINTS_TO_STRING","CONCAT","CONTAINS_SUBSTR","ENDS_WITH","FORMAT","FROM_BASE32","FROM_BASE64","FROM_HEX","INITCAP","INSTR","LEFT","LENGTH","LPAD","LOWER","LTRIM","NORMALIZE","NORMALIZE_AND_CASEFOLD","OCTET_LENGTH","REGEXP_CONTAINS","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","REPEAT","REVERSE","RIGHT","RPAD","RTRIM","SAFE_CONVERT_BYTES_TO_STRING","SOUNDEX","SPLIT","STARTS_WITH","STRPOS","SUBSTR","SUBSTRING","TO_BASE32","TO_BASE64","TO_CODE_POINTS","TO_HEX","TRANSLATE","TRIM","UNICODE","UPPER","CURRENT_TIME","TIME","EXTRACT","TIME_ADD","TIME_SUB","TIME_DIFF","TIME_TRUNC","FORMAT_TIME","PARSE_TIME","CURRENT_TIMESTAMP","EXTRACT","STRING","TIMESTAMP","TIMESTAMP_ADD","TIMESTAMP_SUB","TIMESTAMP_DIFF","TIMESTAMP_TRUNC","FORMAT_TIMESTAMP","PARSE_TIMESTAMP","TIMESTAMP_SECONDS","TIMESTAMP_MILLIS","TIMESTAMP_MICROS","UNIX_SECONDS","UNIX_MILLIS","UNIX_MICROS","GENERATE_UUID","COALESCE","IF","IFNULL","NULLIF","AVG","BIT_AND","BIT_OR","BIT_XOR","CORR","COUNT","COVAR_POP","COVAR_SAMP","EXACT_COUNT_DISTINCT","FIRST","GROUP_CONCAT","GROUP_CONCAT_UNQUOTED","LAST","MAX","MIN","NEST","NTH","QUANTILES","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","TOP","UNIQUE","VARIANCE","VAR_POP","VAR_SAMP","BIT_COUNT","BOOLEAN","BYTES","CAST","FLOAT","HEX_STRING","INTEGER","STRING","COALESCE","GREATEST","IFNULL","IS_INF","IS_NAN","IS_EXPLICITLY_DEFINED","LEAST","NVL","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE","DATE_ADD","DATEDIFF","DAY","DAYOFWEEK","DAYOFYEAR","FORMAT_UTC_USEC","HOUR","MINUTE","MONTH","MSEC_TO_TIMESTAMP","NOW","PARSE_UTC_USEC","QUARTER","SEC_TO_TIMESTAMP","SECOND","STRFTIME_UTC_USEC","TIME","TIMESTAMP","TIMESTAMP_TO_MSEC","TIMESTAMP_TO_SEC","TIMESTAMP_TO_USEC","USEC_TO_TIMESTAMP","UTC_USEC_TO_DAY","UTC_USEC_TO_HOUR","UTC_USEC_TO_MONTH","UTC_USEC_TO_WEEK","UTC_USEC_TO_YEAR","WEEK","YEAR","FORMAT_IP","PARSE_IP","FORMAT_PACKED_IP","PARSE_PACKED_IP","JSON_EXTRACT","JSON_EXTRACT_SCALAR","ABS","ACOS","ACOSH","ASIN","ASINH","ATAN","ATANH","ATAN2","CEIL","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG2","LOG10","PI","POW","RADIANS","RAND","ROUND","SIN","SINH","SQRT","TAN","TANH","REGEXP_MATCH","REGEXP_EXTRACT","REGEXP_REPLACE","CONCAT","INSTR","LEFT","LENGTH","LOWER","LPAD","LTRIM","REPLACE","RIGHT","RPAD","RTRIM","SPLIT","SUBSTR","UPPER","TABLE_DATE_RANGE","TABLE_DATE_RANGE_STRICT","TABLE_QUERY","HOST","DOMAIN","TLD","AVG","COUNT","MAX","MIN","STDDEV","SUM","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER","CURRENT_USER","EVERY","FROM_BASE64","HASH","FARM_FINGERPRINT","IF","POSITION","SHA1","SOME","TO_BASE64","BQ.JOBS.CANCEL","BQ.REFRESH_MATERIALIZED_VIEW","OPTIONS","PIVOT","UNPIVOT"],sa=["ALL","AND","ANY","AS","ASC","ASSERT_ROWS_MODIFIED","AT","BETWEEN","BY","CASE","CAST","COLLATE","CONTAINS","CREATE","CROSS","CUBE","CURRENT","DEFAULT","DEFINE","DESC","DISTINCT","ELSE","END","ENUM","ESCAPE","EXCEPT","EXCLUDE","EXISTS","EXTRACT","FALSE","FETCH","FOLLOWING","FOR","FROM","FULL","GROUP","GROUPING","GROUPS","HASH","HAVING","IF","IGNORE","IN","INNER","INTERSECT","INTO","IS","JOIN","LATERAL","LEFT","LIMIT","LOOKUP","MERGE","NATURAL","NEW","NO","NOT","NULL","NULLS","OF","ON","OR","ORDER","OUTER","OVER","PARTITION","PRECEDING","PROTO","RANGE","RECURSIVE","RESPECT","RIGHT","ROLLUP","ROWS","SELECT","SET","SOME","TABLE","TABLESAMPLE","THEN","TO","TREAT","TRUE","UNBOUNDED","UNION","UNNEST","USING","WHEN","WHERE","WINDOW","WITH","WITHIN","SAFE","LIKE","COPY","CLONE","IN","OUT","INOUT","RETURNS","LANGUAGE","CASCADE","RESTRICT","DETERMINISTIC"],na=["ARRAY","BOOL","BYTES","DATE","DATETIME","GEOGRAPHY","INTERVAL","INT64","INT","SMALLINT","INTEGER","BIGINT","TINYINT","BYTEINT","NUMERIC","DECIMAL","BIGNUMERIC","BIGDECIMAL","FLOAT64","STRING","STRUCT","TIME","TIMEZONE"],Ra=d(["SELECT [ALL | DISTINCT] [AS STRUCT | AS VALUE]"]),Aa=d(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","QUALIFY","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","OMIT RECORD IF","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY SOURCE | BY TARGET] [THEN]","UPDATE SET","CLUSTER BY","FOR SYSTEM_TIME AS OF","WITH CONNECTION","WITH PARTITION COLUMNS","REMOTE WITH CONNECTION"]),sn=d(["CREATE [OR REPLACE] [TEMP|TEMPORARY|SNAPSHOT|EXTERNAL] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE","DELETE [FROM]","DROP [SNAPSHOT | EXTERNAL] TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME TO","ALTER COLUMN [IF EXISTS]","SET DEFAULT COLLATE","SET OPTIONS","DROP NOT NULL","SET DATA TYPE","ALTER SCHEMA [IF EXISTS]","ALTER [MATERIALIZED] VIEW [IF EXISTS]","ALTER BI_CAPACITY","TRUNCATE TABLE","CREATE SCHEMA [IF NOT EXISTS]","DEFAULT COLLATE","CREATE [OR REPLACE] [TEMP|TEMPORARY|TABLE] FUNCTION [IF NOT EXISTS]","CREATE [OR REPLACE] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] ROW ACCESS POLICY [IF NOT EXISTS]","GRANT TO","FILTER USING","CREATE CAPACITY","AS JSON","CREATE RESERVATION","CREATE ASSIGNMENT","CREATE SEARCH INDEX [IF NOT EXISTS]","DROP SCHEMA [IF EXISTS]","DROP [MATERIALIZED] VIEW [IF EXISTS]","DROP [TABLE] FUNCTION [IF EXISTS]","DROP PROCEDURE [IF EXISTS]","DROP ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","DROP CAPACITY [IF EXISTS]","DROP RESERVATION [IF EXISTS]","DROP ASSIGNMENT [IF EXISTS]","DROP SEARCH INDEX [IF EXISTS]","DROP [IF EXISTS]","GRANT","REVOKE","DECLARE","EXECUTE IMMEDIATE","LOOP","END LOOP","REPEAT","END REPEAT","WHILE","END WHILE","BREAK","LEAVE","CONTINUE","ITERATE","FOR","END FOR","BEGIN","BEGIN TRANSACTION","COMMIT TRANSACTION","ROLLBACK TRANSACTION","RAISE","RETURN","CALL","ASSERT","EXPORT DATA"]),oa=d(["UNION {ALL | DISTINCT}","EXCEPT DISTINCT","INTERSECT DISTINCT"]),ia=d(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),Sa=d(["TABLESAMPLE SYSTEM","ANY TYPE","ALL COLUMNS","NOT DETERMINISTIC","{ROWS | RANGE} BETWEEN","IS [NOT] DISTINCT FROM"]),Oa={name:"bigquery",tokenizerOptions:{reservedSelect:Ra,reservedClauses:[...Aa,...sn],reservedSetOperations:oa,reservedJoins:ia,reservedPhrases:Sa,reservedKeywords:sa,reservedDataTypes:na,reservedFunctionNames:ra,extraParens:["[]"],stringTypes:[{quote:'""".."""',prefixes:["R","B","RB","BR"]},{quote:"'''..'''",prefixes:["R","B","RB","BR"]},'""-bs',"''-bs",{quote:'""-raw',prefixes:["R","B","RB","BR"],requirePrefix:!0},{quote:"''-raw",prefixes:["R","B","RB","BR"],requirePrefix:!0}],identTypes:["``"],identChars:{dashes:!0},paramTypes:{positional:!0,named:["@"],quoted:["@"]},variableTypes:[{regex:String.raw`@@\w+`}],lineCommentTypes:["--","#"],operators:["&","|","^","~",">>","<<","||","=>"],postProcess:Ia},formatOptions:{onelineClauses:sn}};function Ia(e){return aa(Na(e))}function aa(e){let E=Rt;return e.map(t=>t.text==="OFFSET"&&E.text==="["?(E=t,Ve(ye({},t),{type:"RESERVED_FUNCTION_NAME"})):(E=t,t))}function Na(e){var E;const t=[];for(let T=0;T<e.length;T++){const r=e[T];if((wE.ARRAY(r)||wE.STRUCT(r))&&((E=e[T+1])==null?void 0:E.text)==="<"){const s=la(e,T+1),n=e.slice(T,s+1);t.push({type:"IDENTIFIER",raw:n.map(nn("raw")).join(""),text:n.map(nn("text")).join(""),start:r.start}),T=s}else t.push(r)}return t}var nn=e=>E=>E.type==="IDENTIFIER"||E.type==="COMMA"?E[e]+" ":E[e];function la(e,E){let t=0;for(let T=E;T<e.length;T++){const r=e[T];if(r.text==="<"?t++:r.text===">"?t--:r.text===">>"&&(t-=2),t===0)return T}return e.length-1}var _a=["ARRAY_AGG","AVG","CORRELATION","COUNT","COUNT_BIG","COVARIANCE","COVARIANCE_SAMP","CUME_DIST","GROUPING","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_ICPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV","STDDEV_SAMP","SUM","VARIANCE","VARIANCE_SAMP","XMLAGG","XMLGROUP","ABS","ABSVAL","ACOS","ADD_DAYS","ADD_HOURS","ADD_MINUTES","ADD_MONTHS","ADD_SECONDS","ADD_YEARS","AGE","ARRAY_DELETE","ARRAY_FIRST","ARRAY_LAST","ARRAY_NEXT","ARRAY_PRIOR","ASCII","ASCII_STR","ASIN","ATAN","ATAN2","ATANH","BITAND","BITANDNOT","BITOR","BITXOR","BITNOT","BPCHAR","BSON_TO_JSON","BTRIM","CARDINALITY","CEILING","CEIL","CHARACTER_LENGTH","CHR","COALESCE","COLLATION_KEY","COLLATION_KEY_BIT","COMPARE_DECFLOAT","CONCAT","COS","COSH","COT","CURSOR_ROWCOUNT","DATAPARTITIONNUM","DATE_PART","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFWEEK_ISO","DAYOFYEAR","DAYS","DAYS_BETWEEN","DAYS_TO_END_OF_MONTH","DBPARTITIONNUM","DECFLOAT","DECFLOAT_FORMAT","DECODE","DECRYPT_BIN","DECRYPT_CHAR","DEGREES","DEREF","DIFFERENCE","DIGITS","DOUBLE_PRECISION","EMPTY_BLOB","EMPTY_CLOB","EMPTY_DBCLOB","EMPTY_NCLOB","ENCRYPT","EVENT_MON_STATE","EXP","EXTRACT","FIRST_DAY","FLOOR","FROM_UTC_TIMESTAMP","GENERATE_UNIQUE","GETHINT","GREATEST","HASH","HASH4","HASH8","HASHEDVALUE","HEX","HEXTORAW","HOUR","HOURS_BETWEEN","IDENTITY_VAL_LOCAL","IFNULL","INITCAP","INSERT","INSTR","INSTR2","INSTR4","INSTRB","INTNAND","INTNOR","INTNXOR","INTNNOT","ISNULL","JSON_ARRAY","JSON_OBJECT","JSON_QUERY","JSON_TO_BSON","JSON_VALUE","JULIAN_DAY","LAST_DAY","LCASE","LEAST","LEFT","LENGTH","LENGTH2","LENGTH4","LENGTHB","LN","LOCATE","LOCATE_IN_STRING","LOG10","LONG_VARCHAR","LONG_VARGRAPHIC","LOWER","LPAD","LTRIM","MAX","MAX_CARDINALITY","MICROSECOND","MIDNIGHT_SECONDS","MIN","MINUTE","MINUTES_BETWEEN","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","MULTIPLY_ALT","NEXT_DAY","NEXT_MONTH","NEXT_QUARTER","NEXT_WEEK","NEXT_YEAR","NORMALIZE_DECFLOAT","NOW","NULLIF","NVL","NVL2","OCTET_LENGTH","OVERLAY","PARAMETER","POSITION","POSSTR","POW","POWER","QUANTIZE","QUARTER","QUOTE_IDENT","QUOTE_LITERAL","RADIANS","RAISE_ERROR","RAND","RANDOM","RAWTOHEX","REC2XML","REGEXP_COUNT","REGEXP_EXTRACT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_MATCH_COUNT","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","RID","RID_BIT","RIGHT","ROUND","ROUND_TIMESTAMP","RPAD","RTRIM","SECLABEL","SECLABEL_BY_NAME","SECLABEL_TO_CHAR","SECOND","SECONDS_BETWEEN","SIGN","SIN","SINH","SOUNDEX","SPACE","SQRT","STRIP","STRLEFT","STRPOS","STRRIGHT","SUBSTR","SUBSTR2","SUBSTR4","SUBSTRB","SUBSTRING","TABLE_NAME","TABLE_SCHEMA","TAN","TANH","THIS_MONTH","THIS_QUARTER","THIS_WEEK","THIS_YEAR","TIMESTAMP_FORMAT","TIMESTAMP_ISO","TIMESTAMPDIFF","TIMEZONE","TO_CHAR","TO_CLOB","TO_DATE","TO_HEX","TO_MULTI_BYTE","TO_NCHAR","TO_NCLOB","TO_NUMBER","TO_SINGLE_BYTE","TO_TIMESTAMP","TO_UTC_TIMESTAMP","TOTALORDER","TRANSLATE","TRIM","TRIM_ARRAY","TRUNC_TIMESTAMP","TRUNCATE","TRUNC","TYPE_ID","TYPE_NAME","TYPE_SCHEMA","UCASE","UNICODE_STR","UPPER","VALUE","VARCHAR_BIT_FORMAT","VARCHAR_FORMAT","VARCHAR_FORMAT_BIT","VERIFY_GROUP_FOR_USER","VERIFY_ROLE_FOR_USER","VERIFY_TRUSTED_CONTEXT_ROLE_FOR_USER","WEEK","WEEK_ISO","WEEKS_BETWEEN","WIDTH_BUCKET","XMLATTRIBUTES","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLQUERY","XMLROW","XMLSERIALIZE","XMLTEXT","XMLVALIDATE","XMLXSROBJECTID","XSLTRANSFORM","YEAR","YEARS_BETWEEN","YMD_BETWEEN","BASE_TABLE","JSON_TABLE","UNNEST","XMLTABLE","RANK","DENSE_RANK","NTILE","LAG","LEAD","ROW_NUMBER","FIRST_VALUE","LAST_VALUE","NTH_VALUE","RATIO_TO_REPORT","CAST"],Ca=["ACTIVATE","ADD","AFTER","ALIAS","ALL","ALLOCATE","ALLOW","ALTER","AND","ANY","AS","ASENSITIVE","ASSOCIATE","ASUTIME","AT","ATTRIBUTES","AUDIT","AUTHORIZATION","AUX","AUXILIARY","BEFORE","BEGIN","BETWEEN","BINARY","BUFFERPOOL","BY","CACHE","CALL","CALLED","CAPTURE","CARDINALITY","CASCADED","CASE","CAST","CHECK","CLONE","CLOSE","CLUSTER","COLLECTION","COLLID","COLUMN","COMMENT","COMMIT","CONCAT","CONDITION","CONNECT","CONNECTION","CONSTRAINT","CONTAINS","CONTINUE","COUNT","COUNT_BIG","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_LC_CTYPE","CURRENT_PATH","CURRENT_SCHEMA","CURRENT_SERVER","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","CURSOR","CYCLE","DATA","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYS","DB2GENERAL","DB2GENRL","DB2SQL","DBINFO","DBPARTITIONNAME","DBPARTITIONNUM","DEALLOCATE","DECLARE","DEFAULT","DEFAULTS","DEFINITION","DELETE","DENSERANK","DENSE_RANK","DESCRIBE","DESCRIPTOR","DETERMINISTIC","DIAGNOSTICS","DISABLE","DISALLOW","DISCONNECT","DISTINCT","DO","DOCUMENT","DROP","DSSIZE","DYNAMIC","EACH","EDITPROC","ELSE","ELSEIF","ENABLE","ENCODING","ENCRYPTION","END","END-EXEC","ENDING","ERASE","ESCAPE","EVERY","EXCEPT","EXCEPTION","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXPLAIN","EXTENDED","EXTERNAL","EXTRACT","FENCED","FETCH","FIELDPROC","FILE","FINAL","FIRST1","FOR","FOREIGN","FREE","FROM","FULL","FUNCTION","GENERAL","GENERATED","GET","GLOBAL","GO","GOTO","GRANT","GRAPHIC","GROUP","HANDLER","HASH","HASHED_VALUE","HAVING","HINT","HOLD","HOUR","HOURS","IDENTITY","IF","IMMEDIATE","IMPORT","IN","INCLUDING","INCLUSIVE","INCREMENT","INDEX","INDICATOR","INDICATORS","INF","INFINITY","INHERIT","INNER","INOUT","INSENSITIVE","INSERT","INTEGRITY","INTERSECT","INTO","IS","ISNULL","ISOBID","ISOLATION","ITERATE","JAR","JAVA","JOIN","KEEP","KEY","LABEL","LANGUAGE","LAST3","LATERAL","LC_CTYPE","LEAVE","LEFT","LIKE","LIMIT","LINKTYPE","LOCAL","LOCALDATE","LOCALE","LOCALTIME","LOCALTIMESTAMP","LOCATOR","LOCATORS","LOCK","LOCKMAX","LOCKSIZE","LOOP","MAINTAINED","MATERIALIZED","MAXVALUE","MICROSECOND","MICROSECONDS","MINUTE","MINUTES","MINVALUE","MODE","MODIFIES","MONTH","MONTHS","NAN","NEW","NEW_TABLE","NEXTVAL","NO","NOCACHE","NOCYCLE","NODENAME","NODENUMBER","NOMAXVALUE","NOMINVALUE","NONE","NOORDER","NORMALIZED","NOT2","NOTNULL","NULL","NULLS","NUMPARTS","OBID","OF","OFF","OFFSET","OLD","OLD_TABLE","ON","OPEN","OPTIMIZATION","OPTIMIZE","OPTION","OR","ORDER","OUT","OUTER","OVER","OVERRIDING","PACKAGE","PADDED","PAGESIZE","PARAMETER","PART","PARTITION","PARTITIONED","PARTITIONING","PARTITIONS","PASSWORD","PATH","PERCENT","PIECESIZE","PLAN","POSITION","PRECISION","PREPARE","PREVVAL","PRIMARY","PRIQTY","PRIVILEGES","PROCEDURE","PROGRAM","PSID","PUBLIC","QUERY","QUERYNO","RANGE","RANK","READ","READS","RECOVERY","REFERENCES","REFERENCING","REFRESH","RELEASE","RENAME","REPEAT","RESET","RESIGNAL","RESTART","RESTRICT","RESULT","RESULT_SET_LOCATOR","RETURN","RETURNS","REVOKE","RIGHT","ROLE","ROLLBACK","ROUND_CEILING","ROUND_DOWN","ROUND_FLOOR","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_UP","ROUND_UP","ROUTINE","ROW","ROWNUMBER","ROWS","ROWSET","ROW_NUMBER","RRN","RUN","SAVEPOINT","SCHEMA","SCRATCHPAD","SCROLL","SEARCH","SECOND","SECONDS","SECQTY","SECURITY","SELECT","SENSITIVE","SEQUENCE","SESSION","SESSION_USER","SET","SIGNAL","SIMPLE","SNAN","SOME","SOURCE","SPECIFIC","SQL","SQLID","STACKED","STANDARD","START","STARTING","STATEMENT","STATIC","STATMENT","STAY","STOGROUP","STORES","STYLE","SUBSTRING","SUMMARY","SYNONYM","SYSFUN","SYSIBM","SYSPROC","SYSTEM","SYSTEM_USER","TABLE","TABLESPACE","THEN","TO","TRANSACTION","TRIGGER","TRIM","TRUNCATE","TYPE","UNDO","UNION","UNIQUE","UNTIL","UPDATE","USAGE","USER","USING","VALIDPROC","VALUE","VALUES","VARIABLE","VARIANT","VCAT","VERSION","VIEW","VOLATILE","VOLUMES","WHEN","WHENEVER","WHERE","WHILE","WITH","WITHOUT","WLM","WRITE","XMLELEMENT","XMLEXISTS","XMLNAMESPACES","YEAR","YEARS"],ca=["ARRAY","BIGINT","BINARY","BLOB","BOOLEAN","CCSID","CHAR","CHARACTER","CLOB","DATE","DATETIME","DBCLOB","DEC","DECIMAL","DOUBLE","DOUBLE PRECISION","FLOAT","FLOAT4","FLOAT8","GRAPHIC","INT","INT2","INT4","INT8","INTEGER","INTERVAL","LONG VARCHAR","LONG VARGRAPHIC","NCHAR","NCHR","NCLOB","NVARCHAR","NUMERIC","SMALLINT","REAL","TIME","TIMESTAMP","VARBINARY","VARCHAR","VARGRAPHIC"],La=d(["SELECT [ALL | DISTINCT]"]),ua=d(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY [INPUT SEQUENCE]","LIMIT","OFFSET","FETCH NEXT","FOR UPDATE [OF]","FOR {READ | FETCH} ONLY","FOR {RR | CS | UR | RS} [USE AND KEEP {SHARE | UPDATE | EXCLUSIVE} LOCKS]","WAIT FOR OUTCOME","SKIP LOCKED DATA","INTO","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT"]),Rn=d(["CREATE [GLOBAL TEMPORARY | EXTERNAL] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] VIEW","UPDATE","WHERE CURRENT OF","WITH {RR | RS | CS | UR}","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME COLUMN","ALTER [COLUMN]","SET DATA TYPE","SET NOT NULL","DROP {DEFAULT | GENERATED | NOT NULL}","TRUNCATE [TABLE]","ALLOCATE","ALTER AUDIT POLICY","ALTER BUFFERPOOL","ALTER DATABASE PARTITION GROUP","ALTER DATABASE","ALTER EVENT MONITOR","ALTER FUNCTION","ALTER HISTOGRAM TEMPLATE","ALTER INDEX","ALTER MASK","ALTER METHOD","ALTER MODULE","ALTER NICKNAME","ALTER PACKAGE","ALTER PERMISSION","ALTER PROCEDURE","ALTER SCHEMA","ALTER SECURITY LABEL COMPONENT","ALTER SECURITY POLICY","ALTER SEQUENCE","ALTER SERVER","ALTER SERVICE CLASS","ALTER STOGROUP","ALTER TABLESPACE","ALTER THRESHOLD","ALTER TRIGGER","ALTER TRUSTED CONTEXT","ALTER TYPE","ALTER USAGE LIST","ALTER USER MAPPING","ALTER VIEW","ALTER WORK ACTION SET","ALTER WORK CLASS SET","ALTER WORKLOAD","ALTER WRAPPER","ALTER XSROBJECT","ALTER STOGROUP","ALTER TABLESPACE","ALTER TRIGGER","ALTER TRUSTED CONTEXT","ALTER VIEW","ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}","AUDIT","BEGIN DECLARE SECTION","CALL","CLOSE","COMMENT ON","COMMIT [WORK]","CONNECT","CREATE [OR REPLACE] [PUBLIC] ALIAS","CREATE AUDIT POLICY","CREATE BUFFERPOOL","CREATE DATABASE PARTITION GROUP","CREATE EVENT MONITOR","CREATE [OR REPLACE] FUNCTION","CREATE FUNCTION MAPPING","CREATE HISTOGRAM TEMPLATE","CREATE [UNIQUE] INDEX","CREATE INDEX EXTENSION","CREATE [OR REPLACE] MASK","CREATE [SPECIFIC] METHOD","CREATE [OR REPLACE] MODULE","CREATE [OR REPLACE] NICKNAME","CREATE [OR REPLACE] PERMISSION","CREATE [OR REPLACE] PROCEDURE","CREATE ROLE","CREATE SCHEMA","CREATE SECURITY LABEL [COMPONENT]","CREATE SECURITY POLICY","CREATE [OR REPLACE] SEQUENCE","CREATE SERVICE CLASS","CREATE SERVER","CREATE STOGROUP","CREATE SYNONYM","CREATE [LARGE | REGULAR | {SYSTEM | USER} TEMPORARY] TABLESPACE","CREATE THRESHOLD","CREATE {TRANSFORM | TRANSFORMS} FOR","CREATE [OR REPLACE] TRIGGER","CREATE TRUSTED CONTEXT","CREATE [OR REPLACE] TYPE","CREATE TYPE MAPPING","CREATE USAGE LIST","CREATE USER MAPPING FOR","CREATE [OR REPLACE] VARIABLE","CREATE WORK ACTION SET","CREATE WORK CLASS SET","CREATE WORKLOAD","CREATE WRAPPER","DECLARE","DECLARE GLOBAL TEMPORARY TABLE","DESCRIBE [INPUT | OUTPUT]","DISCONNECT","DROP [PUBLIC] ALIAS","DROP AUDIT POLICY","DROP BUFFERPOOL","DROP DATABASE PARTITION GROUP","DROP EVENT MONITOR","DROP [SPECIFIC] FUNCTION","DROP FUNCTION MAPPING","DROP HISTOGRAM TEMPLATE","DROP INDEX [EXTENSION]","DROP MASK","DROP [SPECIFIC] METHOD","DROP MODULE","DROP NICKNAME","DROP PACKAGE","DROP PERMISSION","DROP [SPECIFIC] PROCEDURE","DROP ROLE","DROP SCHEMA","DROP SECURITY LABEL [COMPONENT]","DROP SECURITY POLICY","DROP SEQUENCE","DROP SERVER","DROP SERVICE CLASS","DROP STOGROUP","DROP TABLE HIERARCHY","DROP {TABLESPACE | TABLESPACES}","DROP {TRANSFORM | TRANSFORMS}","DROP THRESHOLD","DROP TRIGGER","DROP TRUSTED CONTEXT","DROP TYPE [MAPPING]","DROP USAGE LIST","DROP USER MAPPING FOR","DROP VARIABLE","DROP VIEW [HIERARCHY]","DROP WORK {ACTION | CLASS} SET","DROP WORKLOAD","DROP WRAPPER","DROP XSROBJECT","END DECLARE SECTION","EXECUTE [IMMEDIATE]","EXPLAIN {PLAN [SECTION] | ALL}","FETCH [FROM]","FLUSH {BUFFERPOOL | BUFFERPOOLS} ALL","FLUSH EVENT MONITOR","FLUSH FEDERATED CACHE","FLUSH OPTIMIZATION PROFILE CACHE","FLUSH PACKAGE CACHE [DYNAMIC]","FLUSH AUTHENTICATION CACHE [FOR ALL]","FREE LOCATOR","GET DIAGNOSTICS","GOTO","GRANT","INCLUDE","ITERATE","LEAVE","LOCK TABLE","LOOP","OPEN","PIPE","PREPARE","REFRESH TABLE","RELEASE","RELEASE [TO] SAVEPOINT","RENAME [TABLE | INDEX | STOGROUP | TABLESPACE]","REPEAT","RESIGNAL","RETURN","REVOKE","ROLLBACK [WORK] [TO SAVEPOINT]","SAVEPOINT","SET COMPILATION ENVIRONMENT","SET CONNECTION","SET CURRENT","SET ENCRYPTION PASSWORD","SET EVENT MONITOR STATE","SET INTEGRITY","SET PASSTHRU","SET PATH","SET ROLE","SET SCHEMA","SET SERVER OPTION","SET {SESSION AUTHORIZATION | SESSION_USER}","SET USAGE LIST","SIGNAL","TRANSFER OWNERSHIP OF","WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}","WHILE"]),pa=d(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),fa=d(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),Pa=d(["ON DELETE","ON UPDATE","SET NULL","{ROWS | RANGE} BETWEEN"]),Da={name:"db2",tokenizerOptions:{reservedSelect:La,reservedClauses:[...ua,...Rn],reservedSetOperations:pa,reservedJoins:fa,reservedPhrases:Pa,reservedKeywords:Ca,reservedDataTypes:ca,reservedFunctionNames:_a,extraParens:["[]"],stringTypes:[{quote:"''-qq",prefixes:["G","N","U&"]},{quote:"''-raw",prefixes:["X","BX","GX","UX"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{first:"@#$",rest:"@#$"},paramTypes:{positional:!0,named:[":"]},paramChars:{first:"@#$",rest:"@#$"},operators:["**","%","|","&","^","~","¬=","¬>","¬<","!>","!<","^=","^>","^<","||","->","=>"]},formatOptions:{onelineClauses:Rn}},da=["ARRAY_AGG","AVG","CORR","CORRELATION","COUNT","COUNT_BIG","COVAR_POP","COVARIANCE","COVAR","COVAR_SAMP","COVARIANCE_SAMP","EVERY","GROUPING","JSON_ARRAYAGG","JSON_OBJECTAGG","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","SOME","STDDEV_POP","STDDEV","STDDEV_SAMP","SUM","VAR_POP","VARIANCE","VAR","VAR_SAMP","VARIANCE_SAMP","XMLAGG","XMLGROUP","ABS","ABSVAL","ACOS","ADD_DAYS","ADD_HOURS","ADD_MINUTES","ADD_MONTHS","ADD_SECONDS","ADD_YEARS","ANTILOG","ARRAY_MAX_CARDINALITY","ARRAY_TRIM","ASCII","ASIN","ATAN","ATAN2","ATANH","BASE64_DECODE","BASE64_ENCODE","BIT_LENGTH","BITAND","BITANDNOT","BITNOT","BITOR","BITXOR","BSON_TO_JSON","CARDINALITY","CEIL","CEILING","CHAR_LENGTH","CHARACTER_LENGTH","CHR","COALESCE","COMPARE_DECFLOAT","CONCAT","CONTAINS","COS","COSH","COT","CURDATE","CURTIME","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK_ISO","DAYOFWEEK","DAYOFYEAR","DAYS","DBPARTITIONNAME","DBPARTITIONNUM","DECFLOAT_FORMAT","DECFLOAT_SORTKEY","DECRYPT_BINARY","DECRYPT_BIT","DECRYPT_CHAR","DECRYPT_DB","DEGREES","DIFFERENCE","DIGITS","DLCOMMENT","DLLINKTYPE","DLURLCOMPLETE","DLURLPATH","DLURLPATHONLY","DLURLSCHEME","DLURLSERVER","DLVALUE","DOUBLE_PRECISION","DOUBLE","ENCRPYT","ENCRYPT_AES","ENCRYPT_AES256","ENCRYPT_RC2","ENCRYPT_TDES","EXP","EXTRACT","FIRST_DAY","FLOOR","GENERATE_UNIQUE","GET_BLOB_FROM_FILE","GET_CLOB_FROM_FILE","GET_DBCLOB_FROM_FILE","GET_XML_FILE","GETHINT","GREATEST","HASH_MD5","HASH_ROW","HASH_SHA1","HASH_SHA256","HASH_SHA512","HASH_VALUES","HASHED_VALUE","HEX","HEXTORAW","HOUR","HTML_ENTITY_DECODE","HTML_ENTITY_ENCODE","HTTP_DELETE_BLOB","HTTP_DELETE","HTTP_GET_BLOB","HTTP_GET","HTTP_PATCH_BLOB","HTTP_PATCH","HTTP_POST_BLOB","HTTP_POST","HTTP_PUT_BLOB","HTTP_PUT","IDENTITY_VAL_LOCAL","IFNULL","INSERT","INSTR","INTERPRET","ISFALSE","ISNOTFALSE","ISNOTTRUE","ISTRUE","JSON_ARRAY","JSON_OBJECT","JSON_QUERY","JSON_TO_BSON","JSON_UPDATE","JSON_VALUE","JULIAN_DAY","LAND","LAST_DAY","LCASE","LEAST","LEFT","LENGTH","LN","LNOT","LOCATE_IN_STRING","LOCATE","LOG10","LOR","LOWER","LPAD","LTRIM","MAX_CARDINALITY","MAX","MICROSECOND","MIDNIGHT_SECONDS","MIN","MINUTE","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","MQREAD","MQREADCLOB","MQRECEIVE","MQRECEIVECLOB","MQSEND","MULTIPLY_ALT","NEXT_DAY","NORMALIZE_DECFLOAT","NOW","NULLIF","NVL","OCTET_LENGTH","OVERLAY","PI","POSITION","POSSTR","POW","POWER","QUANTIZE","QUARTER","RADIANS","RAISE_ERROR","RANDOM","RAND","REGEXP_COUNT","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","RID","RIGHT","ROUND_TIMESTAMP","ROUND","RPAD","RRN","RTRIM","SCORE","SECOND","SIGN","SIN","SINH","SOUNDEX","SPACE","SQRT","STRIP","STRLEFT","STRPOS","STRRIGHT","SUBSTR","SUBSTRING","TABLE_NAME","TABLE_SCHEMA","TAN","TANH","TIMESTAMP_FORMAT","TIMESTAMP_ISO","TIMESTAMPDIFF_BIG","TIMESTAMPDIFF","TO_CHAR","TO_CLOB","TO_DATE","TO_NUMBER","TO_TIMESTAMP","TOTALORDER","TRANSLATE","TRIM_ARRAY","TRIM","TRUNC_TIMESTAMP","TRUNC","TRUNCATE","UCASE","UPPER","URL_DECODE","URL_ENCODE","VALUE","VARBINARY_FORMAT","VARCHAR_BIT_FORMAT","VARCHAR_FORMAT_BINARY","VARCHAR_FORMAT","VERIFY_GROUP_FOR_USER","WEEK_ISO","WEEK","WRAP","XMLATTRIBUTES","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROW","XMLSERIALIZE","XMLTEXT","XMLVALIDATE","XOR","XSLTRANSFORM","YEAR","ZONED","BASE_TABLE","HTTP_DELETE_BLOB_VERBOSE","HTTP_DELETE_VERBOSE","HTTP_GET_BLOB_VERBOSE","HTTP_GET_VERBOSE","HTTP_PATCH_BLOB_VERBOSE","HTTP_PATCH_VERBOSE","HTTP_POST_BLOB_VERBOSE","HTTP_POST_VERBOSE","HTTP_PUT_BLOB_VERBOSE","HTTP_PUT_VERBOSE","JSON_TABLE","MQREADALL","MQREADALLCLOB","MQRECEIVEALL","MQRECEIVEALLCLOB","XMLTABLE","UNPACK","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","RATIO_TO_REPORT","ROW_NUMBER","CAST"],Ma=["ABSENT","ACCORDING","ACCTNG","ACTION","ACTIVATE","ADD","ALIAS","ALL","ALLOCATE","ALLOW","ALTER","AND","ANY","APPEND","APPLNAME","ARRAY","ARRAY_AGG","ARRAY_TRIM","AS","ASC","ASENSITIVE","ASSOCIATE","ATOMIC","ATTACH","ATTRIBUTES","AUTHORIZATION","AUTONOMOUS","BEFORE","BEGIN","BETWEEN","BIND","BSON","BUFFERPOOL","BY","CACHE","CALL","CALLED","CARDINALITY","CASE","CAST","CHECK","CL","CLOSE","CLUSTER","COLLECT","COLLECTION","COLUMN","COMMENT","COMMIT","COMPACT","COMPARISONS","COMPRESS","CONCAT","CONCURRENT","CONDITION","CONNECT","CONNECT_BY_ROOT","CONNECTION","CONSTANT","CONSTRAINT","CONTAINS","CONTENT","CONTINUE","COPY","COUNT","COUNT_BIG","CREATE","CREATEIN","CROSS","CUBE","CUME_DIST","CURRENT","CURRENT_DATE","CURRENT_PATH","CURRENT_SCHEMA","CURRENT_SERVER","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","CURSOR","CYCLE","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYS","DB2GENERAL","DB2GENRL","DB2SQL","DBINFO","DBPARTITIONNAME","DBPARTITIONNUM","DEACTIVATE","DEALLOCATE","DECLARE","DEFAULT","DEFAULTS","DEFER","DEFINE","DEFINITION","DELETE","DELETING","DENSE_RANK","DENSERANK","DESC","DESCRIBE","DESCRIPTOR","DETACH","DETERMINISTIC","DIAGNOSTICS","DISABLE","DISALLOW","DISCONNECT","DISTINCT","DO","DOCUMENT","DROP","DYNAMIC","EACH","ELSE","ELSEIF","EMPTY","ENABLE","ENCODING","ENCRYPTION","END","END-EXEC","ENDING","ENFORCED","ERROR","ESCAPE","EVERY","EXCEPT","EXCEPTION","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXTEND","EXTERNAL","EXTRACT","FALSE","FENCED","FETCH","FIELDPROC","FILE","FINAL","FIRST_VALUE","FOR","FOREIGN","FORMAT","FREE","FREEPAGE","FROM","FULL","FUNCTION","GBPCACHE","GENERAL","GENERATED","GET","GLOBAL","GO","GOTO","GRANT","GROUP","HANDLER","HASH","HASH_ROW","HASHED_VALUE","HAVING","HINT","HOLD","HOUR","HOURS","IDENTITY","IF","IGNORE","IMMEDIATE","IMPLICITLY","IN","INCLUDE","INCLUDING","INCLUSIVE","INCREMENT","INDEX","INDEXBP","INDICATOR","INF","INFINITY","INHERIT","INLINE","INNER","INOUT","INSENSITIVE","INSERT","INSERTING","INTEGRITY","INTERPRET","INTERSECT","INTO","IS","ISNULL","ISOLATION","ITERATE","JAVA","JOIN","JSON","JSON_ARRAY","JSON_ARRAYAGG","JSON_EXISTS","JSON_OBJECT","JSON_OBJECTAGG","JSON_QUERY","JSON_TABLE","JSON_VALUE","KEEP","KEY","KEYS","LABEL","LAG","LANGUAGE","LAST_VALUE","LATERAL","LEAD","LEAVE","LEFT","LEVEL2","LIKE","LIMIT","LINKTYPE","LISTAGG","LOCAL","LOCALDATE","LOCALTIME","LOCALTIMESTAMP","LOCATION","LOCATOR","LOCK","LOCKSIZE","LOG","LOGGED","LOOP","MAINTAINED","MASK","MATCHED","MATERIALIZED","MAXVALUE","MERGE","MICROSECOND","MICROSECONDS","MINPCTUSED","MINUTE","MINUTES","MINVALUE","MIRROR","MIXED","MODE","MODIFIES","MONTH","MONTHS","NAMESPACE","NAN","NATIONAL","NCHAR","NCLOB","NESTED","NEW","NEW_TABLE","NEXTVAL","NO","NOCACHE","NOCYCLE","NODENAME","NODENUMBER","NOMAXVALUE","NOMINVALUE","NONE","NOORDER","NORMALIZED","NOT","NOTNULL","NTH_VALUE","NTILE","NULL","NULLS","NVARCHAR","OBID","OBJECT","OF","OFF","OFFSET","OLD","OLD_TABLE","OMIT","ON","ONLY","OPEN","OPTIMIZE","OPTION","OR","ORDER","ORDINALITY","ORGANIZE","OUT","OUTER","OVER","OVERLAY","OVERRIDING","PACKAGE","PADDED","PAGE","PAGESIZE","PARAMETER","PART","PARTITION","PARTITIONED","PARTITIONING","PARTITIONS","PASSING","PASSWORD","PATH","PCTFREE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PERIOD","PERMISSION","PIECESIZE","PIPE","PLAN","POSITION","PREPARE","PREVVAL","PRIMARY","PRIOR","PRIQTY","PRIVILEGES","PROCEDURE","PROGRAM","PROGRAMID","QUERY","RANGE","RANK","RATIO_TO_REPORT","RCDFMT","READ","READS","RECOVERY","REFERENCES","REFERENCING","REFRESH","REGEXP_LIKE","RELEASE","RENAME","REPEAT","RESET","RESIGNAL","RESTART","RESULT","RESULT_SET_LOCATOR","RETURN","RETURNING","RETURNS","REVOKE","RID","RIGHT","ROLLBACK","ROLLUP","ROUTINE","ROW","ROW_NUMBER","ROWNUMBER","ROWS","RRN","RUN","SAVEPOINT","SBCS","SCALAR","SCHEMA","SCRATCHPAD","SCROLL","SEARCH","SECOND","SECONDS","SECQTY","SECURED","SELECT","SENSITIVE","SEQUENCE","SESSION","SESSION_USER","SET","SIGNAL","SIMPLE","SKIP","SNAN","SOME","SOURCE","SPECIFIC","SQL","SQLID","SQLIND_DEFAULT","SQLIND_UNASSIGNED","STACKED","START","STARTING","STATEMENT","STATIC","STOGROUP","SUBSTRING","SUMMARY","SYNONYM","SYSTEM_TIME","SYSTEM_USER","TABLE","TABLESPACE","TABLESPACES","TAG","THEN","THREADSAFE","TO","TRANSACTION","TRANSFER","TRIGGER","TRIM","TRIM_ARRAY","TRUE","TRUNCATE","TRY_CAST","TYPE","UNDO","UNION","UNIQUE","UNIT","UNKNOWN","UNNEST","UNTIL","UPDATE","UPDATING","URI","USAGE","USE","USER","USERID","USING","VALUE","VALUES","VARIABLE","VARIANT","VCAT","VERSION","VERSIONING","VIEW","VOLATILE","WAIT","WHEN","WHENEVER","WHERE","WHILE","WITH","WITHIN","WITHOUT","WRAPPED","WRAPPER","WRITE","WRKSTNNAME","XMLAGG","XMLATTRIBUTES","XMLCAST","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLGROUP","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROW","XMLSERIALIZE","XMLTABLE","XMLTEXT","XMLVALIDATE","XSLTRANSFORM","XSROBJECT","YEAR","YEARS","YES","ZONE"],Ua=["ARRAY","BIGINT","BINARY","BIT","BLOB","BOOLEAN","CCSID","CHAR","CHARACTER","CLOB","DATA","DATALINK","DATE","DBCLOB","DECFLOAT","DECIMAL","DEC","DOUBLE","DOUBLE PRECISION","FLOAT","GRAPHIC","INT","INTEGER","LONG","NUMERIC","REAL","ROWID","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR","VARGRAPHIC","XML"],ha=d(["SELECT [ALL | DISTINCT]"]),Ga=d(["WITH [RECURSIVE]","INTO","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER [SIBLINGS] BY [INPUT SEQUENCE]","LIMIT","OFFSET","FETCH {FIRST | NEXT}","FOR UPDATE [OF]","FOR READ ONLY","OPTIMIZE FOR","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","DELETE","INSERT","FOR SYSTEM NAME"]),An=d(["CREATE [OR REPLACE] TABLE","CREATE [OR REPLACE] [RECURSIVE] VIEW","UPDATE","WHERE CURRENT OF","WITH {NC | RR | RS | CS | UR}","DELETE FROM","DROP TABLE","ALTER TABLE","ADD [COLUMN]","ALTER [COLUMN]","DROP [COLUMN]","SET DATA TYPE","SET {GENERATED ALWAYS | GENERATED BY DEFAULT}","SET NOT NULL","SET {NOT HIDDEN | IMPLICITLY HIDDEN}","SET FIELDPROC","DROP {DEFAULT | NOT NULL | GENERATED | IDENTITY | ROW CHANGE TIMESTAMP | FIELDPROC}","TRUNCATE [TABLE]","SET [CURRENT] SCHEMA","SET CURRENT_SCHEMA","ALLOCATE CURSOR","ALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL] SQL","ALTER [SPECIFIC] {FUNCTION | PROCEDURE}","ALTER {MASK | PERMISSION | SEQUENCE | TRIGGER}","ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}","BEGIN DECLARE SECTION","CALL","CLOSE","COMMENT ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PARAMETER | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}","COMMENT ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}","COMMENT ON PARAMETER SPECIFIC {FUNCTION | PROCEDURE | ROUTINE}","COMMENT ON [TABLE FUNCTION] RETURN COLUMN","COMMENT ON [TABLE FUNCTION] RETURN COLUMN SPECIFIC [PROCEDURE | ROUTINE]","COMMIT [WORK] [HOLD]","CONNECT [TO | RESET] USER","CREATE [OR REPLACE] {ALIAS | FUNCTION | MASK | PERMISSION | PROCEDURE | SEQUENCE | TRIGGER | VARIABLE}","CREATE [ENCODED VECTOR] INDEX","CREATE UNIQUE [WHERE NOT NULL] INDEX","CREATE SCHEMA","CREATE TYPE","DEALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL]","DECLARE CURSOR","DECLARE GLOBAL TEMPORARY TABLE","DECLARE","DESCRIBE CURSOR","DESCRIBE INPUT","DESCRIBE [OUTPUT]","DESCRIBE {PROCEDURE | ROUTINE}","DESCRIBE TABLE","DISCONNECT ALL [SQL]","DISCONNECT [CURRENT]","DROP {ALIAS | INDEX | MASK | PACKAGE | PERMISSION | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT} [IF EXISTS]","DROP [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE} [IF EXISTS]","END DECLARE SECTION","EXECUTE [IMMEDIATE]","FREE LOCATOR","GET [SQL] DESCRIPTOR [LOCAL | GLOBAL]","GET [CURRENT | STACKED] DIAGNOSTICS","GRANT {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}","HOLD LOCATOR","INCLUDE","LABEL ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}","LABEL ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}","LOCK TABLE","OPEN","PREPARE","REFRESH TABLE","RELEASE","RELEASE [TO] SAVEPOINT","RENAME [TABLE | INDEX] TO","REVOKE {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}","ROLLBACK [WORK] [HOLD | TO SAVEPOINT]","SAVEPOINT","SET CONNECTION","SET CURRENT {DEBUG MODE | DECFLOAT ROUNDING MODE | DEGREE | IMPLICIT XMLPARSE OPTION | TEMPORAL SYSTEM_TIME}","SET [SQL] DESCRIPTOR [LOCAL | GLOBAL]","SET ENCRYPTION PASSWORD","SET OPTION","SET {[CURRENT [FUNCTION]] PATH | CURRENT_PATH}","SET RESULT SETS [WITH RETURN [TO CALLER | TO CLIENT]]","SET SESSION AUTHORIZATION","SET SESSION_USER","SET TRANSACTION","SIGNAL SQLSTATE [VALUE]","TAG","TRANSFER OWNERSHIP OF","WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}"]),ga=d(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),ma=d(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","[LEFT | RIGHT] EXCEPTION JOIN","{INNER | CROSS} JOIN"]),Ha=d(["ON DELETE","ON UPDATE","SET NULL","{ROWS | RANGE} BETWEEN"]),ya={name:"db2i",tokenizerOptions:{reservedSelect:ha,reservedClauses:[...Ga,...An],reservedSetOperations:ga,reservedJoins:ma,reservedPhrases:Ha,reservedKeywords:Ma,reservedDataTypes:Ua,reservedFunctionNames:da,nestedBlockComments:!0,extraParens:["[]"],stringTypes:[{quote:"''-qq",prefixes:["G","N"]},{quote:"''-raw",prefixes:["X","BX","GX","UX"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{first:"@#$",rest:"@#$"},paramTypes:{positional:!0,named:[":"]},paramChars:{first:"@#$",rest:"@#$"},operators:["**","¬=","¬>","¬<","!>","!<","||","=>"]},formatOptions:{onelineClauses:An}},ba=["ABS","ACOS","ASIN","ATAN","BIN","BROUND","CBRT","CEIL","CEILING","CONV","COS","DEGREES","EXP","FACTORIAL","FLOOR","GREATEST","HEX","LEAST","LN","LOG","LOG10","LOG2","NEGATIVE","PI","PMOD","POSITIVE","POW","POWER","RADIANS","RAND","ROUND","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIN","SQRT","TAN","UNHEX","WIDTH_BUCKET","ARRAY_CONTAINS","MAP_KEYS","MAP_VALUES","SIZE","SORT_ARRAY","BINARY","CAST","ADD_MONTHS","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","QUARTER","SECOND","TIMESTAMP","TO_DATE","TO_UTC_TIMESTAMP","TRUNC","UNIX_TIMESTAMP","WEEKOFYEAR","YEAR","ASSERT_TRUE","COALESCE","IF","ISNOTNULL","ISNULL","NULLIF","NVL","ASCII","BASE64","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONTEXT_NGRAMS","DECODE","ELT","ENCODE","FIELD","FIND_IN_SET","FORMAT_NUMBER","GET_JSON_OBJECT","IN_FILE","INITCAP","INSTR","LCASE","LENGTH","LEVENSHTEIN","LOCATE","LOWER","LPAD","LTRIM","NGRAMS","OCTET_LENGTH","PARSE_URL","PRINTF","QUOTE","REGEXP_EXTRACT","REGEXP_REPLACE","REPEAT","REVERSE","RPAD","RTRIM","SENTENCES","SOUNDEX","SPACE","SPLIT","STR_TO_MAP","SUBSTR","SUBSTRING","TRANSLATE","TRIM","UCASE","UNBASE64","UPPER","MASK","MASK_FIRST_N","MASK_HASH","MASK_LAST_N","MASK_SHOW_FIRST_N","MASK_SHOW_LAST_N","AES_DECRYPT","AES_ENCRYPT","CRC32","CURRENT_DATABASE","CURRENT_USER","HASH","JAVA_METHOD","LOGGED_IN_USER","MD5","REFLECT","SHA","SHA1","SHA2","SURROGATE_KEY","VERSION","AVG","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COVAR_POP","COVAR_SAMP","HISTOGRAM_NUMERIC","MAX","MIN","NTILE","PERCENTILE","PERCENTILE_APPROX","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","EXPLODE","INLINE","JSON_TUPLE","PARSE_URL_TUPLE","POSEXPLODE","STACK","LEAD","LAG","FIRST_VALUE","LAST_VALUE","RANK","ROW_NUMBER","DENSE_RANK","CUME_DIST","PERCENT_RANK","NTILE"],Ba=["ADD","ADMIN","AFTER","ANALYZE","ARCHIVE","ASC","BEFORE","BUCKET","BUCKETS","CASCADE","CHANGE","CLUSTER","CLUSTERED","CLUSTERSTATUS","COLLECTION","COLUMNS","COMMENT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONTINUE","DATA","DATABASES","DATETIME","DAY","DBPROPERTIES","DEFERRED","DEFINED","DELIMITED","DEPENDENCY","DESC","DIRECTORIES","DIRECTORY","DISABLE","DISTRIBUTE","ELEM_TYPE","ENABLE","ESCAPED","EXCLUSIVE","EXPLAIN","EXPORT","FIELDS","FILE","FILEFORMAT","FIRST","FORMAT","FORMATTED","FUNCTIONS","HOLD_DDLTIME","HOUR","IDXPROPERTIES","IGNORE","INDEX","INDEXES","INPATH","INPUTDRIVER","INPUTFORMAT","ITEMS","JAR","KEYS","KEY_TYPE","LIMIT","LINES","LOAD","LOCATION","LOCK","LOCKS","LOGICAL","LONG","MAPJOIN","MATERIALIZED","METADATA","MINUS","MINUTE","MONTH","MSCK","NOSCAN","NO_DROP","OFFLINE","OPTION","OUTPUTDRIVER","OUTPUTFORMAT","OVERWRITE","OWNER","PARTITIONED","PARTITIONS","PLUS","PRETTY","PRINCIPALS","PROTECTION","PURGE","READ","READONLY","REBUILD","RECORDREADER","RECORDWRITER","RELOAD","RENAME","REPAIR","REPLACE","REPLICATION","RESTRICT","REWRITE","ROLE","ROLES","SCHEMA","SCHEMAS","SECOND","SEMI","SERDE","SERDEPROPERTIES","SERVER","SETS","SHARED","SHOW","SHOW_DATABASE","SKEWED","SORT","SORTED","SSL","STATISTICS","STORED","STREAMTABLE","STRING","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","TINYINT","TOUCH","TRANSACTIONS","UNARCHIVE","UNDO","UNIONTYPE","UNLOCK","UNSET","UNSIGNED","URI","USE","UTC","UTCTIMESTAMP","VALUE_TYPE","VIEW","WHILE","YEAR","AUTOCOMMIT","ISOLATION","LEVEL","OFFSET","SNAPSHOT","TRANSACTION","WORK","WRITE","ABORT","KEY","LAST","NORELY","NOVALIDATE","NULLS","RELY","VALIDATE","DETAIL","DOW","EXPRESSION","OPERATOR","QUARTER","SUMMARY","VECTORIZATION","WEEK","YEARS","MONTHS","WEEKS","DAYS","HOURS","MINUTES","SECONDS","TIMESTAMPTZ","ZONE","ALL","ALTER","AND","AS","AUTHORIZATION","BETWEEN","BOTH","BY","CASE","CAST","COLUMN","CONF","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIMESTAMP","CURSOR","DATABASE","DELETE","DESCRIBE","DISTINCT","DROP","ELSE","END","EXCHANGE","EXISTS","EXTENDED","EXTERNAL","FALSE","FETCH","FOLLOWING","FOR","FROM","FULL","FUNCTION","GRANT","GROUP","GROUPING","HAVING","IF","IMPORT","IN","INNER","INSERT","INTERSECT","INTO","IS","JOIN","LATERAL","LEFT","LESS","LIKE","LOCAL","MACRO","MORE","NONE","NOT","NULL","OF","ON","OR","ORDER","OUT","OUTER","OVER","PARTIALSCAN","PARTITION","PERCENT","PRECEDING","PRESERVE","PROCEDURE","RANGE","READS","REDUCE","REVOKE","RIGHT","ROLLUP","ROW","ROWS","SELECT","SET","TABLE","TABLESAMPLE","THEN","TO","TRANSFORM","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNION","UNIQUEJOIN","UPDATE","USER","USING","UTC_TMESTAMP","VALUES","WHEN","WHERE","WINDOW","WITH","COMMIT","ONLY","REGEXP","RLIKE","ROLLBACK","START","CACHE","CONSTRAINT","FOREIGN","PRIMARY","REFERENCES","DAYOFWEEK","EXTRACT","FLOOR","VIEWS","TIME","SYNC","TEXTFILE","SEQUENCEFILE","ORC","CSV","TSV","PARQUET","AVRO","RCFILE","JSONFILE","INPUTFORMAT","OUTPUTFORMAT"],Fa=["ARRAY","BIGINT","BINARY","BOOLEAN","CHAR","DATE","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","MAP","NUMERIC","PRECISION","SMALLINT","STRUCT","TIMESTAMP","VARCHAR"],va=d(["SELECT [ALL | DISTINCT]"]),Ya=d(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT INTO [TABLE]","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT [VALUES]","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE"]),on=d(["CREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS]","CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","RENAME TO","TRUNCATE [TABLE]","ALTER","CREATE","USE","DESCRIBE","DROP","FETCH","SHOW","STORED AS","STORED BY","ROW FORMAT"]),Va=d(["UNION [ALL | DISTINCT]"]),xa=d(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","LEFT SEMI JOIN"]),wa=d(["{ROWS | RANGE} BETWEEN"]),Wa={name:"hive",tokenizerOptions:{reservedSelect:va,reservedClauses:[...Ya,...on],reservedSetOperations:Va,reservedJoins:xa,reservedPhrases:wa,reservedKeywords:Ba,reservedDataTypes:Fa,reservedFunctionNames:ba,extraParens:["[]"],stringTypes:['""-bs',"''-bs"],identTypes:["``"],variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||"]},formatOptions:{onelineClauses:on}};function Qr(e){return e.map((E,t)=>{const T=e[t+1]||Rt;if(wE.SET(E)&&T.text==="(")return Ve(ye({},E),{type:"RESERVED_FUNCTION_NAME"});const r=e[t-1]||Rt;return wE.VALUES(E)&&r.text==="="?Ve(ye({},E),{type:"RESERVED_FUNCTION_NAME"}):E})}var Xa=["ACCESSIBLE","ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DELETE_DOMAIN_ID","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DO_DOMAIN_IDS","DROP","DUAL","EACH","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FOR","FORCE","FOREIGN","FROM","FULLTEXT","GENERAL","GRANT","GROUP","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IGNORE_DOMAIN_IDS","IGNORE_SERVER_IDS","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","INTERSECT","INTERVAL","INTO","IS","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LOOP","LOW_PRIORITY","MASTER_HEARTBEAT_PERIOD","MASTER_SSL_VERIFY_SERVER_CERT","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NOT","NO_WRITE_TO_BINLOG","NULL","OFFSET","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PAGE_CHECKSUM","PARSE_VCOL_EXPR","PARTITION","POSITION","PRIMARY","PROCEDURE","PURGE","RANGE","READ","READS","READ_WRITE","RECURSIVE","REF_SYSTEM_ID","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESIGNAL","RESTRICT","RETURN","RETURNING","REVOKE","RIGHT","RLIKE","ROW_NUMBER","ROWS","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SLOW","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STATS_AUTO_RECALC","STATS_PERSISTENT","STATS_SAMPLE_PAGES","STRAIGHT_JOIN","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNDO","UNION","UNIQUE","UNLOCK","UNSIGNED","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],$a=["BIGINT","BINARY","BIT","BLOB","CHAR BYTE","CHAR","CHARACTER","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONG","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],Ka=["ADDDATE","ADD_MONTHS","BIT_AND","BIT_OR","BIT_XOR","CAST","COUNT","CUME_DIST","CURDATE","CURTIME","DATE_ADD","DATE_SUB","DATE_FORMAT","DECODE","DENSE_RANK","EXTRACT","FIRST_VALUE","GROUP_CONCAT","JSON_ARRAYAGG","JSON_OBJECTAGG","LAG","LEAD","MAX","MEDIAN","MID","MIN","NOW","NTH_VALUE","NTILE","POSITION","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","ROW_NUMBER","SESSION_USER","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUBDATE","SUBSTR","SUBSTRING","SUM","SYSTEM_USER","TRIM","TRIM_ORACLE","VARIANCE","VAR_POP","VAR_SAMP","ABS","ACOS","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ASIN","ATAN","ATAN2","BENCHMARK","BIN","BINLOG_GTID_POS","BIT_COUNT","BIT_LENGTH","CEIL","CEILING","CHARACTER_LENGTH","CHAR_LENGTH","CHR","COERCIBILITY","COLUMN_CHECK","COLUMN_EXISTS","COLUMN_LIST","COLUMN_JSON","COMPRESS","CONCAT","CONCAT_OPERATOR_ORACLE","CONCAT_WS","CONNECTION_ID","CONV","CONVERT_TZ","COS","COT","CRC32","DATEDIFF","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEGREES","DECODE_HISTOGRAM","DECODE_ORACLE","DES_DECRYPT","DES_ENCRYPT","ELT","ENCODE","ENCRYPT","EXP","EXPORT_SET","EXTRACTVALUE","FIELD","FIND_IN_SET","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GET_LOCK","GREATEST","HEX","IFNULL","INSTR","ISNULL","IS_FREE_LOCK","IS_USED_LOCK","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_COMPACT","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_DETAILED","JSON_EXISTS","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_LOOSE","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_QUERY","JSON_QUOTE","JSON_OBJECT","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_SEARCH","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAST_DAY","LAST_INSERT_ID","LCASE","LEAST","LENGTH","LENGTHB","LN","LOAD_FILE","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LPAD_ORACLE","LTRIM","LTRIM_ORACLE","MAKEDATE","MAKETIME","MAKE_SET","MASTER_GTID_WAIT","MASTER_POS_WAIT","MD5","MONTHNAME","NAME_CONST","NVL","NVL2","OCT","OCTET_LENGTH","ORD","PERIOD_ADD","PERIOD_DIFF","PI","POW","POWER","QUOTE","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","RADIANS","RAND","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPLACE_ORACLE","REVERSE","ROUND","RPAD","RPAD_ORACLE","RTRIM","RTRIM_ORACLE","SEC_TO_TIME","SHA","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SPACE","SQRT","STRCMP","STR_TO_DATE","SUBSTR_ORACLE","SUBSTRING_INDEX","SUBTIME","SYS_GUID","TAN","TIMEDIFF","TIME_FORMAT","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_SECONDS","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UUID","UUID_SHORT","VERSION","WEEKDAY","WEEKOFYEAR","WSREP_LAST_WRITTEN_GTID","WSREP_LAST_SEEN_GTID","WSREP_SYNC_WAIT_UPTO_GTID","YEARWEEK","COALESCE","NULLIF"],Ja=d(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),ka=d(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET","RETURNING"]),Sn=d(["CREATE [OR REPLACE] [TEMPORARY] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] [IGNORE] TABLE [IF EXISTS]","ADD [COLUMN] [IF NOT EXISTS]","{CHANGE | MODIFY} [COLUMN] [IF EXISTS]","DROP [COLUMN] [IF EXISTS]","RENAME [TO]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","SET {VISIBLE | INVISIBLE}","TRUNCATE [TABLE]","ALTER DATABASE","ALTER DATABASE COMMENT","ALTER EVENT","ALTER FUNCTION","ALTER PROCEDURE","ALTER SCHEMA","ALTER SCHEMA COMMENT","ALTER SEQUENCE","ALTER SERVER","ALTER USER","ALTER VIEW","ANALYZE","ANALYZE TABLE","BACKUP LOCK","BACKUP STAGE","BACKUP UNLOCK","BEGIN","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHECK TABLE","CHECK VIEW","CHECKSUM TABLE","COMMIT","CREATE AGGREGATE FUNCTION","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE INDEX","CREATE PROCEDURE","CREATE ROLE","CREATE SEQUENCE","CREATE SERVER","CREATE SPATIAL INDEX","CREATE TRIGGER","CREATE UNIQUE INDEX","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP INDEX","DROP PREPARE","DROP PROCEDURE","DROP ROLE","DROP SEQUENCE","DROP SERVER","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GET DIAGNOSTICS","GET DIAGNOSTICS CONDITION","GRANT","HANDLER","HELP","INSTALL PLUGIN","INSTALL SONAME","KILL","LOAD DATA INFILE","LOAD INDEX INTO CACHE","LOAD XML INFILE","LOCK TABLE","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","PURGE MASTER LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","REPAIR VIEW","RESET MASTER","RESET QUERY CACHE","RESET REPLICA","RESET SLAVE","RESIGNAL","REVOKE","ROLLBACK","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET GLOBAL TRANSACTION","SET NAMES","SET PASSWORD","SET ROLE","SET STATEMENT","SET TRANSACTION","SHOW","SHOW ALL REPLICAS STATUS","SHOW ALL SLAVES STATUS","SHOW AUTHORS","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW BINLOG STATUS","SHOW CHARACTER SET","SHOW CLIENT_STATISTICS","SHOW COLLATION","SHOW COLUMNS","SHOW CONTRIBUTORS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PACKAGE","SHOW CREATE PACKAGE BODY","SHOW CREATE PROCEDURE","SHOW CREATE SEQUENCE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINE INNODB STATUS","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW EXPLAIN","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW INDEXES","SHOW INDEX_STATISTICS","SHOW KEYS","SHOW LOCALES","SHOW MASTER LOGS","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PACKAGE BODY CODE","SHOW PACKAGE BODY STATUS","SHOW PACKAGE STATUS","SHOW PLUGINS","SHOW PLUGINS SONAME","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW QUERY_RESPONSE_TIME","SHOW RELAYLOG EVENTS","SHOW REPLICA","SHOW REPLICA HOSTS","SHOW REPLICA STATUS","SHOW SCHEMAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW SLAVE STATUS","SHOW STATUS","SHOW STORAGE ENGINES","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW USER_STATISTICS","SHOW VARIABLES","SHOW WARNINGS","SHOW WSREP_MEMBERSHIP","SHOW WSREP_STATUS","SHUTDOWN","SIGNAL","START ALL REPLICAS","START ALL SLAVES","START REPLICA","START SLAVE","START TRANSACTION","STOP ALL REPLICAS","STOP ALL SLAVES","STOP REPLICA","STOP SLAVE","UNINSTALL PLUGIN","UNINSTALL SONAME","UNLOCK TABLE","USE","XA BEGIN","XA COMMIT","XA END","XA PREPARE","XA RECOVER","XA ROLLBACK","XA START"]),ja=d(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]","MINUS [ALL | DISTINCT]"]),qa=d(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),Qa=d(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),Za={name:"mariadb",tokenizerOptions:{reservedSelect:Ja,reservedClauses:[...ka,...Sn],reservedSetOperations:ja,reservedJoins:qa,reservedPhrases:Qa,supportsXor:!0,reservedKeywords:Xa,reservedDataTypes:$a,reservedFunctionNames:Ka,stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","&&","||","!","*.*"],postProcess:Qr},formatOptions:{onelineClauses:Sn}},za=["ACCESSIBLE","ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CUBE","CUME_DIST","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DENSE_RANK","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DROP","DUAL","EACH","ELSE","ELSEIF","EMPTY","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FIRST_VALUE","FOR","FORCE","FOREIGN","FROM","FULLTEXT","FUNCTION","GENERATED","GET","GRANT","GROUP","GROUPING","GROUPS","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","IN","INTERSECT","INTERVAL","INTO","IO_AFTER_GTIDS","IO_BEFORE_GTIDS","IS","ITERATE","JOIN","JSON_TABLE","KEY","KEYS","KILL","LAG","LAST_VALUE","LATERAL","LEAD","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LONG","LOOP","LOW_PRIORITY","MASTER_BIND","MASTER_SSL_VERIFY_SERVER_CERT","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NOT","NO_WRITE_TO_BINLOG","NTH_VALUE","NTILE","NULL","OF","ON","OPTIMIZE","OPTIMIZER_COSTS","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PARTITION","PERCENT_RANK","PRIMARY","PROCEDURE","PURGE","RANGE","RANK","READ","READS","READ_WRITE","RECURSIVE","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESIGNAL","RESTRICT","RETURN","REVOKE","RIGHT","RLIKE","ROW","ROWS","ROW_NUMBER","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STORED","STRAIGHT_JOIN","SYSTEM","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNDO","UNION","UNIQUE","UNLOCK","UNSIGNED","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","VIRTUAL","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],eN=["BIGINT","BINARY","BIT","BLOB","BOOL","BOOLEAN","CHAR","CHARACTER","DATE","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],EN=["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","ASCII","ASIN","ATAN","ATAN2","AVG","BENCHMARK","BIN","BIN_TO_UUID","BINARY","BIT_AND","BIT_COUNT","BIT_LENGTH","BIT_OR","BIT_XOR","CAN_ACCESS_COLUMN","CAN_ACCESS_DATABASE","CAN_ACCESS_TABLE","CAN_ACCESS_USER","CAN_ACCESS_VIEW","CAST","CEIL","CEILING","CHAR","CHAR_LENGTH","CHARACTER_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COMPRESS","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CRC32","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEFAULT","DEGREES","DENSE_RANK","DIV","ELT","EXP","EXPORT_SET","EXTRACT","EXTRACTVALUE","FIELD","FIND_IN_SET","FIRST_VALUE","FLOOR","FORMAT","FORMAT_BYTES","FORMAT_PICO_TIME","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOMCOLLECTION","GEOMETRYCOLLECTION","GET_DD_COLUMN_PRIVILEGES","GET_DD_CREATE_OPTIONS","GET_DD_INDEX_SUB_PART_LENGTH","GET_FORMAT","GET_LOCK","GREATEST","GROUP_CONCAT","GROUPING","GTID_SUBSET","GTID_SUBTRACT","HEX","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INSERT","INSTR","INTERNAL_AUTO_INCREMENT","INTERNAL_AVG_ROW_LENGTH","INTERNAL_CHECK_TIME","INTERNAL_CHECKSUM","INTERNAL_DATA_FREE","INTERNAL_DATA_LENGTH","INTERNAL_DD_CHAR_LENGTH","INTERNAL_GET_COMMENT_OR_ERROR","INTERNAL_GET_ENABLED_ROLE_JSON","INTERNAL_GET_HOSTNAME","INTERNAL_GET_USERNAME","INTERNAL_GET_VIEW_WARNING_OR_ERROR","INTERNAL_INDEX_COLUMN_CARDINALITY","INTERNAL_INDEX_LENGTH","INTERNAL_IS_ENABLED_ROLE","INTERNAL_IS_MANDATORY_ROLE","INTERNAL_KEYS_DISABLED","INTERNAL_MAX_DATA_LENGTH","INTERNAL_TABLE_ROWS","INTERNAL_UPDATE_TIME","INTERVAL","IS","IS_FREE_LOCK","IS_IPV4","IS_IPV4_COMPAT","IS_IPV4_MAPPED","IS_IPV6","IS NOT","IS NOT NULL","IS NULL","IS_USED_LOCK","IS_UUID","ISNULL","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_ARRAYAGG","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_OBJECT","JSON_OBJECTAGG","JSON_OVERLAPS","JSON_PRETTY","JSON_QUOTE","JSON_REMOVE","JSON_REPLACE","JSON_SCHEMA_VALID","JSON_SCHEMA_VALIDATION_REPORT","JSON_SEARCH","JSON_SET","JSON_STORAGE_FREE","JSON_STORAGE_SIZE","JSON_TABLE","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAG","LAST_DAY","LAST_INSERT_ID","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LINESTRING","LN","LOAD_FILE","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","MAKE_SET","MAKEDATE","MAKETIME","MASTER_POS_WAIT","MATCH","MAX","MBRCONTAINS","MBRCOVEREDBY","MBRCOVERS","MBRDISJOINT","MBREQUALS","MBRINTERSECTS","MBROVERLAPS","MBRTOUCHES","MBRWITHIN","MD5","MEMBER OF","MICROSECOND","MID","MIN","MINUTE","MOD","MONTH","MONTHNAME","MULTILINESTRING","MULTIPOINT","MULTIPOLYGON","NAME_CONST","NOT","NOT IN","NOT LIKE","NOT REGEXP","NOW","NTH_VALUE","NTILE","NULLIF","OCT","OCTET_LENGTH","ORD","PERCENT_RANK","PERIOD_ADD","PERIOD_DIFF","PI","POINT","POLYGON","POSITION","POW","POWER","PS_CURRENT_THREAD_ID","PS_THREAD_ID","QUARTER","QUOTE","RADIANS","RAND","RANDOM_BYTES","RANK","REGEXP","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROLES_GRAPHML","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCHEMA","SEC_TO_TIME","SECOND","SESSION_USER","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_BUFFER","ST_BUFFER_STRATEGY","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_CONVEXHULL","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DISTANCE_SPHERE","ST_ENDPOINT","ST_ENVELOPE","ST_EQUALS","ST_EXTERIORRING","ST_FRECHETDISTANCE","ST_GEOHASH","ST_GEOMCOLLFROMTEXT","ST_GEOMCOLLFROMWKB","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMGEOJSON","ST_GEOMFROMTEXT","ST_GEOMFROMWKB","ST_HAUSDORFFDISTANCE","ST_INTERIORRINGN","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISSIMPLE","ST_ISVALID","ST_LATFROMGEOHASH","ST_LATITUDE","ST_LENGTH","ST_LINEFROMTEXT","ST_LINEFROMWKB","ST_LINEINTERPOLATEPOINT","ST_LINEINTERPOLATEPOINTS","ST_LONGFROMGEOHASH","ST_LONGITUDE","ST_MAKEENVELOPE","ST_MLINEFROMTEXT","ST_MLINEFROMWKB","ST_MPOINTFROMTEXT","ST_MPOINTFROMWKB","ST_MPOLYFROMTEXT","ST_MPOLYFROMWKB","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINTATDISTANCE","ST_POINTFROMGEOHASH","ST_POINTFROMTEXT","ST_POINTFROMWKB","ST_POINTN","ST_POLYFROMTEXT","ST_POLYFROMWKB","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SWAPXY","ST_SYMDIFFERENCE","ST_TOUCHES","ST_TRANSFORM","ST_UNION","ST_VALIDATE","ST_WITHIN","ST_X","ST_Y","STATEMENT_DIGEST","STATEMENT_DIGEST_TEXT","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","STRCMP","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUBTIME","SUM","SYSDATE","SYSTEM_USER","TAN","TIME","TIME_FORMAT","TIME_TO_SEC","TIMEDIFF","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TO_BASE64","TO_DAYS","TO_SECONDS","TRIM","TRUNCATE","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","UUID_SHORT","UUID_TO_BIN","VALIDATE_PASSWORD_STRENGTH","VALUES","VAR_POP","VAR_SAMP","VARIANCE","VERSION","WAIT_FOR_EXECUTED_GTID_SET","WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS","WEEK","WEEKDAY","WEEKOFYEAR","WEIGHT_STRING","YEAR","YEARWEEK"],tN=d(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),TN=d(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET"]),On=d(["CREATE [TEMPORARY] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","{CHANGE | MODIFY} [COLUMN]","DROP [COLUMN]","RENAME [TO | AS]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","TRUNCATE [TABLE]","ALTER DATABASE","ALTER EVENT","ALTER FUNCTION","ALTER INSTANCE","ALTER LOGFILE GROUP","ALTER PROCEDURE","ALTER RESOURCE GROUP","ALTER SERVER","ALTER TABLESPACE","ALTER USER","ALTER VIEW","ANALYZE TABLE","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK TABLE","CHECKSUM TABLE","CLONE","COMMIT","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE FUNCTION","CREATE INDEX","CREATE LOGFILE GROUP","CREATE PROCEDURE","CREATE RESOURCE GROUP","CREATE ROLE","CREATE SERVER","CREATE SPATIAL REFERENCE SYSTEM","CREATE TABLESPACE","CREATE TRIGGER","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP FUNCTION","DROP INDEX","DROP LOGFILE GROUP","DROP PROCEDURE","DROP RESOURCE GROUP","DROP ROLE","DROP SERVER","DROP SPATIAL REFERENCE SYSTEM","DROP TABLESPACE","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GRANT","HANDLER","HELP","IMPORT TABLE","INSTALL COMPONENT","INSTALL PLUGIN","KILL","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SOURCE_POS_WAIT","START GROUP_REPLICATION","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP REPLICA","STOP SLAVE","TABLE","UNINSTALL COMPONENT","UNINSTALL PLUGIN","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),rN=d(["UNION [ALL | DISTINCT]"]),sN=d(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),nN=d(["ON {UPDATE | DELETE} [SET NULL]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),RN={name:"mysql",tokenizerOptions:{reservedSelect:tN,reservedClauses:[...TN,...On],reservedSetOperations:rN,reservedJoins:sN,reservedPhrases:nN,supportsXor:!0,reservedKeywords:za,reservedDataTypes:eN,reservedFunctionNames:EN,stringTypes:['""-qq-bs',{quote:"''-qq-bs",prefixes:["N"]},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","->","->>","&&","||","!","*.*"],postProcess:Qr},formatOptions:{onelineClauses:On}},AN=["ABORT","ABS","ACOS","ADVISOR","ARRAY_AGG","ARRAY_AGG","ARRAY_APPEND","ARRAY_AVG","ARRAY_BINARY_SEARCH","ARRAY_CONCAT","ARRAY_CONTAINS","ARRAY_COUNT","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_FLATTEN","ARRAY_IFNULL","ARRAY_INSERT","ARRAY_INTERSECT","ARRAY_LENGTH","ARRAY_MAX","ARRAY_MIN","ARRAY_MOVE","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_PUT","ARRAY_RANGE","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_REPLACE","ARRAY_REVERSE","ARRAY_SORT","ARRAY_STAR","ARRAY_SUM","ARRAY_SYMDIFF","ARRAY_SYMDIFF1","ARRAY_SYMDIFFN","ARRAY_UNION","ASIN","ATAN","ATAN2","AVG","BASE64","BASE64_DECODE","BASE64_ENCODE","BITAND ","BITCLEAR ","BITNOT ","BITOR ","BITSET ","BITSHIFT ","BITTEST ","BITXOR ","CEIL","CLOCK_LOCAL","CLOCK_MILLIS","CLOCK_STR","CLOCK_TZ","CLOCK_UTC","COALESCE","CONCAT","CONCAT2","CONTAINS","CONTAINS_TOKEN","CONTAINS_TOKEN_LIKE","CONTAINS_TOKEN_REGEXP","COS","COUNT","COUNT","COUNTN","CUME_DIST","CURL","DATE_ADD_MILLIS","DATE_ADD_STR","DATE_DIFF_MILLIS","DATE_DIFF_STR","DATE_FORMAT_STR","DATE_PART_MILLIS","DATE_PART_STR","DATE_RANGE_MILLIS","DATE_RANGE_STR","DATE_TRUNC_MILLIS","DATE_TRUNC_STR","DECODE","DECODE_JSON","DEGREES","DENSE_RANK","DURATION_TO_STR","ENCODED_SIZE","ENCODE_JSON","EXP","FIRST_VALUE","FLOOR","GREATEST","HAS_TOKEN","IFINF","IFMISSING","IFMISSINGORNULL","IFNAN","IFNANORINF","IFNULL","INITCAP","ISARRAY","ISATOM","ISBITSET","ISBOOLEAN","ISNUMBER","ISOBJECT","ISSTRING","LAG","LAST_VALUE","LEAD","LEAST","LENGTH","LN","LOG","LOWER","LTRIM","MAX","MEAN","MEDIAN","META","MILLIS","MILLIS_TO_LOCAL","MILLIS_TO_STR","MILLIS_TO_TZ","MILLIS_TO_UTC","MILLIS_TO_ZONE_NAME","MIN","MISSINGIF","NANIF","NEGINFIF","NOW_LOCAL","NOW_MILLIS","NOW_STR","NOW_TZ","NOW_UTC","NTH_VALUE","NTILE","NULLIF","NVL","NVL2","OBJECT_ADD","OBJECT_CONCAT","OBJECT_INNER_PAIRS","OBJECT_INNER_VALUES","OBJECT_LENGTH","OBJECT_NAMES","OBJECT_PAIRS","OBJECT_PUT","OBJECT_REMOVE","OBJECT_RENAME","OBJECT_REPLACE","OBJECT_UNWRAP","OBJECT_VALUES","PAIRS","PERCENT_RANK","PI","POLY_LENGTH","POSINFIF","POSITION","POWER","RADIANS","RANDOM","RANK","RATIO_TO_REPORT","REGEXP_CONTAINS","REGEXP_LIKE","REGEXP_MATCHES","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGEX_CONTAINS","REGEX_LIKE","REGEX_MATCHES","REGEX_POSITION","REGEX_REPLACE","REGEX_SPLIT","REPEAT","REPLACE","REVERSE","ROUND","ROW_NUMBER","RTRIM","SEARCH","SEARCH_META","SEARCH_SCORE","SIGN","SIN","SPLIT","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DURATION","STR_TO_MILLIS","STR_TO_TZ","STR_TO_UTC","STR_TO_ZONE_NAME","SUBSTR","SUFFIXES","SUM","TAN","TITLE","TOARRAY","TOATOM","TOBOOLEAN","TOKENS","TOKENS","TONUMBER","TOOBJECT","TOSTRING","TRIM","TRUNC","UPPER","UUID","VARIANCE","VARIANCE_POP","VARIANCE_SAMP","VAR_POP","VAR_SAMP","WEEKDAY_MILLIS","WEEKDAY_STR","CAST"],oN=["ADVISE","ALL","ALTER","ANALYZE","AND","ANY","ARRAY","AS","ASC","AT","BEGIN","BETWEEN","BINARY","BOOLEAN","BREAK","BUCKET","BUILD","BY","CALL","CASE","CAST","CLUSTER","COLLATE","COLLECTION","COMMIT","COMMITTED","CONNECT","CONTINUE","CORRELATED","COVER","CREATE","CURRENT","DATABASE","DATASET","DATASTORE","DECLARE","DECREMENT","DELETE","DERIVED","DESC","DESCRIBE","DISTINCT","DO","DROP","EACH","ELEMENT","ELSE","END","EVERY","EXCEPT","EXCLUDE","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FILTER","FIRST","FLATTEN","FLUSH","FOLLOWING","FOR","FORCE","FROM","FTS","FUNCTION","GOLANG","GRANT","GROUP","GROUPS","GSI","HASH","HAVING","IF","IGNORE","ILIKE","IN","INCLUDE","INCREMENT","INDEX","INFER","INLINE","INNER","INSERT","INTERSECT","INTO","IS","ISOLATION","JAVASCRIPT","JOIN","KEY","KEYS","KEYSPACE","KNOWN","LANGUAGE","LAST","LEFT","LET","LETTING","LEVEL","LIKE","LIMIT","LSM","MAP","MAPPING","MATCHED","MATERIALIZED","MERGE","MINUS","MISSING","NAMESPACE","NEST","NL","NO","NOT","NTH_VALUE","NULL","NULLS","NUMBER","OBJECT","OFFSET","ON","OPTION","OPTIONS","OR","ORDER","OTHERS","OUTER","OVER","PARSE","PARTITION","PASSWORD","PATH","POOL","PRECEDING","PREPARE","PRIMARY","PRIVATE","PRIVILEGE","PROBE","PROCEDURE","PUBLIC","RANGE","RAW","REALM","REDUCE","RENAME","RESPECT","RETURN","RETURNING","REVOKE","RIGHT","ROLE","ROLLBACK","ROW","ROWS","SATISFIES","SAVEPOINT","SCHEMA","SCOPE","SELECT","SELF","SEMI","SET","SHOW","SOME","START","STATISTICS","STRING","SYSTEM","THEN","TIES","TO","TRAN","TRANSACTION","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNDER","UNION","UNIQUE","UNKNOWN","UNNEST","UNSET","UPDATE","UPSERT","USE","USER","USING","VALIDATE","VALUE","VALUED","VALUES","VIA","VIEW","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WORK","XOR"],iN=[],SN=d(["SELECT [ALL | DISTINCT]"]),ON=d(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED THEN","UPDATE SET","INSERT","NEST","UNNEST","RETURNING"]),In=d(["UPDATE","DELETE FROM","SET SCHEMA","ADVISE","ALTER INDEX","BEGIN TRANSACTION","BUILD INDEX","COMMIT TRANSACTION","CREATE COLLECTION","CREATE FUNCTION","CREATE INDEX","CREATE PRIMARY INDEX","CREATE SCOPE","DROP COLLECTION","DROP FUNCTION","DROP INDEX","DROP PRIMARY INDEX","DROP SCOPE","EXECUTE","EXECUTE FUNCTION","EXPLAIN","GRANT","INFER","PREPARE","REVOKE","ROLLBACK TRANSACTION","SAVEPOINT","SET TRANSACTION","UPDATE STATISTICS","UPSERT","LET","SET CURRENT SCHEMA","SHOW","USE [PRIMARY] KEYS"]),IN=d(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),aN=d(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","INNER JOIN"]),NN=d(["{ROWS | RANGE | GROUPS} BETWEEN"]),lN={name:"n1ql",tokenizerOptions:{reservedSelect:SN,reservedClauses:[...ON,...In],reservedSetOperations:IN,reservedJoins:aN,reservedPhrases:NN,supportsXor:!0,reservedKeywords:oN,reservedDataTypes:iN,reservedFunctionNames:AN,stringTypes:['""-bs',"''-bs"],identTypes:["``"],extraParens:["[]","{}"],paramTypes:{positional:!0,numbered:["$"],named:["$"]},lineCommentTypes:["#","--"],operators:["%","==",":","||"]},formatOptions:{onelineClauses:In}},_N=["ADD","AGENT","AGGREGATE","ALL","ALTER","AND","ANY","ARROW","AS","ASC","AT","ATTRIBUTE","AUTHID","AVG","BEGIN","BETWEEN","BLOCK","BODY","BOTH","BOUND","BULK","BY","BYTE","CALL","CALLING","CASCADE","CASE","CHARSET","CHARSETFORM","CHARSETID","CHECK","CLOSE","CLUSTER","CLUSTERS","COLAUTH","COLLECT","COLUMNS","COMMENT","COMMIT","COMMITTED","COMPILED","COMPRESS","CONNECT","CONSTANT","CONSTRUCTOR","CONTEXT","CONVERT","COUNT","CRASH","CREATE","CURRENT","CURSOR","CUSTOMDATUM","DANGLING","DATA","DAY","DECLARE","DEFAULT","DEFINE","DELETE","DESC","DETERMINISTIC","DISTINCT","DROP","DURATION","ELEMENT","ELSE","ELSIF","EMPTY","END","ESCAPE","EXCEPT","EXCEPTION","EXCEPTIONS","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FINAL","FIXED","FOR","FORALL","FORCE","FORM","FROM","FUNCTION","GENERAL","GOTO","GRANT","GROUP","HASH","HAVING","HEAP","HIDDEN","HOUR","IDENTIFIED","IF","IMMEDIATE","IN","INCLUDING","INDEX","INDEXES","INDICATOR","INDICES","INFINITE","INSERT","INSTANTIABLE","INTERFACE","INTERSECT","INTERVAL","INTO","INVALIDATE","IS","ISOLATION","JAVA","LANGUAGE","LARGE","LEADING","LENGTH","LEVEL","LIBRARY","LIKE","LIKE2","LIKE4","LIKEC","LIMIT","LIMITED","LOCAL","LOCK","LOOP","MAP","MAX","MAXLEN","MEMBER","MERGE","MIN","MINUS","MINUTE","MOD","MODE","MODIFY","MONTH","MULTISET","NAME","NAN","NATIONAL","NATIVE","NEW","NOCOMPRESS","NOCOPY","NOT","NOWAIT","NULL","OBJECT","OCICOLL","OCIDATE","OCIDATETIME","OCIDURATION","OCIINTERVAL","OCILOBLOCATOR","OCINUMBER","OCIRAW","OCIREF","OCIREFCURSOR","OCIROWID","OCISTRING","OCITYPE","OF","ON","ONLY","OPAQUE","OPEN","OPERATOR","OPTION","OR","ORACLE","ORADATA","ORDER","OVERLAPS","ORGANIZATION","ORLANY","ORLVARY","OTHERS","OUT","OVERRIDING","PACKAGE","PARALLEL_ENABLE","PARAMETER","PARAMETERS","PARTITION","PASCAL","PIPE","PIPELINED","PRAGMA","PRIOR","PRIVATE","PROCEDURE","PUBLIC","RAISE","RANGE","READ","RECORD","REF","REFERENCE","REM","REMAINDER","RENAME","RESOURCE","RESULT","RETURN","RETURNING","REVERSE","REVOKE","ROLLBACK","ROW","SAMPLE","SAVE","SAVEPOINT","SB1","SB2","SB4","SECOND","SEGMENT","SELECT","SELF","SEPARATE","SEQUENCE","SERIALIZABLE","SET","SHARE","SHORT","SIZE","SIZE_T","SOME","SPARSE","SQL","SQLCODE","SQLDATA","SQLNAME","SQLSTATE","STANDARD","START","STATIC","STDDEV","STORED","STRING","STRUCT","STYLE","SUBMULTISET","SUBPARTITION","SUBSTITUTABLE","SUBTYPE","SUM","SYNONYM","TABAUTH","TABLE","TDO","THE","THEN","TIME","TIMEZONE_ABBR","TIMEZONE_HOUR","TIMEZONE_MINUTE","TIMEZONE_REGION","TO","TRAILING","TRANSAC","TRANSACTIONAL","TRUSTED","TYPE","UB1","UB2","UB4","UNDER","UNION","UNIQUE","UNSIGNED","UNTRUSTED","UPDATE","USE","USING","VALIST","VALUE","VALUES","VARIABLE","VARIANCE","VARRAY","VIEW","VIEWS","VOID","WHEN","WHERE","WHILE","WITH","WORK","WRAPPED","WRITE","YEAR","ZONE"],CN=["ARRAY","BFILE_BASE","BINARY","BLOB_BASE","CHAR VARYING","CHAR_BASE","CHAR","CHARACTER VARYING","CHARACTER","CLOB_BASE","DATE_BASE","DATE","DECIMAL","DOUBLE","FLOAT","INT","INTERVAL DAY","INTERVAL YEAR","LONG","NATIONAL CHAR VARYING","NATIONAL CHAR","NATIONAL CHARACTER VARYING","NATIONAL CHARACTER","NCHAR VARYING","NCHAR","NCHAR","NUMBER_BASE","NUMBER","NUMBERIC","NVARCHAR","PRECISION","RAW","TIMESTAMP","UROWID","VARCHAR","VARCHAR2"],cN=["ABS","ACOS","ASIN","ATAN","ATAN2","BITAND","CEIL","COS","COSH","EXP","FLOOR","LN","LOG","MOD","NANVL","POWER","REMAINDER","ROUND","SIGN","SIN","SINH","SQRT","TAN","TANH","TRUNC","WIDTH_BUCKET","CHR","CONCAT","INITCAP","LOWER","LPAD","LTRIM","NLS_INITCAP","NLS_LOWER","NLSSORT","NLS_UPPER","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","RPAD","RTRIM","SOUNDEX","SUBSTR","TRANSLATE","TREAT","TRIM","UPPER","NLS_CHARSET_DECL_LEN","NLS_CHARSET_ID","NLS_CHARSET_NAME","ASCII","INSTR","LENGTH","REGEXP_INSTR","ADD_MONTHS","CURRENT_DATE","CURRENT_TIMESTAMP","DBTIMEZONE","EXTRACT","FROM_TZ","LAST_DAY","LOCALTIMESTAMP","MONTHS_BETWEEN","NEW_TIME","NEXT_DAY","NUMTODSINTERVAL","NUMTOYMINTERVAL","ROUND","SESSIONTIMEZONE","SYS_EXTRACT_UTC","SYSDATE","SYSTIMESTAMP","TO_CHAR","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_DSINTERVAL","TO_YMINTERVAL","TRUNC","TZ_OFFSET","GREATEST","LEAST","ASCIISTR","BIN_TO_NUM","CAST","CHARTOROWID","COMPOSE","CONVERT","DECOMPOSE","HEXTORAW","NUMTODSINTERVAL","NUMTOYMINTERVAL","RAWTOHEX","RAWTONHEX","ROWIDTOCHAR","ROWIDTONCHAR","SCN_TO_TIMESTAMP","TIMESTAMP_TO_SCN","TO_BINARY_DOUBLE","TO_BINARY_FLOAT","TO_CHAR","TO_CLOB","TO_DATE","TO_DSINTERVAL","TO_LOB","TO_MULTI_BYTE","TO_NCHAR","TO_NCLOB","TO_NUMBER","TO_DSINTERVAL","TO_SINGLE_BYTE","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_YMINTERVAL","TO_YMINTERVAL","TRANSLATE","UNISTR","BFILENAME","EMPTY_BLOB,","EMPTY_CLOB","CARDINALITY","COLLECT","POWERMULTISET","POWERMULTISET_BY_CARDINALITY","SET","SYS_CONNECT_BY_PATH","CLUSTER_ID","CLUSTER_PROBABILITY","CLUSTER_SET","FEATURE_ID","FEATURE_SET","FEATURE_VALUE","PREDICTION","PREDICTION_COST","PREDICTION_DETAILS","PREDICTION_PROBABILITY","PREDICTION_SET","APPENDCHILDXML","DELETEXML","DEPTH","EXTRACT","EXISTSNODE","EXTRACTVALUE","INSERTCHILDXML","INSERTXMLBEFORE","PATH","SYS_DBURIGEN","SYS_XMLAGG","SYS_XMLGEN","UPDATEXML","XMLAGG","XMLCDATA","XMLCOLATTVAL","XMLCOMMENT","XMLCONCAT","XMLFOREST","XMLPARSE","XMLPI","XMLQUERY","XMLROOT","XMLSEQUENCE","XMLSERIALIZE","XMLTABLE","XMLTRANSFORM","DECODE","DUMP","ORA_HASH","VSIZE","COALESCE","LNNVL","NULLIF","NVL","NVL2","SYS_CONTEXT","SYS_GUID","SYS_TYPEID","UID","USER","USERENV","AVG","COLLECT","CORR","CORR_S","CORR_K","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","FIRST","GROUP_ID","GROUPING","GROUPING_ID","LAST","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANK","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","STATS_BINOMIAL_TEST","STATS_CROSSTAB","STATS_F_TEST","STATS_KS_TEST","STATS_MODE","STATS_MW_TEST","STATS_ONE_WAY_ANOVA","STATS_T_TEST_ONE","STATS_T_TEST_PAIRED","STATS_T_TEST_INDEP","STATS_T_TEST_INDEPU","STATS_WSR_TEST","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTILE","RATIO_TO_REPORT","ROW_NUMBER","DEREF","MAKE_REF","REF","REFTOHEX","VALUE","CV","ITERATION_NUMBER","PRESENTNNV","PRESENTV","PREVIOUS"],LN=d(["SELECT [ALL | DISTINCT | UNIQUE]"]),uN=d(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER [SIBLINGS] BY","OFFSET","FETCH {FIRST | NEXT}","FOR UPDATE [OF]","INSERT [INTO | ALL INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [THEN]","UPDATE SET","RETURNING"]),an=d(["CREATE [GLOBAL TEMPORARY | PRIVATE TEMPORARY | SHARDED | DUPLICATED | IMMUTABLE BLOCKCHAIN | BLOCKCHAIN | IMMUTABLE] TABLE","CREATE [OR REPLACE] [NO FORCE | FORCE] [EDITIONING | EDITIONABLE | EDITIONABLE EDITIONING | NONEDITIONABLE] VIEW","CREATE MATERIALIZED VIEW","UPDATE [ONLY]","DELETE FROM [ONLY]","DROP TABLE","ALTER TABLE","ADD","DROP {COLUMN | UNUSED COLUMNS | COLUMNS CONTINUE}","MODIFY","RENAME TO","RENAME COLUMN","TRUNCATE TABLE","SET SCHEMA","BEGIN","CONNECT BY","DECLARE","EXCEPT","EXCEPTION","LOOP","START WITH"]),pN=d(["UNION [ALL]","EXCEPT","INTERSECT"]),fN=d(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | OUTER} APPLY"]),PN=d(["ON {UPDATE | DELETE} [SET NULL]","ON COMMIT","{ROWS | RANGE} BETWEEN"]),DN={name:"plsql",tokenizerOptions:{reservedSelect:LN,reservedClauses:[...uN,...an],reservedSetOperations:pN,reservedJoins:fN,reservedPhrases:PN,supportsXor:!0,reservedKeywords:_N,reservedDataTypes:CN,reservedFunctionNames:cN,stringTypes:[{quote:"''-qq",prefixes:["N"]},{quote:"q''",prefixes:["N"]}],identTypes:['""-qq'],identChars:{rest:"$#"},variableTypes:[{regex:"&{1,2}[A-Za-z][A-Za-z0-9_$#]*"}],paramTypes:{numbered:[":"],named:[":"]},paramChars:{},operators:["**",":=","%","~=","^=",">>","<<","=>","@","||"],postProcess:dN},formatOptions:{alwaysDenseOperators:["@"],onelineClauses:an}};function dN(e){let E=Rt;return e.map(t=>wE.SET(t)&&wE.BY(E)?Ve(ye({},t),{type:"RESERVED_KEYWORD"}):(wA(t.type)&&(E=t),t))}var MN=["ABS","ACOS","ACOSD","ACOSH","ASIN","ASIND","ASINH","ATAN","ATAN2","ATAN2D","ATAND","ATANH","CBRT","CEIL","CEILING","COS","COSD","COSH","COT","COTD","DEGREES","DIV","EXP","FACTORIAL","FLOOR","GCD","LCM","LN","LOG","LOG10","MIN_SCALE","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SCALE","SETSEED","SIGN","SIN","SIND","SINH","SQRT","TAN","TAND","TANH","TRIM_SCALE","TRUNC","WIDTH_BUCKET","ABS","ASCII","BIT_LENGTH","BTRIM","CHARACTER_LENGTH","CHAR_LENGTH","CHR","CONCAT","CONCAT_WS","FORMAT","INITCAP","LEFT","LENGTH","LOWER","LPAD","LTRIM","MD5","NORMALIZE","OCTET_LENGTH","OVERLAY","PARSE_IDENT","PG_CLIENT_ENCODING","POSITION","QUOTE_IDENT","QUOTE_LITERAL","QUOTE_NULLABLE","REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","REPEAT","REPLACE","REVERSE","RIGHT","RPAD","RTRIM","SPLIT_PART","SPRINTF","STARTS_WITH","STRING_AGG","STRING_TO_ARRAY","STRING_TO_TABLE","STRPOS","SUBSTR","SUBSTRING","TO_ASCII","TO_HEX","TRANSLATE","TRIM","UNISTR","UPPER","BIT_COUNT","BIT_LENGTH","BTRIM","CONVERT","CONVERT_FROM","CONVERT_TO","DECODE","ENCODE","GET_BIT","GET_BYTE","LENGTH","LTRIM","MD5","OCTET_LENGTH","OVERLAY","POSITION","RTRIM","SET_BIT","SET_BYTE","SHA224","SHA256","SHA384","SHA512","STRING_AGG","SUBSTR","SUBSTRING","TRIM","BIT_COUNT","BIT_LENGTH","GET_BIT","LENGTH","OCTET_LENGTH","OVERLAY","POSITION","SET_BIT","SUBSTRING","REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","TO_CHAR","TO_DATE","TO_NUMBER","TO_TIMESTAMP","CLOCK_TIMESTAMP","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_BIN","DATE_PART","DATE_TRUNC","EXTRACT","ISFINITE","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL","LOCALTIME","LOCALTIMESTAMP","MAKE_DATE","MAKE_INTERVAL","MAKE_TIME","MAKE_TIMESTAMP","MAKE_TIMESTAMPTZ","NOW","PG_SLEEP","PG_SLEEP_FOR","PG_SLEEP_UNTIL","STATEMENT_TIMESTAMP","TIMEOFDAY","TO_TIMESTAMP","TRANSACTION_TIMESTAMP","ENUM_FIRST","ENUM_LAST","ENUM_RANGE","AREA","BOUND_BOX","BOX","CENTER","CIRCLE","DIAGONAL","DIAMETER","HEIGHT","ISCLOSED","ISOPEN","LENGTH","LINE","LSEG","NPOINTS","PATH","PCLOSE","POINT","POLYGON","POPEN","RADIUS","SLOPE","WIDTH","ABBREV","BROADCAST","FAMILY","HOST","HOSTMASK","INET_MERGE","INET_SAME_FAMILY","MACADDR8_SET7BIT","MASKLEN","NETMASK","NETWORK","SET_MASKLEN","TEXT","TRUNC","ARRAY_TO_TSVECTOR","GET_CURRENT_TS_CONFIG","JSONB_TO_TSVECTOR","JSON_TO_TSVECTOR","LENGTH","NUMNODE","PHRASETO_TSQUERY","PLAINTO_TSQUERY","QUERYTREE","SETWEIGHT","STRIP","TO_TSQUERY","TO_TSVECTOR","TSQUERY_PHRASE","TSVECTOR_TO_ARRAY","TS_DEBUG","TS_DELETE","TS_FILTER","TS_HEADLINE","TS_LEXIZE","TS_PARSE","TS_RANK","TS_RANK_CD","TS_REWRITE","TS_STAT","TS_TOKEN_TYPE","WEBSEARCH_TO_TSQUERY","UUID","CURSOR_TO_XML","CURSOR_TO_XMLSCHEMA","DATABASE_TO_XML","DATABASE_TO_XMLSCHEMA","DATABASE_TO_XML_AND_XMLSCHEMA","NEXTVAL","QUERY_TO_XML","QUERY_TO_XMLSCHEMA","QUERY_TO_XML_AND_XMLSCHEMA","SCHEMA_TO_XML","SCHEMA_TO_XMLSCHEMA","SCHEMA_TO_XML_AND_XMLSCHEMA","STRING","TABLE_TO_XML","TABLE_TO_XMLSCHEMA","TABLE_TO_XML_AND_XMLSCHEMA","XMLAGG","XMLCOMMENT","XMLCONCAT","XMLELEMENT","XMLEXISTS","XMLFOREST","XMLPARSE","XMLPI","XMLROOT","XMLSERIALIZE","XMLTABLE","XML_IS_WELL_FORMED","XML_IS_WELL_FORMED_CONTENT","XML_IS_WELL_FORMED_DOCUMENT","XPATH","XPATH_EXISTS","ARRAY_TO_JSON","JSONB_AGG","JSONB_ARRAY_ELEMENTS","JSONB_ARRAY_ELEMENTS_TEXT","JSONB_ARRAY_LENGTH","JSONB_BUILD_ARRAY","JSONB_BUILD_OBJECT","JSONB_EACH","JSONB_EACH_TEXT","JSONB_EXTRACT_PATH","JSONB_EXTRACT_PATH_TEXT","JSONB_INSERT","JSONB_OBJECT","JSONB_OBJECT_AGG","JSONB_OBJECT_KEYS","JSONB_PATH_EXISTS","JSONB_PATH_EXISTS_TZ","JSONB_PATH_MATCH","JSONB_PATH_MATCH_TZ","JSONB_PATH_QUERY","JSONB_PATH_QUERY_ARRAY","JSONB_PATH_QUERY_ARRAY_TZ","JSONB_PATH_QUERY_FIRST","JSONB_PATH_QUERY_FIRST_TZ","JSONB_PATH_QUERY_TZ","JSONB_POPULATE_RECORD","JSONB_POPULATE_RECORDSET","JSONB_PRETTY","JSONB_SET","JSONB_SET_LAX","JSONB_STRIP_NULLS","JSONB_TO_RECORD","JSONB_TO_RECORDSET","JSONB_TYPEOF","JSON_AGG","JSON_ARRAY_ELEMENTS","JSON_ARRAY_ELEMENTS_TEXT","JSON_ARRAY_LENGTH","JSON_BUILD_ARRAY","JSON_BUILD_OBJECT","JSON_EACH","JSON_EACH_TEXT","JSON_EXTRACT_PATH","JSON_EXTRACT_PATH_TEXT","JSON_OBJECT","JSON_OBJECT_AGG","JSON_OBJECT_KEYS","JSON_POPULATE_RECORD","JSON_POPULATE_RECORDSET","JSON_STRIP_NULLS","JSON_TO_RECORD","JSON_TO_RECORDSET","JSON_TYPEOF","ROW_TO_JSON","TO_JSON","TO_JSONB","TO_TIMESTAMP","CURRVAL","LASTVAL","NEXTVAL","SETVAL","COALESCE","GREATEST","LEAST","NULLIF","ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_DIMS","ARRAY_FILL","ARRAY_LENGTH","ARRAY_LOWER","ARRAY_NDIMS","ARRAY_POSITION","ARRAY_POSITIONS","ARRAY_PREPEND","ARRAY_REMOVE","ARRAY_REPLACE","ARRAY_TO_STRING","ARRAY_UPPER","CARDINALITY","STRING_TO_ARRAY","TRIM_ARRAY","UNNEST","ISEMPTY","LOWER","LOWER_INC","LOWER_INF","MULTIRANGE","RANGE_MERGE","UPPER","UPPER_INC","UPPER_INF","ARRAY_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COALESCE","CORR","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","EVERY","GROUPING","JSONB_AGG","JSONB_OBJECT_AGG","JSON_AGG","JSON_OBJECT_AGG","MAX","MIN","MODE","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANGE_AGG","RANGE_INTERSECT_AGG","RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","TO_JSON","TO_JSONB","VARIANCE","VAR_POP","VAR_SAMP","XMLAGG","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER","GENERATE_SERIES","GENERATE_SUBSCRIPTS","ACLDEFAULT","ACLEXPLODE","COL_DESCRIPTION","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_QUERY","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","FORMAT_TYPE","HAS_ANY_COLUMN_PRIVILEGE","HAS_COLUMN_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE","HAS_FUNCTION_PRIVILEGE","HAS_LANGUAGE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_SEQUENCE_PRIVILEGE","HAS_SERVER_PRIVILEGE","HAS_TABLESPACE_PRIVILEGE","HAS_TABLE_PRIVILEGE","HAS_TYPE_PRIVILEGE","INET_CLIENT_ADDR","INET_CLIENT_PORT","INET_SERVER_ADDR","INET_SERVER_PORT","MAKEACLITEM","OBJ_DESCRIPTION","PG_BACKEND_PID","PG_BLOCKING_PIDS","PG_COLLATION_IS_VISIBLE","PG_CONF_LOAD_TIME","PG_CONTROL_CHECKPOINT","PG_CONTROL_INIT","PG_CONTROL_SYSTEM","PG_CONVERSION_IS_VISIBLE","PG_CURRENT_LOGFILE","PG_CURRENT_SNAPSHOT","PG_CURRENT_XACT_ID","PG_CURRENT_XACT_ID_IF_ASSIGNED","PG_DESCRIBE_OBJECT","PG_FUNCTION_IS_VISIBLE","PG_GET_CATALOG_FOREIGN_KEYS","PG_GET_CONSTRAINTDEF","PG_GET_EXPR","PG_GET_FUNCTIONDEF","PG_GET_FUNCTION_ARGUMENTS","PG_GET_FUNCTION_IDENTITY_ARGUMENTS","PG_GET_FUNCTION_RESULT","PG_GET_INDEXDEF","PG_GET_KEYWORDS","PG_GET_OBJECT_ADDRESS","PG_GET_OWNED_SEQUENCE","PG_GET_RULEDEF","PG_GET_SERIAL_SEQUENCE","PG_GET_STATISTICSOBJDEF","PG_GET_TRIGGERDEF","PG_GET_USERBYID","PG_GET_VIEWDEF","PG_HAS_ROLE","PG_IDENTIFY_OBJECT","PG_IDENTIFY_OBJECT_AS_ADDRESS","PG_INDEXAM_HAS_PROPERTY","PG_INDEX_COLUMN_HAS_PROPERTY","PG_INDEX_HAS_PROPERTY","PG_IS_OTHER_TEMP_SCHEMA","PG_JIT_AVAILABLE","PG_LAST_COMMITTED_XACT","PG_LISTENING_CHANNELS","PG_MY_TEMP_SCHEMA","PG_NOTIFICATION_QUEUE_USAGE","PG_OPCLASS_IS_VISIBLE","PG_OPERATOR_IS_VISIBLE","PG_OPFAMILY_IS_VISIBLE","PG_OPTIONS_TO_TABLE","PG_POSTMASTER_START_TIME","PG_SAFE_SNAPSHOT_BLOCKING_PIDS","PG_SNAPSHOT_XIP","PG_SNAPSHOT_XMAX","PG_SNAPSHOT_XMIN","PG_STATISTICS_OBJ_IS_VISIBLE","PG_TABLESPACE_DATABASES","PG_TABLESPACE_LOCATION","PG_TABLE_IS_VISIBLE","PG_TRIGGER_DEPTH","PG_TS_CONFIG_IS_VISIBLE","PG_TS_DICT_IS_VISIBLE","PG_TS_PARSER_IS_VISIBLE","PG_TS_TEMPLATE_IS_VISIBLE","PG_TYPEOF","PG_TYPE_IS_VISIBLE","PG_VISIBLE_IN_SNAPSHOT","PG_XACT_COMMIT_TIMESTAMP","PG_XACT_COMMIT_TIMESTAMP_ORIGIN","PG_XACT_STATUS","PQSERVERVERSION","ROW_SECURITY_ACTIVE","SESSION_USER","SHOBJ_DESCRIPTION","TO_REGCLASS","TO_REGCOLLATION","TO_REGNAMESPACE","TO_REGOPER","TO_REGOPERATOR","TO_REGPROC","TO_REGPROCEDURE","TO_REGROLE","TO_REGTYPE","TXID_CURRENT","TXID_CURRENT_IF_ASSIGNED","TXID_CURRENT_SNAPSHOT","TXID_SNAPSHOT_XIP","TXID_SNAPSHOT_XMAX","TXID_SNAPSHOT_XMIN","TXID_STATUS","TXID_VISIBLE_IN_SNAPSHOT","USER","VERSION","BRIN_DESUMMARIZE_RANGE","BRIN_SUMMARIZE_NEW_VALUES","BRIN_SUMMARIZE_RANGE","CONVERT_FROM","CURRENT_SETTING","GIN_CLEAN_PENDING_LIST","PG_ADVISORY_LOCK","PG_ADVISORY_LOCK_SHARED","PG_ADVISORY_UNLOCK","PG_ADVISORY_UNLOCK_ALL","PG_ADVISORY_UNLOCK_SHARED","PG_ADVISORY_XACT_LOCK","PG_ADVISORY_XACT_LOCK_SHARED","PG_BACKUP_START_TIME","PG_CANCEL_BACKEND","PG_COLLATION_ACTUAL_VERSION","PG_COLUMN_COMPRESSION","PG_COLUMN_SIZE","PG_COPY_LOGICAL_REPLICATION_SLOT","PG_COPY_PHYSICAL_REPLICATION_SLOT","PG_CREATE_LOGICAL_REPLICATION_SLOT","PG_CREATE_PHYSICAL_REPLICATION_SLOT","PG_CREATE_RESTORE_POINT","PG_CURRENT_WAL_FLUSH_LSN","PG_CURRENT_WAL_INSERT_LSN","PG_CURRENT_WAL_LSN","PG_DATABASE_SIZE","PG_DROP_REPLICATION_SLOT","PG_EXPORT_SNAPSHOT","PG_FILENODE_RELATION","PG_GET_WAL_REPLAY_PAUSE_STATE","PG_IMPORT_SYSTEM_COLLATIONS","PG_INDEXES_SIZE","PG_IS_IN_BACKUP","PG_IS_IN_RECOVERY","PG_IS_WAL_REPLAY_PAUSED","PG_LAST_WAL_RECEIVE_LSN","PG_LAST_WAL_REPLAY_LSN","PG_LAST_XACT_REPLAY_TIMESTAMP","PG_LOGICAL_EMIT_MESSAGE","PG_LOGICAL_SLOT_GET_BINARY_CHANGES","PG_LOGICAL_SLOT_GET_CHANGES","PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES","PG_LOGICAL_SLOT_PEEK_CHANGES","PG_LOG_BACKEND_MEMORY_CONTEXTS","PG_LS_ARCHIVE_STATUSDIR","PG_LS_DIR","PG_LS_LOGDIR","PG_LS_TMPDIR","PG_LS_WALDIR","PG_PARTITION_ANCESTORS","PG_PARTITION_ROOT","PG_PARTITION_TREE","PG_PROMOTE","PG_READ_BINARY_FILE","PG_READ_FILE","PG_RELATION_FILENODE","PG_RELATION_FILEPATH","PG_RELATION_SIZE","PG_RELOAD_CONF","PG_REPLICATION_ORIGIN_ADVANCE","PG_REPLICATION_ORIGIN_CREATE","PG_REPLICATION_ORIGIN_DROP","PG_REPLICATION_ORIGIN_OID","PG_REPLICATION_ORIGIN_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_IS_SETUP","PG_REPLICATION_ORIGIN_SESSION_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_RESET","PG_REPLICATION_ORIGIN_SESSION_SETUP","PG_REPLICATION_ORIGIN_XACT_RESET","PG_REPLICATION_ORIGIN_XACT_SETUP","PG_REPLICATION_SLOT_ADVANCE","PG_ROTATE_LOGFILE","PG_SIZE_BYTES","PG_SIZE_PRETTY","PG_START_BACKUP","PG_STAT_FILE","PG_STOP_BACKUP","PG_SWITCH_WAL","PG_TABLESPACE_SIZE","PG_TABLE_SIZE","PG_TERMINATE_BACKEND","PG_TOTAL_RELATION_SIZE","PG_TRY_ADVISORY_LOCK","PG_TRY_ADVISORY_LOCK_SHARED","PG_TRY_ADVISORY_XACT_LOCK","PG_TRY_ADVISORY_XACT_LOCK_SHARED","PG_WALFILE_NAME","PG_WALFILE_NAME_OFFSET","PG_WAL_LSN_DIFF","PG_WAL_REPLAY_PAUSE","PG_WAL_REPLAY_RESUME","SET_CONFIG","SUPPRESS_REDUNDANT_UPDATES_TRIGGER","TSVECTOR_UPDATE_TRIGGER","TSVECTOR_UPDATE_TRIGGER_COLUMN","PG_EVENT_TRIGGER_DDL_COMMANDS","PG_EVENT_TRIGGER_DROPPED_OBJECTS","PG_EVENT_TRIGGER_TABLE_REWRITE_OID","PG_EVENT_TRIGGER_TABLE_REWRITE_REASON","PG_GET_OBJECT_ADDRESS","PG_MCV_LIST_ITEMS","CAST"],UN=["ABORT","ABSOLUTE","ACCESS","ACTION","ADD","ADMIN","AFTER","AGGREGATE","ALL","ALSO","ALTER","ALWAYS","ANALYSE","ANALYZE","AND","ANY","AS","ASC","ASENSITIVE","ASSERTION","ASSIGNMENT","ASYMMETRIC","AT","ATOMIC","ATTACH","ATTRIBUTE","AUTHORIZATION","BACKWARD","BEFORE","BEGIN","BETWEEN","BINARY","BOTH","BREADTH","BY","CACHE","CALL","CALLED","CASCADE","CASCADED","CASE","CAST","CATALOG","CHAIN","CHARACTERISTICS","CHECK","CHECKPOINT","CLASS","CLOSE","CLUSTER","COALESCE","COLLATE","COLLATION","COLUMN","COLUMNS","COMMENT","COMMENTS","COMMIT","COMMITTED","COMPRESSION","CONCURRENTLY","CONFIGURATION","CONFLICT","CONNECTION","CONSTRAINT","CONSTRAINTS","CONTENT","CONTINUE","CONVERSION","COPY","COST","CREATE","CROSS","CSV","CUBE","CURRENT","CURRENT_CATALOG","CURRENT_DATE","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","CYCLE","DATA","DATABASE","DAY","DEALLOCATE","DEC","DECLARE","DEFAULT","DEFAULTS","DEFERRABLE","DEFERRED","DEFINER","DELETE","DELIMITER","DELIMITERS","DEPENDS","DEPTH","DESC","DETACH","DICTIONARY","DISABLE","DISCARD","DISTINCT","DO","DOCUMENT","DOMAIN","DROP","EACH","ELSE","ENABLE","ENCODING","ENCRYPTED","END","ENUM","ESCAPE","EVENT","EXCEPT","EXCLUDE","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXPLAIN","EXPRESSION","EXTENSION","EXTERNAL","EXTRACT","FALSE","FAMILY","FETCH","FILTER","FINALIZE","FIRST","FOLLOWING","FOR","FORCE","FOREIGN","FORWARD","FREEZE","FROM","FULL","FUNCTION","FUNCTIONS","GENERATED","GLOBAL","GRANT","GRANTED","GREATEST","GROUP","GROUPING","GROUPS","HANDLER","HAVING","HEADER","HOLD","HOUR","IDENTITY","IF","ILIKE","IMMEDIATE","IMMUTABLE","IMPLICIT","IMPORT","IN","INCLUDE","INCLUDING","INCREMENT","INDEX","INDEXES","INHERIT","INHERITS","INITIALLY","INLINE","INNER","INOUT","INPUT","INSENSITIVE","INSERT","INSTEAD","INTERSECT","INTO","INVOKER","IS","ISNULL","ISOLATION","JOIN","KEY","LANGUAGE","LARGE","LAST","LATERAL","LEADING","LEAKPROOF","LEAST","LEFT","LEVEL","LIKE","LIMIT","LISTEN","LOAD","LOCAL","LOCALTIME","LOCALTIMESTAMP","LOCK","LOCKED","LOGGED","MAPPING","MATCH","MATERIALIZED","MAXVALUE","METHOD","MINUTE","MINVALUE","MODE","MONTH","MOVE","NATIONAL","NATURAL","NCHAR","NEW","NEXT","NFC","NFD","NFKC","NFKD","NO","NONE","NORMALIZE","NORMALIZED","NOT","NOTHING","NOTIFY","NOTNULL","NOWAIT","NULL","NULLIF","NULLS","OBJECT","OF","OFF","OFFSET","OIDS","OLD","ON","ONLY","OPERATOR","OPTION","OPTIONS","OR","ORDER","ORDINALITY","OTHERS","OUT","OUTER","OVER","OVERLAPS","OVERLAY","OVERRIDING","OWNED","OWNER","PARALLEL","PARSER","PARTIAL","PARTITION","PASSING","PASSWORD","PLACING","PLANS","POLICY","POSITION","PRECEDING","PREPARE","PREPARED","PRESERVE","PRIMARY","PRIOR","PRIVILEGES","PROCEDURAL","PROCEDURE","PROCEDURES","PROGRAM","PUBLICATION","QUOTE","RANGE","READ","REASSIGN","RECHECK","RECURSIVE","REF","REFERENCES","REFERENCING","REFRESH","REINDEX","RELATIVE","RENAME","REPEATABLE","REPLACE","REPLICA","RESET","RESTART","RESTRICT","RETURN","RETURNING","RETURNS","REVOKE","RIGHT","ROLE","ROLLBACK","ROLLUP","ROUTINE","ROUTINES","ROW","ROWS","RULE","SAVEPOINT","SCHEMA","SCHEMAS","SCROLL","SEARCH","SECOND","SECURITY","SELECT","SEQUENCE","SEQUENCES","SERIALIZABLE","SERVER","SESSION","SESSION_USER","SET","SETOF","SETS","SHARE","SHOW","SIMILAR","SIMPLE","SKIP","SNAPSHOT","SOME","SQL","STABLE","STANDALONE","START","STATEMENT","STATISTICS","STDIN","STDOUT","STORAGE","STORED","STRICT","STRIP","SUBSCRIPTION","SUBSTRING","SUPPORT","SYMMETRIC","SYSID","SYSTEM","TABLE","TABLES","TABLESAMPLE","TABLESPACE","TEMP","TEMPLATE","TEMPORARY","THEN","TIES","TO","TRAILING","TRANSACTION","TRANSFORM","TREAT","TRIGGER","TRIM","TRUE","TRUNCATE","TRUSTED","UESCAPE","UNBOUNDED","UNCOMMITTED","UNENCRYPTED","UNION","UNIQUE","UNKNOWN","UNLISTEN","UNLOGGED","UNTIL","UPDATE","USER","USING","VACUUM","VALID","VALIDATE","VALIDATOR","VALUE","VALUES","VARIADIC","VERBOSE","VERSION","VIEW","VIEWS","VOLATILE","WHEN","WHERE","WHITESPACE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","XMLATTRIBUTES","XMLCONCAT","XMLELEMENT","XMLEXISTS","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROOT","XMLSERIALIZE","XMLTABLE","YEAR","YES"],hN=["ARRAY","BIGINT","BIT","BIT VARYING","BOOL","BOOLEAN","CHAR","CHARACTER","CHARACTER VARYING","DECIMAL","DOUBLE","ENUM","FLOAT","INT","INTEGER","INTERVAL","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TIMESTAMPTZ","VARCHAR","XML","ZONE"],GN=d(["SELECT [ALL | DISTINCT]"]),gN=d(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","FOR {UPDATE | NO KEY UPDATE | SHARE | KEY SHARE} [OF]","INSERT INTO","VALUES","SET","RETURNING"]),Nn=d(["CREATE [GLOBAL | LOCAL] [TEMPORARY | TEMP | UNLOGGED] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [TEMP | TEMPORARY] [RECURSIVE] VIEW","CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE [ONLY]","WHERE CURRENT OF","ON CONFLICT","DELETE FROM [ONLY]","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS] [ONLY]","ALTER TABLE ALL IN TABLESPACE","RENAME [COLUMN]","RENAME TO","ADD [COLUMN] [IF NOT EXISTS]","DROP [COLUMN] [IF EXISTS]","ALTER [COLUMN]","SET DATA TYPE","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","TRUNCATE [TABLE] [ONLY]","SET SCHEMA","AFTER","ABORT","ALTER AGGREGATE","ALTER COLLATION","ALTER CONVERSION","ALTER DATABASE","ALTER DEFAULT PRIVILEGES","ALTER DOMAIN","ALTER EVENT TRIGGER","ALTER EXTENSION","ALTER FOREIGN DATA WRAPPER","ALTER FOREIGN TABLE","ALTER FUNCTION","ALTER GROUP","ALTER INDEX","ALTER LANGUAGE","ALTER LARGE OBJECT","ALTER MATERIALIZED VIEW","ALTER OPERATOR","ALTER OPERATOR CLASS","ALTER OPERATOR FAMILY","ALTER POLICY","ALTER PROCEDURE","ALTER PUBLICATION","ALTER ROLE","ALTER ROUTINE","ALTER RULE","ALTER SCHEMA","ALTER SEQUENCE","ALTER SERVER","ALTER STATISTICS","ALTER SUBSCRIPTION","ALTER SYSTEM","ALTER TABLESPACE","ALTER TEXT SEARCH CONFIGURATION","ALTER TEXT SEARCH DICTIONARY","ALTER TEXT SEARCH PARSER","ALTER TEXT SEARCH TEMPLATE","ALTER TRIGGER","ALTER TYPE","ALTER USER","ALTER USER MAPPING","ALTER VIEW","ANALYZE","BEGIN","CALL","CHECKPOINT","CLOSE","CLUSTER","COMMIT","COMMIT PREPARED","COPY","CREATE ACCESS METHOD","CREATE AGGREGATE","CREATE CAST","CREATE COLLATION","CREATE CONVERSION","CREATE DATABASE","CREATE DOMAIN","CREATE EVENT TRIGGER","CREATE EXTENSION","CREATE FOREIGN DATA WRAPPER","CREATE FOREIGN TABLE","CREATE FUNCTION","CREATE GROUP","CREATE INDEX","CREATE LANGUAGE","CREATE OPERATOR","CREATE OPERATOR CLASS","CREATE OPERATOR FAMILY","CREATE POLICY","CREATE PROCEDURE","CREATE PUBLICATION","CREATE ROLE","CREATE RULE","CREATE SCHEMA","CREATE SEQUENCE","CREATE SERVER","CREATE STATISTICS","CREATE SUBSCRIPTION","CREATE TABLESPACE","CREATE TEXT SEARCH CONFIGURATION","CREATE TEXT SEARCH DICTIONARY","CREATE TEXT SEARCH PARSER","CREATE TEXT SEARCH TEMPLATE","CREATE TRANSFORM","CREATE TRIGGER","CREATE TYPE","CREATE USER","CREATE USER MAPPING","DEALLOCATE","DECLARE","DISCARD","DROP ACCESS METHOD","DROP AGGREGATE","DROP CAST","DROP COLLATION","DROP CONVERSION","DROP DATABASE","DROP DOMAIN","DROP EVENT TRIGGER","DROP EXTENSION","DROP FOREIGN DATA WRAPPER","DROP FOREIGN TABLE","DROP FUNCTION","DROP GROUP","DROP INDEX","DROP LANGUAGE","DROP MATERIALIZED VIEW","DROP OPERATOR","DROP OPERATOR CLASS","DROP OPERATOR FAMILY","DROP OWNED","DROP POLICY","DROP PROCEDURE","DROP PUBLICATION","DROP ROLE","DROP ROUTINE","DROP RULE","DROP SCHEMA","DROP SEQUENCE","DROP SERVER","DROP STATISTICS","DROP SUBSCRIPTION","DROP TABLESPACE","DROP TEXT SEARCH CONFIGURATION","DROP TEXT SEARCH DICTIONARY","DROP TEXT SEARCH PARSER","DROP TEXT SEARCH TEMPLATE","DROP TRANSFORM","DROP TRIGGER","DROP TYPE","DROP USER","DROP USER MAPPING","DROP VIEW","EXECUTE","EXPLAIN","FETCH","GRANT","IMPORT FOREIGN SCHEMA","LISTEN","LOAD","LOCK","MOVE","NOTIFY","PREPARE","PREPARE TRANSACTION","REASSIGN OWNED","REFRESH MATERIALIZED VIEW","REINDEX","RELEASE SAVEPOINT","RESET","REVOKE","ROLLBACK","ROLLBACK PREPARED","ROLLBACK TO SAVEPOINT","SAVEPOINT","SECURITY LABEL","SELECT INTO","SET CONSTRAINTS","SET ROLE","SET SESSION AUTHORIZATION","SET TRANSACTION","SHOW","START TRANSACTION","UNLISTEN","VACUUM"]),mN=d(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),HN=d(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),yN=d(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE | GROUPS} BETWEEN","[TIMESTAMP | TIME] {WITH | WITHOUT} TIME ZONE","IS [NOT] DISTINCT FROM"]),bN={name:"postgresql",tokenizerOptions:{reservedSelect:GN,reservedClauses:[...gN,...Nn],reservedSetOperations:mN,reservedJoins:HN,reservedPhrases:yN,reservedKeywords:UN,reservedDataTypes:hN,reservedFunctionNames:MN,nestedBlockComments:!0,extraParens:["[]"],stringTypes:["$$",{quote:"''-qq",prefixes:["U&"]},{quote:"''-qq-bs",prefixes:["E"],requirePrefix:!0},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:[{quote:'""-qq',prefixes:["U&"]}],identChars:{rest:"$"},paramTypes:{numbered:["$"]},operators:["%","^","|/","||/","@",":=","&","|","#","~","<<",">>","~>~","~<~","~>=~","~<=~","@-@","@@","##","<->","&&","&<","&>","<<|","&<|","|>>","|&>","<^","^>","?#","?-","?|","?-|","?||","@>","<@","~=","?","@?","?&","->","->>","#>","#>>","#-","=>",">>=","<<=","~~","~~*","!~~","!~~*","~","~*","!~","!~*","-|-","||","@@@","!!","<%","%>","<<%","%>>","<<->","<->>","<<<->","<->>>","::",":"]},formatOptions:{alwaysDenseOperators:["::",":"],onelineClauses:Nn}},BN=["ANY_VALUE","APPROXIMATE PERCENTILE_DISC","AVG","COUNT","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP","array","array_concat","array_flatten","get_array_length","split_to_array","subarray","BIT_AND","BIT_OR","BOOL_AND","BOOL_OR","COALESCE","DECODE","GREATEST","LEAST","NVL","NVL2","NULLIF","ADD_MONTHS","AT TIME ZONE","CONVERT_TIMEZONE","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_CMP","DATE_CMP_TIMESTAMP","DATE_CMP_TIMESTAMPTZ","DATE_PART_YEAR","DATEADD","DATEDIFF","DATE_PART","DATE_TRUNC","EXTRACT","GETDATE","INTERVAL_CMP","LAST_DAY","MONTHS_BETWEEN","NEXT_DAY","SYSDATE","TIMEOFDAY","TIMESTAMP_CMP","TIMESTAMP_CMP_DATE","TIMESTAMP_CMP_TIMESTAMPTZ","TIMESTAMPTZ_CMP","TIMESTAMPTZ_CMP_DATE","TIMESTAMPTZ_CMP_TIMESTAMP","TIMEZONE","TO_TIMESTAMP","TRUNC","AddBBox","DropBBox","GeometryType","ST_AddPoint","ST_Angle","ST_Area","ST_AsBinary","ST_AsEWKB","ST_AsEWKT","ST_AsGeoJSON","ST_AsText","ST_Azimuth","ST_Boundary","ST_Collect","ST_Contains","ST_ContainsProperly","ST_ConvexHull","ST_CoveredBy","ST_Covers","ST_Crosses","ST_Dimension","ST_Disjoint","ST_Distance","ST_DistanceSphere","ST_DWithin","ST_EndPoint","ST_Envelope","ST_Equals","ST_ExteriorRing","ST_Force2D","ST_Force3D","ST_Force3DM","ST_Force3DZ","ST_Force4D","ST_GeometryN","ST_GeometryType","ST_GeomFromEWKB","ST_GeomFromEWKT","ST_GeomFromText","ST_GeomFromWKB","ST_InteriorRingN","ST_Intersects","ST_IsPolygonCCW","ST_IsPolygonCW","ST_IsClosed","ST_IsCollection","ST_IsEmpty","ST_IsSimple","ST_IsValid","ST_Length","ST_LengthSphere","ST_Length2D","ST_LineFromMultiPoint","ST_LineInterpolatePoint","ST_M","ST_MakeEnvelope","ST_MakeLine","ST_MakePoint","ST_MakePolygon","ST_MemSize","ST_MMax","ST_MMin","ST_Multi","ST_NDims","ST_NPoints","ST_NRings","ST_NumGeometries","ST_NumInteriorRings","ST_NumPoints","ST_Perimeter","ST_Perimeter2D","ST_Point","ST_PointN","ST_Points","ST_Polygon","ST_RemovePoint","ST_Reverse","ST_SetPoint","ST_SetSRID","ST_Simplify","ST_SRID","ST_StartPoint","ST_Touches","ST_Within","ST_X","ST_XMax","ST_XMin","ST_Y","ST_YMax","ST_YMin","ST_Z","ST_ZMax","ST_ZMin","SupportsBBox","CHECKSUM","FUNC_SHA1","FNV_HASH","MD5","SHA","SHA1","SHA2","HLL","HLL_CREATE_SKETCH","HLL_CARDINALITY","HLL_COMBINE","IS_VALID_JSON","IS_VALID_JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_EXTRACT_ARRAY_ELEMENT_TEXT","JSON_EXTRACT_PATH_TEXT","JSON_PARSE","JSON_SERIALIZE","ABS","ACOS","ASIN","ATAN","ATAN2","CBRT","CEILING","CEIL","COS","COT","DEGREES","DEXP","DLOG1","DLOG10","EXP","FLOOR","LN","LOG","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SIN","SIGN","SQRT","TAN","TO_HEX","TRUNC","EXPLAIN_MODEL","ASCII","BPCHARCMP","BTRIM","BTTEXT_PATTERN_CMP","CHAR_LENGTH","CHARACTER_LENGTH","CHARINDEX","CHR","COLLATE","CONCAT","CRC32","DIFFERENCE","INITCAP","LEFT","RIGHT","LEN","LENGTH","LOWER","LPAD","RPAD","LTRIM","OCTETINDEX","OCTET_LENGTH","POSITION","QUOTE_IDENT","QUOTE_LITERAL","REGEXP_COUNT","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","REPLICATE","REVERSE","RTRIM","SOUNDEX","SPLIT_PART","STRPOS","STRTOL","SUBSTRING","TEXTLEN","TRANSLATE","TRIM","UPPER","decimal_precision","decimal_scale","is_array","is_bigint","is_boolean","is_char","is_decimal","is_float","is_integer","is_object","is_scalar","is_smallint","is_varchar","json_typeof","AVG","COUNT","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAST_VALUE","LAG","LEAD","LISTAGG","MAX","MEDIAN","MIN","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP","CAST","CONVERT","TO_CHAR","TO_DATE","TO_NUMBER","TEXT_TO_INT_ALT","TEXT_TO_NUMERIC_ALT","CHANGE_QUERY_PRIORITY","CHANGE_SESSION_PRIORITY","CHANGE_USER_PRIORITY","CURRENT_SETTING","PG_CANCEL_BACKEND","PG_TERMINATE_BACKEND","REBOOT_CLUSTER","SET_CONFIG","CURRENT_AWS_ACCOUNT","CURRENT_DATABASE","CURRENT_NAMESPACE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","CURRENT_USER_ID","HAS_ASSUMEROLE_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_TABLE_PRIVILEGE","PG_BACKEND_PID","PG_GET_COLS","PG_GET_GRANTEE_BY_IAM_ROLE","PG_GET_IAM_ROLE_BY_USER","PG_GET_LATE_BINDING_VIEW_COLS","PG_LAST_COPY_COUNT","PG_LAST_COPY_ID","PG_LAST_UNLOAD_ID","PG_LAST_QUERY_ID","PG_LAST_UNLOAD_COUNT","SESSION_USER","SLICE_NUM","USER","VERSION"],FN=["AES128","AES256","ALL","ALLOWOVERWRITE","ANY","AS","ASC","AUTHORIZATION","BACKUP","BETWEEN","BINARY","BOTH","CHECK","COLUMN","CONSTRAINT","CREATE","CROSS","DEFAULT","DEFERRABLE","DEFLATE","DEFRAG","DESC","DISABLE","DISTINCT","DO","ENABLE","ENCODE","ENCRYPT","ENCRYPTION","EXPLICIT","FALSE","FOR","FOREIGN","FREEZE","FROM","FULL","GLOBALDICT256","GLOBALDICT64K","GROUP","IDENTITY","IGNORE","ILIKE","IN","INITIALLY","INNER","INTO","IS","ISNULL","LANGUAGE","LEADING","LIKE","LIMIT","LOCALTIME","LOCALTIMESTAMP","LUN","LUNS","MINUS","NATURAL","NEW","NOT","NOTNULL","NULL","NULLS","OFF","OFFLINE","OFFSET","OID","OLD","ON","ONLY","OPEN","ORDER","OUTER","OVERLAPS","PARALLEL","PARTITION","PERCENT","PERMISSIONS","PLACING","PRIMARY","RECOVER","REFERENCES","REJECTLOG","RESORT","RESPECT","RESTORE","SIMILAR","SNAPSHOT","SOME","SYSTEM","TABLE","TAG","TDES","THEN","TIMESTAMP","TO","TOP","TRAILING","TRUE","UNIQUE","USING","VERBOSE","WALLET","WITHOUT","ACCEPTANYDATE","ACCEPTINVCHARS","BLANKSASNULL","DATEFORMAT","EMPTYASNULL","ENCODING","ESCAPE","EXPLICIT_IDS","FILLRECORD","IGNOREBLANKLINES","IGNOREHEADER","REMOVEQUOTES","ROUNDEC","TIMEFORMAT","TRIMBLANKS","TRUNCATECOLUMNS","COMPROWS","COMPUPDATE","MAXERROR","NOLOAD","STATUPDATE","FORMAT","CSV","DELIMITER","FIXEDWIDTH","SHAPEFILE","AVRO","JSON","PARQUET","ORC","ACCESS_KEY_ID","CREDENTIALS","ENCRYPTED","IAM_ROLE","MASTER_SYMMETRIC_KEY","SECRET_ACCESS_KEY","SESSION_TOKEN","BZIP2","GZIP","LZOP","ZSTD","MANIFEST","READRATIO","REGION","SSH","RAW","AZ64","BYTEDICT","DELTA","DELTA32K","LZO","MOSTLY8","MOSTLY16","MOSTLY32","RUNLENGTH","TEXT255","TEXT32K","CATALOG_ROLE","SECRET_ARN","EXTERNAL","AUTO","EVEN","KEY","PREDICATE","COMPRESSION"],vN=["ARRAY","BIGINT","BPCHAR","CHAR","CHARACTER VARYING","CHARACTER","DECIMAL","INT","INT2","INT4","INT8","INTEGER","NCHAR","NUMERIC","NVARCHAR","SMALLINT","TEXT","VARBYTE","VARCHAR"],YN=d(["SELECT [ALL | DISTINCT]"]),VN=d(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET"]),ln=d(["CREATE [TEMPORARY | TEMP | LOCAL TEMPORARY | LOCAL TEMP] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE | MATERIALIZED] VIEW","UPDATE","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ALTER TABLE APPEND","ADD [COLUMN]","DROP [COLUMN]","RENAME TO","RENAME COLUMN","ALTER COLUMN","TYPE","ENCODE","TRUNCATE [TABLE]","ABORT","ALTER DATABASE","ALTER DATASHARE","ALTER DEFAULT PRIVILEGES","ALTER GROUP","ALTER MATERIALIZED VIEW","ALTER PROCEDURE","ALTER SCHEMA","ALTER USER","ANALYSE","ANALYZE","ANALYSE COMPRESSION","ANALYZE COMPRESSION","BEGIN","CALL","CANCEL","CLOSE","COMMIT","COPY","CREATE DATABASE","CREATE DATASHARE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL SCHEMA","CREATE EXTERNAL TABLE","CREATE FUNCTION","CREATE GROUP","CREATE LIBRARY","CREATE MODEL","CREATE PROCEDURE","CREATE SCHEMA","CREATE USER","DEALLOCATE","DECLARE","DESC DATASHARE","DROP DATABASE","DROP DATASHARE","DROP FUNCTION","DROP GROUP","DROP LIBRARY","DROP MODEL","DROP MATERIALIZED VIEW","DROP PROCEDURE","DROP SCHEMA","DROP USER","DROP VIEW","DROP","EXECUTE","EXPLAIN","FETCH","GRANT","LOCK","PREPARE","REFRESH MATERIALIZED VIEW","RESET","REVOKE","ROLLBACK","SELECT INTO","SET SESSION AUTHORIZATION","SET SESSION CHARACTERISTICS","SHOW","SHOW EXTERNAL TABLE","SHOW MODEL","SHOW DATASHARES","SHOW PROCEDURE","SHOW TABLE","SHOW VIEW","START TRANSACTION","UNLOAD","VACUUM"]),xN=d(["UNION [ALL]","EXCEPT","INTERSECT","MINUS"]),wN=d(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),WN=d(["NULL AS","DATA CATALOG","HIVE METASTORE","{ROWS | RANGE} BETWEEN"]),XN={name:"redshift",tokenizerOptions:{reservedSelect:YN,reservedClauses:[...VN,...ln],reservedSetOperations:xN,reservedJoins:wN,reservedPhrases:WN,reservedKeywords:FN,reservedDataTypes:vN,reservedFunctionNames:BN,stringTypes:["''-qq"],identTypes:['""-qq'],identChars:{first:"#"},paramTypes:{numbered:["$"]},operators:["^","%","@","|/","||/","&","|","~","<<",">>","||","::"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:ln}},$N=["ADD","AFTER","ALL","ALTER","ANALYZE","AND","ANTI","ANY","ARCHIVE","AS","ASC","AT","AUTHORIZATION","BETWEEN","BOTH","BUCKET","BUCKETS","BY","CACHE","CASCADE","CAST","CHANGE","CHECK","CLEAR","CLUSTER","CLUSTERED","CODEGEN","COLLATE","COLLECTION","COLUMN","COLUMNS","COMMENT","COMMIT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONSTRAINT","COST","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATA","DATABASE","DATABASES","DAY","DBPROPERTIES","DEFINED","DELETE","DELIMITED","DESC","DESCRIBE","DFS","DIRECTORIES","DIRECTORY","DISTINCT","DISTRIBUTE","DIV","DROP","ESCAPE","ESCAPED","EXCEPT","EXCHANGE","EXISTS","EXPORT","EXTENDED","EXTERNAL","EXTRACT","FALSE","FETCH","FIELDS","FILTER","FILEFORMAT","FIRST","FIRST_VALUE","FOLLOWING","FOR","FOREIGN","FORMAT","FORMATTED","FULL","FUNCTION","FUNCTIONS","GLOBAL","GRANT","GROUP","GROUPING","HOUR","IF","IGNORE","IMPORT","IN","INDEX","INDEXES","INNER","INPATH","INPUTFORMAT","INTERSECT","INTO","IS","ITEMS","KEYS","LAST","LAST_VALUE","LATERAL","LAZY","LEADING","LEFT","LIKE","LINES","LIST","LOCAL","LOCATION","LOCK","LOCKS","LOGICAL","MACRO","MATCHED","MERGE","MINUTE","MONTH","MSCK","NAMESPACE","NAMESPACES","NATURAL","NO","NOT","NULL","NULLS","OF","ONLY","OPTION","OPTIONS","OR","ORDER","OUT","OUTER","OUTPUTFORMAT","OVER","OVERLAPS","OVERLAY","OVERWRITE","OWNER","PARTITION","PARTITIONED","PARTITIONS","PERCENT","PLACING","POSITION","PRECEDING","PRIMARY","PRINCIPALS","PROPERTIES","PURGE","QUERY","RANGE","RECORDREADER","RECORDWRITER","RECOVER","REDUCE","REFERENCES","RENAME","REPAIR","REPLACE","RESPECT","RESTRICT","REVOKE","RIGHT","RLIKE","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","SCHEMA","SECOND","SELECT","SEMI","SEPARATED","SERDE","SERDEPROPERTIES","SESSION_USER","SETS","SHOW","SKEWED","SOME","SORT","SORTED","START","STATISTICS","STORED","STRATIFY","SUBSTR","SUBSTRING","TABLE","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","THEN","TO","TOUCH","TRAILING","TRANSACTION","TRANSACTIONS","TRIM","TRUE","TRUNCATE","UNARCHIVE","UNBOUNDED","UNCACHE","UNIQUE","UNKNOWN","UNLOCK","UNSET","USE","USER","USING","VIEW","WINDOW","YEAR","ANALYSE","ARRAY_ZIP","COALESCE","CONTAINS","CONVERT","DAYS","DAY_HOUR","DAY_MINUTE","DAY_SECOND","DECODE","DEFAULT","DISTINCTROW","ENCODE","EXPLODE","EXPLODE_OUTER","FIXED","GREATEST","GROUP_CONCAT","HOURS","HOUR_MINUTE","HOUR_SECOND","IFNULL","LEAST","LEVEL","MINUTE_SECOND","NULLIF","OFFSET","ON","OPTIMIZE","REGEXP","SEPARATOR","SIZE","TYPE","TYPES","UNSIGNED","VARIABLES","YEAR_MONTH"],KN=["ARRAY","BIGINT","BINARY","BOOLEAN","BYTE","CHAR","DATE","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","LONG","MAP","NUMERIC","REAL","SHORT","SMALLINT","STRING","STRUCT","TIMESTAMP_LTZ","TIMESTAMP_NTZ","TIMESTAMP","TINYINT","VARCHAR"],JN=["APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COUNT","COUNT","COUNT_IF","COUNT_MIN_SKETCH","COVAR_POP","COVAR_SAMP","EVERY","FIRST","FIRST_VALUE","GROUPING","GROUPING_ID","KURTOSIS","LAST","LAST_VALUE","MAX","MAX_BY","MEAN","MIN","MIN_BY","PERCENTILE","PERCENTILE","PERCENTILE_APPROX","SKEWNESS","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","CUME_DIST","DENSE_RANK","LAG","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER","ARRAY","ARRAY_CONTAINS","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_UNION","ARRAYS_OVERLAP","ARRAYS_ZIP","FLATTEN","SEQUENCE","SHUFFLE","SLICE","SORT_ARRAY","ELEMENT_AT","ELEMENT_AT","MAP_CONCAT","MAP_ENTRIES","MAP_FROM_ARRAYS","MAP_FROM_ENTRIES","MAP_KEYS","MAP_VALUES","STR_TO_MAP","ADD_MONTHS","CURRENT_DATE","CURRENT_DATE","CURRENT_TIMESTAMP","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","DATE_ADD","DATE_FORMAT","DATE_FROM_UNIX_DATE","DATE_PART","DATE_SUB","DATE_TRUNC","DATEDIFF","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MAKE_DATE","MAKE_DT_INTERVAL","MAKE_INTERVAL","MAKE_TIMESTAMP","MAKE_YM_INTERVAL","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","NOW","QUARTER","SECOND","SESSION_WINDOW","TIMESTAMP_MICROS","TIMESTAMP_MILLIS","TIMESTAMP_SECONDS","TO_DATE","TO_TIMESTAMP","TO_UNIX_TIMESTAMP","TO_UTC_TIMESTAMP","TRUNC","UNIX_DATE","UNIX_MICROS","UNIX_MILLIS","UNIX_SECONDS","UNIX_TIMESTAMP","WEEKDAY","WEEKOFYEAR","WINDOW","YEAR","FROM_JSON","GET_JSON_OBJECT","JSON_ARRAY_LENGTH","JSON_OBJECT_KEYS","JSON_TUPLE","SCHEMA_OF_JSON","TO_JSON","ABS","ACOS","ACOSH","AGGREGATE","ARRAY_SORT","ASCII","ASIN","ASINH","ASSERT_TRUE","ATAN","ATAN2","ATANH","BASE64","BIN","BIT_COUNT","BIT_GET","BIT_LENGTH","BROUND","BTRIM","CARDINALITY","CBRT","CEIL","CEILING","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONV","COS","COSH","COT","CRC32","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_USER","DEGREES","ELT","EXP","EXPM1","FACTORIAL","FIND_IN_SET","FLOOR","FORALL","FORMAT_NUMBER","FORMAT_STRING","FROM_CSV","GETBIT","HASH","HEX","HYPOT","INITCAP","INLINE","INLINE_OUTER","INPUT_FILE_BLOCK_LENGTH","INPUT_FILE_BLOCK_START","INPUT_FILE_NAME","INSTR","ISNAN","ISNOTNULL","ISNULL","JAVA_METHOD","LCASE","LEFT","LENGTH","LEVENSHTEIN","LN","LOCATE","LOG","LOG10","LOG1P","LOG2","LOWER","LPAD","LTRIM","MAP_FILTER","MAP_ZIP_WITH","MD5","MOD","MONOTONICALLY_INCREASING_ID","NAMED_STRUCT","NANVL","NEGATIVE","NVL","NVL2","OCTET_LENGTH","OVERLAY","PARSE_URL","PI","PMOD","POSEXPLODE","POSEXPLODE_OUTER","POSITION","POSITIVE","POW","POWER","PRINTF","RADIANS","RAISE_ERROR","RAND","RANDN","RANDOM","REFLECT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_REPLACE","REPEAT","REPLACE","REVERSE","RIGHT","RINT","ROUND","RPAD","RTRIM","SCHEMA_OF_CSV","SENTENCES","SHA","SHA1","SHA2","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIGNUM","SIN","SINH","SOUNDEX","SPACE","SPARK_PARTITION_ID","SPLIT","SQRT","STACK","SUBSTR","SUBSTRING","SUBSTRING_INDEX","TAN","TANH","TO_CSV","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRY_ADD","TRY_DIVIDE","TYPEOF","UCASE","UNBASE64","UNHEX","UPPER","UUID","VERSION","WIDTH_BUCKET","XPATH","XPATH_BOOLEAN","XPATH_DOUBLE","XPATH_FLOAT","XPATH_INT","XPATH_LONG","XPATH_NUMBER","XPATH_SHORT","XPATH_STRING","XXHASH64","ZIP_WITH","CAST","COALESCE","NULLIF"],kN=d(["SELECT [ALL | DISTINCT]"]),jN=d(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT [INTO | OVERWRITE] [TABLE]","VALUES","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE"]),_n=d(["CREATE [EXTERNAL] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [GLOBAL TEMPORARY | TEMPORARY] VIEW [IF NOT EXISTS]","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD COLUMNS","DROP {COLUMN | COLUMNS}","RENAME TO","RENAME COLUMN","ALTER COLUMN","TRUNCATE TABLE","LATERAL VIEW","ALTER DATABASE","ALTER VIEW","CREATE DATABASE","CREATE FUNCTION","DROP DATABASE","DROP FUNCTION","DROP VIEW","REPAIR TABLE","USE DATABASE","TABLESAMPLE","PIVOT","TRANSFORM","EXPLAIN","ADD FILE","ADD JAR","ANALYZE TABLE","CACHE TABLE","CLEAR CACHE","DESCRIBE DATABASE","DESCRIBE FUNCTION","DESCRIBE QUERY","DESCRIBE TABLE","LIST FILE","LIST JAR","REFRESH","REFRESH TABLE","REFRESH FUNCTION","RESET","SHOW COLUMNS","SHOW CREATE TABLE","SHOW DATABASES","SHOW FUNCTIONS","SHOW PARTITIONS","SHOW TABLE EXTENDED","SHOW TABLES","SHOW TBLPROPERTIES","SHOW VIEWS","UNCACHE TABLE"]),qN=d(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),QN=d(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","[LEFT] {ANTI | SEMI} JOIN","NATURAL [LEFT] {ANTI | SEMI} JOIN"]),ZN=d(["ON DELETE","ON UPDATE","CURRENT ROW","{ROWS | RANGE} BETWEEN"]),zN={name:"spark",tokenizerOptions:{reservedSelect:kN,reservedClauses:[...jN,..._n],reservedSetOperations:qN,reservedJoins:QN,reservedPhrases:ZN,supportsXor:!0,reservedKeywords:$N,reservedDataTypes:KN,reservedFunctionNames:JN,extraParens:["[]"],stringTypes:["''-bs",'""-bs',{quote:"''-raw",prefixes:["R","X"],requirePrefix:!0},{quote:'""-raw',prefixes:["R","X"],requirePrefix:!0}],identTypes:["``"],variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||","->"],postProcess:el},formatOptions:{onelineClauses:_n}};function el(e){return e.map((E,t)=>{const T=e[t-1]||Rt,r=e[t+1]||Rt;return wE.WINDOW(E)&&r.type==="OPEN_PAREN"?Ve(ye({},E),{type:"RESERVED_FUNCTION_NAME"}):E.text==="ITEMS"&&E.type==="RESERVED_KEYWORD"&&!(T.text==="COLLECTION"&&r.text==="TERMINATED")?Ve(ye({},E),{type:"IDENTIFIER",text:E.raw}):E})}var El=["ABS","CHANGES","CHAR","COALESCE","FORMAT","GLOB","HEX","IFNULL","IIF","INSTR","LAST_INSERT_ROWID","LENGTH","LIKE","LIKELIHOOD","LIKELY","LOAD_EXTENSION","LOWER","LTRIM","NULLIF","PRINTF","QUOTE","RANDOM","RANDOMBLOB","REPLACE","ROUND","RTRIM","SIGN","SOUNDEX","SQLITE_COMPILEOPTION_GET","SQLITE_COMPILEOPTION_USED","SQLITE_OFFSET","SQLITE_SOURCE_ID","SQLITE_VERSION","SUBSTR","SUBSTRING","TOTAL_CHANGES","TRIM","TYPEOF","UNICODE","UNLIKELY","UPPER","ZEROBLOB","AVG","COUNT","GROUP_CONCAT","MAX","MIN","SUM","TOTAL","DATE","TIME","DATETIME","JULIANDAY","UNIXEPOCH","STRFTIME","row_number","rank","dense_rank","percent_rank","cume_dist","ntile","lag","lead","first_value","last_value","nth_value","ACOS","ACOSH","ASIN","ASINH","ATAN","ATAN2","ATANH","CEIL","CEILING","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG","LOG10","LOG2","MOD","PI","POW","POWER","RADIANS","SIN","SINH","SQRT","TAN","TANH","TRUNC","JSON","JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_ARRAY_LENGTH","JSON_EXTRACT","JSON_INSERT","JSON_OBJECT","JSON_PATCH","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_TYPE","JSON_TYPE","JSON_VALID","JSON_QUOTE","JSON_GROUP_ARRAY","JSON_GROUP_OBJECT","JSON_EACH","JSON_TREE","CAST"],tl=["ABORT","ACTION","ADD","AFTER","ALL","ALTER","AND","ARE","ALWAYS","ANALYZE","AS","ASC","ATTACH","AUTOINCREMENT","BEFORE","BEGIN","BETWEEN","BY","CASCADE","CASE","CAST","CHECK","COLLATE","COLUMN","COMMIT","CONFLICT","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATABASE","DEFAULT","DEFERRABLE","DEFERRED","DELETE","DESC","DETACH","DISTINCT","DO","DROP","EACH","ELSE","END","ESCAPE","EXCEPT","EXCLUDE","EXCLUSIVE","EXISTS","EXPLAIN","FAIL","FILTER","FIRST","FOLLOWING","FOR","FOREIGN","FROM","FULL","GENERATED","GLOB","GROUP","GROUPS","HAVING","IF","IGNORE","IMMEDIATE","IN","INDEX","INDEXED","INITIALLY","INNER","INSERT","INSTEAD","INTERSECT","INTO","IS","ISNULL","JOIN","KEY","LAST","LEFT","LIKE","LIMIT","MATCH","MATERIALIZED","NATURAL","NO","NOT","NOTHING","NOTNULL","NULL","NULLS","OF","OFFSET","ON","ONLY","OPEN","OR","ORDER","OTHERS","OUTER","OVER","PARTITION","PLAN","PRAGMA","PRECEDING","PRIMARY","QUERY","RAISE","RANGE","RECURSIVE","REFERENCES","REGEXP","REINDEX","RELEASE","RENAME","REPLACE","RESTRICT","RETURNING","RIGHT","ROLLBACK","ROW","ROWS","SAVEPOINT","SELECT","SET","TABLE","TEMP","TEMPORARY","THEN","TIES","TO","TRANSACTION","TRIGGER","UNBOUNDED","UNION","UNIQUE","UPDATE","USING","VACUUM","VALUES","VIEW","VIRTUAL","WHEN","WHERE","WINDOW","WITH","WITHOUT"],Tl=["ANY","ARRAY","BLOB","CHARACTER","DECIMAL","INT","INTEGER","NATIVE CHARACTER","NCHAR","NUMERIC","NVARCHAR","REAL","TEXT","VARCHAR","VARYING CHARACTER"],rl=d(["SELECT [ALL | DISTINCT]"]),sl=d(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK] INTO","REPLACE INTO","VALUES","SET"]),Cn=d(["CREATE [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]","CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]","UPDATE [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK]","ON CONFLICT","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME [COLUMN]","RENAME TO","SET SCHEMA"]),nl=d(["UNION [ALL]","EXCEPT","INTERSECT"]),Rl=d(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),Al=d(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE | GROUPS} BETWEEN"]),ol={name:"sqlite",tokenizerOptions:{reservedSelect:rl,reservedClauses:[...sl,...Cn],reservedSetOperations:nl,reservedJoins:Rl,reservedPhrases:Al,reservedKeywords:tl,reservedDataTypes:Tl,reservedFunctionNames:El,stringTypes:["''-qq",{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``","[]"],paramTypes:{positional:!0,numbered:["?"],named:[":","@","$"]},operators:["%","~","&","|","<<",">>","==","->","->>","||"]},formatOptions:{onelineClauses:Cn}},il=["GROUPING","RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","ROW_NUMBER","POSITION","OCCURRENCES_REGEX","POSITION_REGEX","EXTRACT","CHAR_LENGTH","CHARACTER_LENGTH","OCTET_LENGTH","CARDINALITY","ABS","MOD","LN","EXP","POWER","SQRT","FLOOR","CEIL","CEILING","WIDTH_BUCKET","SUBSTRING","SUBSTRING_REGEX","UPPER","LOWER","CONVERT","TRANSLATE","TRANSLATE_REGEX","TRIM","OVERLAY","NORMALIZE","SPECIFICTYPE","CURRENT_DATE","CURRENT_TIME","LOCALTIME","CURRENT_TIMESTAMP","LOCALTIMESTAMP","COUNT","AVG","MAX","MIN","SUM","STDDEV_POP","STDDEV_SAMP","VAR_SAMP","VAR_POP","COLLECT","FUSION","INTERSECTION","COVAR_POP","COVAR_SAMP","CORR","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","PERCENTILE_CONT","PERCENTILE_DISC","CAST","COALESCE","NULLIF","ROUND","SIN","COS","TAN","ASIN","ACOS","ATAN"],Sl=["ALL","ALLOCATE","ALTER","ANY","ARE","AS","ASENSITIVE","ASYMMETRIC","AT","ATOMIC","AUTHORIZATION","BEGIN","BETWEEN","BOTH","BY","CALL","CALLED","CASCADED","CAST","CHECK","CLOSE","COALESCE","COLLATE","COLUMN","COMMIT","CONDITION","CONNECT","CONSTRAINT","CORRESPONDING","CREATE","CROSS","CUBE","CURRENT","CURRENT_CATALOG","CURRENT_DEFAULT_TRANSFORM_GROUP","CURRENT_PATH","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TRANSFORM_GROUP_FOR_TYPE","CURRENT_USER","CURSOR","CYCLE","DEALLOCATE","DAY","DECLARE","DEFAULT","DELETE","DEREF","DESCRIBE","DETERMINISTIC","DISCONNECT","DISTINCT","DROP","DYNAMIC","EACH","ELEMENT","END-EXEC","ESCAPE","EVERY","EXCEPT","EXEC","EXECUTE","EXISTS","EXTERNAL","FALSE","FETCH","FILTER","FOR","FOREIGN","FREE","FROM","FULL","FUNCTION","GET","GLOBAL","GRANT","GROUP","HAVING","HOLD","HOUR","IDENTITY","IN","INDICATOR","INNER","INOUT","INSENSITIVE","INSERT","INTERSECT","INTO","IS","LANGUAGE","LARGE","LATERAL","LEADING","LEFT","LIKE","LIKE_REGEX","LOCAL","MATCH","MEMBER","MERGE","METHOD","MINUTE","MODIFIES","MODULE","MONTH","NATURAL","NEW","NO","NONE","NOT","NULL","NULLIF","OF","OLD","ON","ONLY","OPEN","ORDER","OUT","OUTER","OVER","OVERLAPS","PARAMETER","PARTITION","PRECISION","PREPARE","PRIMARY","PROCEDURE","RANGE","READS","REAL","RECURSIVE","REF","REFERENCES","REFERENCING","RELEASE","RESULT","RETURN","RETURNS","REVOKE","RIGHT","ROLLBACK","ROLLUP","ROW","ROWS","SAVEPOINT","SCOPE","SCROLL","SEARCH","SECOND","SELECT","SENSITIVE","SESSION_USER","SET","SIMILAR","SOME","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","START","STATIC","SUBMULTISET","SYMMETRIC","SYSTEM","SYSTEM_USER","TABLE","TABLESAMPLE","THEN","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO","TRAILING","TRANSLATION","TREAT","TRIGGER","TRUE","UESCAPE","UNION","UNIQUE","UNKNOWN","UNNEST","UPDATE","USER","USING","VALUE","VALUES","WHENEVER","WINDOW","WITHIN","WITHOUT","YEAR"],Ol=["ARRAY","BIGINT","BINARY LARGE OBJECT","BINARY VARYING","BINARY","BLOB","BOOLEAN","CHAR LARGE OBJECT","CHAR VARYING","CHAR","CHARACTER LARGE OBJECT","CHARACTER VARYING","CHARACTER","CLOB","DATE","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","MULTISET","NATIONAL CHAR VARYING","NATIONAL CHAR","NATIONAL CHARACTER LARGE OBJECT","NATIONAL CHARACTER VARYING","NATIONAL CHARACTER","NCHAR LARGE OBJECT","NCHAR VARYING","NCHAR","NCLOB","NUMERIC","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR"],Il=d(["SELECT [ALL | DISTINCT]"]),al=d(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET"]),cn=d(["CREATE [GLOBAL TEMPORARY | LOCAL TEMPORARY] TABLE","CREATE [RECURSIVE] VIEW","UPDATE","WHERE CURRENT OF","DELETE FROM","DROP TABLE","ALTER TABLE","ADD COLUMN","DROP [COLUMN]","RENAME COLUMN","RENAME TO","ALTER [COLUMN]","{SET | DROP} DEFAULT","ADD SCOPE","DROP SCOPE {CASCADE | RESTRICT}","RESTART WITH","TRUNCATE TABLE","SET SCHEMA"]),Nl=d(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),ll=d(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),_l=d(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),Cl={name:"sql",tokenizerOptions:{reservedSelect:Il,reservedClauses:[...al,...cn],reservedSetOperations:Nl,reservedJoins:ll,reservedPhrases:_l,reservedKeywords:Sl,reservedDataTypes:Ol,reservedFunctionNames:il,stringTypes:[{quote:"''-qq-bs",prefixes:["N","U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``"],paramTypes:{positional:!0},operators:["||"]},formatOptions:{onelineClauses:cn}},cl=["ABS","ACOS","ALL_MATCH","ANY_MATCH","APPROX_DISTINCT","APPROX_MOST_FREQUENT","APPROX_PERCENTILE","APPROX_SET","ARBITRARY","ARRAYS_OVERLAP","ARRAY_AGG","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_SORT","ARRAY_UNION","ASIN","ATAN","ATAN2","AT_TIMEZONE","AVG","BAR","BETA_CDF","BING_TILE","BING_TILES_AROUND","BING_TILE_AT","BING_TILE_COORDINATES","BING_TILE_POLYGON","BING_TILE_QUADKEY","BING_TILE_ZOOM_LEVEL","BITWISE_AND","BITWISE_AND_AGG","BITWISE_LEFT_SHIFT","BITWISE_NOT","BITWISE_OR","BITWISE_OR_AGG","BITWISE_RIGHT_SHIFT","BITWISE_RIGHT_SHIFT_ARITHMETIC","BITWISE_XOR","BIT_COUNT","BOOL_AND","BOOL_OR","CARDINALITY","CAST","CBRT","CEIL","CEILING","CHAR2HEXINT","CHECKSUM","CHR","CLASSIFY","COALESCE","CODEPOINT","COLOR","COMBINATIONS","CONCAT","CONCAT_WS","CONTAINS","CONTAINS_SEQUENCE","CONVEX_HULL_AGG","CORR","COS","COSH","COSINE_SIMILARITY","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CRC32","CUME_DIST","CURRENT_CATALOG","CURRENT_DATE","CURRENT_GROUPS","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","DATE","DATE_ADD","DATE_DIFF","DATE_FORMAT","DATE_PARSE","DATE_TRUNC","DAY","DAY_OF_MONTH","DAY_OF_WEEK","DAY_OF_YEAR","DEGREES","DENSE_RANK","DOW","DOY","E","ELEMENT_AT","EMPTY_APPROX_SET","EVALUATE_CLASSIFIER_PREDICTIONS","EVERY","EXP","EXTRACT","FEATURES","FILTER","FIRST_VALUE","FLATTEN","FLOOR","FORMAT","FORMAT_DATETIME","FORMAT_NUMBER","FROM_BASE","FROM_BASE32","FROM_BASE64","FROM_BASE64URL","FROM_BIG_ENDIAN_32","FROM_BIG_ENDIAN_64","FROM_ENCODED_POLYLINE","FROM_GEOJSON_GEOMETRY","FROM_HEX","FROM_IEEE754_32","FROM_IEEE754_64","FROM_ISO8601_DATE","FROM_ISO8601_TIMESTAMP","FROM_ISO8601_TIMESTAMP_NANOS","FROM_UNIXTIME","FROM_UNIXTIME_NANOS","FROM_UTF8","GEOMETRIC_MEAN","GEOMETRY_FROM_HADOOP_SHAPE","GEOMETRY_INVALID_REASON","GEOMETRY_NEAREST_POINTS","GEOMETRY_TO_BING_TILES","GEOMETRY_UNION","GEOMETRY_UNION_AGG","GREATEST","GREAT_CIRCLE_DISTANCE","HAMMING_DISTANCE","HASH_COUNTS","HISTOGRAM","HMAC_MD5","HMAC_SHA1","HMAC_SHA256","HMAC_SHA512","HOUR","HUMAN_READABLE_SECONDS","IF","INDEX","INFINITY","INTERSECTION_CARDINALITY","INVERSE_BETA_CDF","INVERSE_NORMAL_CDF","IS_FINITE","IS_INFINITE","IS_JSON_SCALAR","IS_NAN","JACCARD_INDEX","JSON_ARRAY_CONTAINS","JSON_ARRAY_GET","JSON_ARRAY_LENGTH","JSON_EXISTS","JSON_EXTRACT","JSON_EXTRACT_SCALAR","JSON_FORMAT","JSON_PARSE","JSON_QUERY","JSON_SIZE","JSON_VALUE","KURTOSIS","LAG","LAST_DAY_OF_MONTH","LAST_VALUE","LEAD","LEARN_CLASSIFIER","LEARN_LIBSVM_CLASSIFIER","LEARN_LIBSVM_REGRESSOR","LEARN_REGRESSOR","LEAST","LENGTH","LEVENSHTEIN_DISTANCE","LINE_INTERPOLATE_POINT","LINE_INTERPOLATE_POINTS","LINE_LOCATE_POINT","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","LUHN_CHECK","MAKE_SET_DIGEST","MAP","MAP_AGG","MAP_CONCAT","MAP_ENTRIES","MAP_FILTER","MAP_FROM_ENTRIES","MAP_KEYS","MAP_UNION","MAP_VALUES","MAP_ZIP_WITH","MAX","MAX_BY","MD5","MERGE","MERGE_SET_DIGEST","MILLISECOND","MIN","MINUTE","MIN_BY","MOD","MONTH","MULTIMAP_AGG","MULTIMAP_FROM_ENTRIES","MURMUR3","NAN","NGRAMS","NONE_MATCH","NORMALIZE","NORMAL_CDF","NOW","NTH_VALUE","NTILE","NULLIF","NUMERIC_HISTOGRAM","OBJECTID","OBJECTID_TIMESTAMP","PARSE_DATA_SIZE","PARSE_DATETIME","PARSE_DURATION","PERCENT_RANK","PI","POSITION","POW","POWER","QDIGEST_AGG","QUARTER","RADIANS","RAND","RANDOM","RANK","REDUCE","REDUCE_AGG","REGEXP_COUNT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGRESS","REGR_INTERCEPT","REGR_SLOPE","RENDER","REPEAT","REPLACE","REVERSE","RGB","ROUND","ROW_NUMBER","RPAD","RTRIM","SECOND","SEQUENCE","SHA1","SHA256","SHA512","SHUFFLE","SIGN","SIMPLIFY_GEOMETRY","SIN","SKEWNESS","SLICE","SOUNDEX","SPATIAL_PARTITIONING","SPATIAL_PARTITIONS","SPLIT","SPLIT_PART","SPLIT_TO_MAP","SPLIT_TO_MULTIMAP","SPOOKY_HASH_V2_32","SPOOKY_HASH_V2_64","SQRT","STARTS_WITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRPOS","ST_AREA","ST_ASBINARY","ST_ASTEXT","ST_BOUNDARY","ST_BUFFER","ST_CENTROID","ST_CONTAINS","ST_CONVEXHULL","ST_COORDDIM","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_ENDPOINT","ST_ENVELOPE","ST_ENVELOPEASPTS","ST_EQUALS","ST_EXTERIORRING","ST_GEOMETRIES","ST_GEOMETRYFROMTEXT","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMBINARY","ST_INTERIORRINGN","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISRING","ST_ISSIMPLE","ST_ISVALID","ST_LENGTH","ST_LINEFROMTEXT","ST_LINESTRING","ST_MULTIPOINT","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINT","ST_POINTN","ST_POINTS","ST_POLYGON","ST_RELATE","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_TOUCHES","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","SUBSTR","SUBSTRING","SUM","TAN","TANH","TDIGEST_AGG","TIMESTAMP_OBJECTID","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO_BASE","TO_BASE32","TO_BASE64","TO_BASE64URL","TO_BIG_ENDIAN_32","TO_BIG_ENDIAN_64","TO_CHAR","TO_DATE","TO_ENCODED_POLYLINE","TO_GEOJSON_GEOMETRY","TO_GEOMETRY","TO_HEX","TO_IEEE754_32","TO_IEEE754_64","TO_ISO8601","TO_MILLISECONDS","TO_SPHERICAL_GEOGRAPHY","TO_TIMESTAMP","TO_UNIXTIME","TO_UTF8","TRANSFORM","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRIM_ARRAY","TRUNCATE","TRY","TRY_CAST","TYPEOF","UPPER","URL_DECODE","URL_ENCODE","URL_EXTRACT_FRAGMENT","URL_EXTRACT_HOST","URL_EXTRACT_PARAMETER","URL_EXTRACT_PATH","URL_EXTRACT_PORT","URL_EXTRACT_PROTOCOL","URL_EXTRACT_QUERY","UUID","VALUES_AT_QUANTILES","VALUE_AT_QUANTILE","VARIANCE","VAR_POP","VAR_SAMP","VERSION","WEEK","WEEK_OF_YEAR","WIDTH_BUCKET","WILSON_INTERVAL_LOWER","WILSON_INTERVAL_UPPER","WITH_TIMEZONE","WORD_STEM","XXHASH64","YEAR","YEAR_OF_WEEK","YOW","ZIP","ZIP_WITH","CLASSIFIER","FIRST","LAST","MATCH_NUMBER","NEXT","PERMUTE","PREV"],Ll=["ABSENT","ADD","ADMIN","AFTER","ALL","ALTER","ANALYZE","AND","ANY","AS","ASC","AT","AUTHORIZATION","BERNOULLI","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CATALOGS","COLUMN","COLUMNS","COMMENT","COMMIT","COMMITTED","CONDITIONAL","CONSTRAINT","COPARTITION","CREATE","CROSS","CUBE","CURRENT","CURRENT_PATH","CURRENT_ROLE","DATA","DEALLOCATE","DEFAULT","DEFINE","DEFINER","DELETE","DENY","DESC","DESCRIBE","DESCRIPTOR","DISTINCT","DISTRIBUTED","DOUBLE","DROP","ELSE","EMPTY","ENCODING","END","ERROR","ESCAPE","EXCEPT","EXCLUDING","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FINAL","FIRST","FOLLOWING","FOR","FROM","FULL","FUNCTIONS","GRANT","GRANTED","GRANTS","GRAPHVIZ","GROUP","GROUPING","GROUPS","HAVING","IGNORE","IN","INCLUDING","INITIAL","INNER","INPUT","INSERT","INTERSECT","INTERVAL","INTO","INVOKER","IO","IS","ISOLATION","JOIN","JSON","JSON_ARRAY","JSON_OBJECT","KEEP","KEY","KEYS","LAST","LATERAL","LEADING","LEFT","LEVEL","LIKE","LIMIT","LOCAL","LOGICAL","MATCH","MATCHED","MATCHES","MATCH_RECOGNIZE","MATERIALIZED","MEASURES","NATURAL","NEXT","NFC","NFD","NFKC","NFKD","NO","NONE","NOT","NULL","NULLS","OBJECT","OF","OFFSET","OMIT","ON","ONE","ONLY","OPTION","OR","ORDER","ORDINALITY","OUTER","OUTPUT","OVER","OVERFLOW","PARTITION","PARTITIONS","PASSING","PAST","PATH","PATTERN","PER","PERMUTE","PRECEDING","PRECISION","PREPARE","PRIVILEGES","PROPERTIES","PRUNE","QUOTES","RANGE","READ","RECURSIVE","REFRESH","RENAME","REPEATABLE","RESET","RESPECT","RESTRICT","RETURNING","REVOKE","RIGHT","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","RUNNING","SCALAR","SCHEMA","SCHEMAS","SECURITY","SEEK","SELECT","SERIALIZABLE","SESSION","SET","SETS","SHOW","SKIP","SOME","START","STATS","STRING","SUBSET","SYSTEM","TABLE","TABLES","TABLESAMPLE","TEXT","THEN","TIES","TIME","TIMESTAMP","TO","TRAILING","TRANSACTION","TRUE","TYPE","UESCAPE","UNBOUNDED","UNCOMMITTED","UNCONDITIONAL","UNION","UNIQUE","UNKNOWN","UNMATCHED","UNNEST","UPDATE","USE","USER","USING","UTF16","UTF32","UTF8","VALIDATE","VALUE","VALUES","VERBOSE","VIEW","WHEN","WHERE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","ZONE"],ul=["BIGINT","INT","INTEGER","SMALLINT","TINYINT","BOOLEAN","DATE","DECIMAL","REAL","DOUBLE","HYPERLOGLOG","QDIGEST","TDIGEST","P4HYPERLOGLOG","INTERVAL","TIMESTAMP","TIME","VARBINARY","VARCHAR","CHAR","ROW","ARRAY","MAP","JSON","JSON2016","IPADDRESS","GEOMETRY","UUID","SETDIGEST","JONIREGEXP","RE2JREGEXP","LIKEPATTERN","COLOR","CODEPOINTS","FUNCTION","JSONPATH"],pl=d(["SELECT [ALL | DISTINCT]"]),fl=d(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET","MATCH_RECOGNIZE","MEASURES","ONE ROW PER MATCH","ALL ROWS PER MATCH","AFTER MATCH","PATTERN","SUBSET","DEFINE"]),Ln=d(["CREATE TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [MATERIALIZED] VIEW","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME COLUMN [IF EXISTS]","RENAME TO","SET AUTHORIZATION [USER | ROLE]","SET PROPERTIES","EXECUTE","TRUNCATE TABLE","ALTER SCHEMA","ALTER MATERIALIZED VIEW","ALTER VIEW","CREATE SCHEMA","CREATE ROLE","DROP SCHEMA","DROP MATERIALIZED VIEW","DROP VIEW","DROP ROLE","EXPLAIN","ANALYZE","EXPLAIN ANALYZE","EXPLAIN ANALYZE VERBOSE","USE","DESCRIBE INPUT","DESCRIBE OUTPUT","REFRESH MATERIALIZED VIEW","RESET SESSION","SET SESSION","SET PATH","SET TIME ZONE","SHOW GRANTS","SHOW CREATE TABLE","SHOW CREATE SCHEMA","SHOW CREATE VIEW","SHOW CREATE MATERIALIZED VIEW","SHOW TABLES","SHOW SCHEMAS","SHOW CATALOGS","SHOW COLUMNS","SHOW STATS FOR","SHOW ROLES","SHOW CURRENT ROLES","SHOW ROLE GRANTS","SHOW FUNCTIONS","SHOW SESSION"]),Pl=d(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),Dl=d(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),dl=d(["{ROWS | RANGE | GROUPS} BETWEEN","IS [NOT] DISTINCT FROM"]),Ml={name:"trino",tokenizerOptions:{reservedSelect:pl,reservedClauses:[...fl,...Ln],reservedSetOperations:Pl,reservedJoins:Dl,reservedPhrases:dl,reservedKeywords:Ll,reservedDataTypes:ul,reservedFunctionNames:cl,extraParens:["[]","{}"],stringTypes:[{quote:"''-qq",prefixes:["U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq'],paramTypes:{positional:!0},operators:["%","->","=>",":","||","|","^","$"]},formatOptions:{onelineClauses:Ln}},Ul=["APPROX_COUNT_DISTINCT","AVG","CHECKSUM_AGG","COUNT","COUNT_BIG","GROUPING","GROUPING_ID","MAX","MIN","STDEV","STDEVP","SUM","VAR","VARP","CUME_DIST","FIRST_VALUE","LAG","LAST_VALUE","LEAD","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","Collation - COLLATIONPROPERTY","Collation - TERTIARY_WEIGHTS","@@DBTS","@@LANGID","@@LANGUAGE","@@LOCK_TIMEOUT","@@MAX_CONNECTIONS","@@MAX_PRECISION","@@NESTLEVEL","@@OPTIONS","@@REMSERVER","@@SERVERNAME","@@SERVICENAME","@@SPID","@@TEXTSIZE","@@VERSION","CAST","CONVERT","PARSE","TRY_CAST","TRY_CONVERT","TRY_PARSE","ASYMKEY_ID","ASYMKEYPROPERTY","CERTPROPERTY","CERT_ID","CRYPT_GEN_RANDOM","DECRYPTBYASYMKEY","DECRYPTBYCERT","DECRYPTBYKEY","DECRYPTBYKEYAUTOASYMKEY","DECRYPTBYKEYAUTOCERT","DECRYPTBYPASSPHRASE","ENCRYPTBYASYMKEY","ENCRYPTBYCERT","ENCRYPTBYKEY","ENCRYPTBYPASSPHRASE","HASHBYTES","IS_OBJECTSIGNED","KEY_GUID","KEY_ID","KEY_NAME","SIGNBYASYMKEY","SIGNBYCERT","SYMKEYPROPERTY","VERIFYSIGNEDBYCERT","VERIFYSIGNEDBYASYMKEY","@@CURSOR_ROWS","@@FETCH_STATUS","CURSOR_STATUS","DATALENGTH","IDENT_CURRENT","IDENT_INCR","IDENT_SEED","IDENTITY","SQL_VARIANT_PROPERTY","@@DATEFIRST","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_TIMEZONE_ID","DATEADD","DATEDIFF","DATEDIFF_BIG","DATEFROMPARTS","DATENAME","DATEPART","DATETIME2FROMPARTS","DATETIMEFROMPARTS","DATETIMEOFFSETFROMPARTS","DAY","EOMONTH","GETDATE","GETUTCDATE","ISDATE","MONTH","SMALLDATETIMEFROMPARTS","SWITCHOFFSET","SYSDATETIME","SYSDATETIMEOFFSET","SYSUTCDATETIME","TIMEFROMPARTS","TODATETIMEOFFSET","YEAR","JSON","ISJSON","JSON_VALUE","JSON_QUERY","JSON_MODIFY","ABS","ACOS","ASIN","ATAN","ATN2","CEILING","COS","COT","DEGREES","EXP","FLOOR","LOG","LOG10","PI","POWER","RADIANS","RAND","ROUND","SIGN","SIN","SQRT","SQUARE","TAN","CHOOSE","GREATEST","IIF","LEAST","@@PROCID","APP_NAME","APPLOCK_MODE","APPLOCK_TEST","ASSEMBLYPROPERTY","COL_LENGTH","COL_NAME","COLUMNPROPERTY","DATABASEPROPERTYEX","DB_ID","DB_NAME","FILE_ID","FILE_IDEX","FILE_NAME","FILEGROUP_ID","FILEGROUP_NAME","FILEGROUPPROPERTY","FILEPROPERTY","FILEPROPERTYEX","FULLTEXTCATALOGPROPERTY","FULLTEXTSERVICEPROPERTY","INDEX_COL","INDEXKEY_PROPERTY","INDEXPROPERTY","NEXT VALUE FOR","OBJECT_DEFINITION","OBJECT_ID","OBJECT_NAME","OBJECT_SCHEMA_NAME","OBJECTPROPERTY","OBJECTPROPERTYEX","ORIGINAL_DB_NAME","PARSENAME","SCHEMA_ID","SCHEMA_NAME","SCOPE_IDENTITY","SERVERPROPERTY","STATS_DATE","TYPE_ID","TYPE_NAME","TYPEPROPERTY","DENSE_RANK","NTILE","RANK","ROW_NUMBER","PUBLISHINGSERVERNAME","CERTENCODED","CERTPRIVATEKEY","CURRENT_USER","DATABASE_PRINCIPAL_ID","HAS_DBACCESS","HAS_PERMS_BY_NAME","IS_MEMBER","IS_ROLEMEMBER","IS_SRVROLEMEMBER","LOGINPROPERTY","ORIGINAL_LOGIN","PERMISSIONS","PWDENCRYPT","PWDCOMPARE","SESSION_USER","SESSIONPROPERTY","SUSER_ID","SUSER_NAME","SUSER_SID","SUSER_SNAME","SYSTEM_USER","USER","USER_ID","USER_NAME","ASCII","CHAR","CHARINDEX","CONCAT","CONCAT_WS","DIFFERENCE","FORMAT","LEFT","LEN","LOWER","LTRIM","NCHAR","PATINDEX","QUOTENAME","REPLACE","REPLICATE","REVERSE","RIGHT","RTRIM","SOUNDEX","SPACE","STR","STRING_AGG","STRING_ESCAPE","STUFF","SUBSTRING","TRANSLATE","TRIM","UNICODE","UPPER","$PARTITION","@@ERROR","@@IDENTITY","@@PACK_RECEIVED","@@ROWCOUNT","@@TRANCOUNT","BINARY_CHECKSUM","CHECKSUM","COMPRESS","CONNECTIONPROPERTY","CONTEXT_INFO","CURRENT_REQUEST_ID","CURRENT_TRANSACTION_ID","DECOMPRESS","ERROR_LINE","ERROR_MESSAGE","ERROR_NUMBER","ERROR_PROCEDURE","ERROR_SEVERITY","ERROR_STATE","FORMATMESSAGE","GET_FILESTREAM_TRANSACTION_CONTEXT","GETANSINULL","HOST_ID","HOST_NAME","ISNULL","ISNUMERIC","MIN_ACTIVE_ROWVERSION","NEWID","NEWSEQUENTIALID","ROWCOUNT_BIG","SESSION_CONTEXT","XACT_STATE","@@CONNECTIONS","@@CPU_BUSY","@@IDLE","@@IO_BUSY","@@PACK_SENT","@@PACKET_ERRORS","@@TIMETICKS","@@TOTAL_ERRORS","@@TOTAL_READ","@@TOTAL_WRITE","TEXTPTR","TEXTVALID","COLUMNS_UPDATED","EVENTDATA","TRIGGER_NESTLEVEL","UPDATE","COALESCE","NULLIF"],hl=["ADD","ALL","ALTER","AND","ANY","AS","ASC","AUTHORIZATION","BACKUP","BEGIN","BETWEEN","BREAK","BROWSE","BULK","BY","CASCADE","CHECK","CHECKPOINT","CLOSE","CLUSTERED","COALESCE","COLLATE","COLUMN","COMMIT","COMPUTE","CONSTRAINT","CONTAINS","CONTAINSTABLE","CONTINUE","CONVERT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DBCC","DEALLOCATE","DECLARE","DEFAULT","DELETE","DENY","DESC","DISK","DISTINCT","DISTRIBUTED","DROP","DUMP","ERRLVL","ESCAPE","EXEC","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FILE","FILLFACTOR","FOR","FOREIGN","FREETEXT","FREETEXTTABLE","FROM","FULL","FUNCTION","GOTO","GRANT","GROUP","HAVING","HOLDLOCK","IDENTITY","IDENTITYCOL","IDENTITY_INSERT","IF","IN","INDEX","INNER","INSERT","INTERSECT","INTO","IS","JOIN","KEY","KILL","LEFT","LIKE","LINENO","LOAD","MERGE","NOCHECK","NONCLUSTERED","NOT","NULL","NULLIF","OF","OFF","OFFSETS","ON","OPEN","OPENDATASOURCE","OPENQUERY","OPENROWSET","OPENXML","OPTION","OR","ORDER","OUTER","OVER","PERCENT","PIVOT","PLAN","PRIMARY","PRINT","PROC","PROCEDURE","PUBLIC","RAISERROR","READ","READTEXT","RECONFIGURE","REFERENCES","REPLICATION","RESTORE","RESTRICT","RETURN","REVERT","REVOKE","RIGHT","ROLLBACK","ROWCOUNT","ROWGUIDCOL","RULE","SAVE","SCHEMA","SECURITYAUDIT","SELECT","SEMANTICKEYPHRASETABLE","SEMANTICSIMILARITYDETAILSTABLE","SEMANTICSIMILARITYTABLE","SESSION_USER","SET","SETUSER","SHUTDOWN","SOME","STATISTICS","SYSTEM_USER","TABLE","TABLESAMPLE","TEXTSIZE","THEN","TO","TOP","TRAN","TRANSACTION","TRIGGER","TRUNCATE","TRY_CONVERT","TSEQUAL","UNION","UNIQUE","UNPIVOT","UPDATE","UPDATETEXT","USE","USER","VALUES","VIEW","WAITFOR","WHERE","WHILE","WITH","WITHIN GROUP","WRITETEXT","ABSOLUTE","ACTION","ADA","ALLOCATE","ARE","ASSERTION","AT","AVG","BIT_LENGTH","BOTH","CASCADED","CAST","CATALOG","CHARACTER_LENGTH","CHAR_LENGTH","COLLATION","CONNECT","CONNECTION","CONSTRAINTS","CORRESPONDING","COUNT","DAY","DEFERRABLE","DEFERRED","DESCRIBE","DESCRIPTOR","DIAGNOSTICS","DISCONNECT","DOMAIN","END-EXEC","EXCEPTION","EXTRACT","FALSE","FIRST","FORTRAN","FOUND","GET","GLOBAL","GO","HOUR","IMMEDIATE","INCLUDE","INDICATOR","INITIALLY","INPUT","INSENSITIVE","INTERVAL","ISOLATION","LANGUAGE","LAST","LEADING","LEVEL","LOCAL","LOWER","MATCH","MAX","MIN","MINUTE","MODULE","MONTH","NAMES","NATURAL","NEXT","NO","NONE","OCTET_LENGTH","ONLY","OUTPUT","OVERLAPS","PAD","PARTIAL","PASCAL","POSITION","PREPARE","PRESERVE","PRIOR","PRIVILEGES","RELATIVE","ROWS","SCROLL","SECOND","SECTION","SESSION","SIZE","SPACE","SQL","SQLCA","SQLCODE","SQLERROR","SQLSTATE","SQLWARNING","SUBSTRING","SUM","TEMPORARY","TIMEZONE_HOUR","TIMEZONE_MINUTE","TRAILING","TRANSLATE","TRANSLATION","TRIM","TRUE","UNKNOWN","UPPER","USAGE","VALUE","WHENEVER","WORK","WRITE","YEAR","ZONE"],Gl=["BINARY","BIT","CHAR","CHAR","CHARACTER","DATE","DATETIME2","DATETIMEOFFSET","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","NATIONAL","NCHAR","NUMERIC","NVARCHAR","PRECISION","REAL","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR"],gl=d(["SELECT [ALL | DISTINCT]"]),ml=d(["WITH","INTO","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","OFFSET","FETCH {FIRST | NEXT}","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY TARGET | BY SOURCE] [THEN]","UPDATE SET","CREATE [OR ALTER] {PROC | PROCEDURE}"]),un=d(["CREATE TABLE","CREATE [OR ALTER] [MATERIALIZED] VIEW","UPDATE","WHERE CURRENT OF","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD","DROP COLUMN [IF EXISTS]","ALTER COLUMN","TRUNCATE TABLE","ADD SENSITIVITY CLASSIFICATION","ADD SIGNATURE","AGGREGATE","ANSI_DEFAULTS","ANSI_NULLS","ANSI_NULL_DFLT_OFF","ANSI_NULL_DFLT_ON","ANSI_PADDING","ANSI_WARNINGS","APPLICATION ROLE","ARITHABORT","ARITHIGNORE","ASSEMBLY","ASYMMETRIC KEY","AUTHORIZATION","AVAILABILITY GROUP","BACKUP","BACKUP CERTIFICATE","BACKUP MASTER KEY","BACKUP SERVICE MASTER KEY","BEGIN CONVERSATION TIMER","BEGIN DIALOG CONVERSATION","BROKER PRIORITY","BULK INSERT","CERTIFICATE","CLOSE MASTER KEY","CLOSE SYMMETRIC KEY","COLLATE","COLUMN ENCRYPTION KEY","COLUMN MASTER KEY","COLUMNSTORE INDEX","CONCAT_NULL_YIELDS_NULL","CONTEXT_INFO","CONTRACT","CREDENTIAL","CRYPTOGRAPHIC PROVIDER","CURSOR_CLOSE_ON_COMMIT","DATABASE","DATABASE AUDIT SPECIFICATION","DATABASE ENCRYPTION KEY","DATABASE HADR","DATABASE SCOPED CONFIGURATION","DATABASE SCOPED CREDENTIAL","DATABASE SET","DATEFIRST","DATEFORMAT","DEADLOCK_PRIORITY","DENY","DENY XML","DISABLE TRIGGER","ENABLE TRIGGER","END CONVERSATION","ENDPOINT","EVENT NOTIFICATION","EVENT SESSION","EXECUTE AS","EXTERNAL DATA SOURCE","EXTERNAL FILE FORMAT","EXTERNAL LANGUAGE","EXTERNAL LIBRARY","EXTERNAL RESOURCE POOL","EXTERNAL TABLE","FIPS_FLAGGER","FMTONLY","FORCEPLAN","FULLTEXT CATALOG","FULLTEXT INDEX","FULLTEXT STOPLIST","FUNCTION","GET CONVERSATION GROUP","GET_TRANSMISSION_STATUS","GRANT","GRANT XML","IDENTITY_INSERT","IMPLICIT_TRANSACTIONS","INDEX","LANGUAGE","LOCK_TIMEOUT","LOGIN","MASTER KEY","MESSAGE TYPE","MOVE CONVERSATION","NOCOUNT","NOEXEC","NUMERIC_ROUNDABORT","OFFSETS","OPEN MASTER KEY","OPEN SYMMETRIC KEY","PARSEONLY","PARTITION FUNCTION","PARTITION SCHEME","PROCEDURE","QUERY_GOVERNOR_COST_LIMIT","QUEUE","QUOTED_IDENTIFIER","RECEIVE","REMOTE SERVICE BINDING","REMOTE_PROC_TRANSACTIONS","RESOURCE GOVERNOR","RESOURCE POOL","RESTORE","RESTORE FILELISTONLY","RESTORE HEADERONLY","RESTORE LABELONLY","RESTORE MASTER KEY","RESTORE REWINDONLY","RESTORE SERVICE MASTER KEY","RESTORE VERIFYONLY","REVERT","REVOKE","REVOKE XML","ROLE","ROUTE","ROWCOUNT","RULE","SCHEMA","SEARCH PROPERTY LIST","SECURITY POLICY","SELECTIVE XML INDEX","SEND","SENSITIVITY CLASSIFICATION","SEQUENCE","SERVER AUDIT","SERVER AUDIT SPECIFICATION","SERVER CONFIGURATION","SERVER ROLE","SERVICE","SERVICE MASTER KEY","SETUSER","SHOWPLAN_ALL","SHOWPLAN_TEXT","SHOWPLAN_XML","SIGNATURE","SPATIAL INDEX","STATISTICS","STATISTICS IO","STATISTICS PROFILE","STATISTICS TIME","STATISTICS XML","SYMMETRIC KEY","SYNONYM","TABLE","TABLE IDENTITY","TEXTSIZE","TRANSACTION ISOLATION LEVEL","TRIGGER","TYPE","UPDATE STATISTICS","USER","WORKLOAD GROUP","XACT_ABORT","XML INDEX","XML SCHEMA COLLECTION"]),Hl=d(["UNION [ALL]","EXCEPT","INTERSECT"]),yl=d(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","{CROSS | OUTER} APPLY"]),bl=d(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),Bl={name:"transactsql",tokenizerOptions:{reservedSelect:gl,reservedClauses:[...ml,...un],reservedSetOperations:Hl,reservedJoins:yl,reservedPhrases:bl,reservedKeywords:hl,reservedDataTypes:Gl,reservedFunctionNames:Ul,nestedBlockComments:!0,stringTypes:[{quote:"''-qq",prefixes:["N"]}],identTypes:['""-qq',"[]"],identChars:{first:"#@",rest:"#@$"},paramTypes:{named:["@"],quoted:["@"]},operators:["%","&","|","^","~","!<","!>","+=","-=","*=","/=","%=","|=","&=","^=","::",":"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:un}},Fl=["ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","_BINARY","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DROP","DUAL","EACH","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","EXTRA_JOIN","FALSE","FETCH","FOR","FORCE","FORCE_COMPILED_MODE","FORCE_INTERPRETER_MODE","FOREIGN","FROM","FULL","FULLTEXT","GRANT","GROUP","HAVING","HEARTBEAT_NO_LOGGING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","IN","_INTERNAL_DYNAMIC_TYPECAST","INTERSECT","INTERVAL","INTO","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LOOP","LOW_PRIORITY","MATCH","MAXVALUE","MINUS","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NO_QUERY_REWRITE","NOT","NO_WRITE_TO_BINLOG","NO_QUERY_REWRITE","NULL","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PRIMARY","PROCEDURE","PURGE","RANGE","READ","READS","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESTRICT","RETURN","REVOKE","RIGHT","RIGHT_ANTI_JOIN","RIGHT_SEMI_JOIN","RIGHT_STRAIGHT_JOIN","RLIKE","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SEMI_JOIN","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SPATIAL","SPECIFIC","SQL","SQL_BIG_RESULT","SQL_BUFFER_RESULT","SQL_CACHE","SQL_CALC_FOUND_ROWS","SQLEXCEPTION","SQL_NO_CACHE","SQL_NO_LOGGING","SQL_SMALL_RESULT","SQLSTATE","SQLWARNING","STRAIGHT_JOIN","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNBOUNDED","UNDO","UNION","UNIQUE","UNLOCK","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","_UTF8","VALUES","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WRITE","XOR","YEAR_MONTH","ZEROFILL"],vl=["BIGINT","BINARY","BIT","BLOB","CHAR","CHARACTER","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONG","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","UNSIGNED","VARBINARY","VARCHAR","VARCHARACTER","YEAR"],Yl=["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_COUNT_DISTINCT_ACCUMULATE","APPROX_COUNT_DISTINCT_COMBINE","APPROX_COUNT_DISTINCT_ESTIMATE","APPROX_GEOGRAPHY_INTERSECTS","APPROX_PERCENTILE","ASCII","ASIN","ATAN","ATAN2","AVG","BIN","BINARY","BIT_AND","BIT_COUNT","BIT_OR","BIT_XOR","CAST","CEIL","CEILING","CHAR","CHARACTER_LENGTH","CHAR_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COLLECT","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATEDIFF","DATE_FORMAT","DATE_SUB","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DECODE","DEFAULT","DEGREES","DENSE_RANK","DIV","DOT_PRODUCT","ELT","EUCLIDEAN_DISTANCE","EXP","EXTRACT","FIELD","FIRST","FIRST_VALUE","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOGRAPHY_AREA","GEOGRAPHY_CONTAINS","GEOGRAPHY_DISTANCE","GEOGRAPHY_INTERSECTS","GEOGRAPHY_LATITUDE","GEOGRAPHY_LENGTH","GEOGRAPHY_LONGITUDE","GEOGRAPHY_POINT","GEOGRAPHY_WITHIN_DISTANCE","GEOMETRY_AREA","GEOMETRY_CONTAINS","GEOMETRY_DISTANCE","GEOMETRY_FILTER","GEOMETRY_INTERSECTS","GEOMETRY_LENGTH","GEOMETRY_POINT","GEOMETRY_WITHIN_DISTANCE","GEOMETRY_X","GEOMETRY_Y","GREATEST","GROUPING","GROUP_CONCAT","HEX","HIGHLIGHT","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INITCAP","INSERT","INSTR","INTERVAL","IS","IS NULL","JSON_AGG","JSON_ARRAY_CONTAINS_DOUBLE","JSON_ARRAY_CONTAINS_JSON","JSON_ARRAY_CONTAINS_STRING","JSON_ARRAY_PUSH_DOUBLE","JSON_ARRAY_PUSH_JSON","JSON_ARRAY_PUSH_STRING","JSON_DELETE_KEY","JSON_EXTRACT_DOUBLE","JSON_EXTRACT_JSON","JSON_EXTRACT_STRING","JSON_EXTRACT_BIGINT","JSON_GET_TYPE","JSON_LENGTH","JSON_SET_DOUBLE","JSON_SET_JSON","JSON_SET_STRING","JSON_SPLICE_DOUBLE","JSON_SPLICE_JSON","JSON_SPLICE_STRING","LAG","LAST_DAY","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LN","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LPAD","LTRIM","MATCH","MAX","MD5","MEDIAN","MICROSECOND","MIN","MINUTE","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","NOT","NOW","NTH_VALUE","NTILE","NULLIF","OCTET_LENGTH","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIVOT","POSITION","POW","POWER","QUARTER","QUOTE","RADIANS","RAND","RANK","REGEXP","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCALAR","SCHEMA","SEC_TO_TIME","SHA1","SHA2","SIGMOID","SIGN","SIN","SLEEP","SPLIT","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUM","SYS_GUID","TAN","TIME","TIMEDIFF","TIME_BUCKET","TIME_FORMAT","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_JSON","TO_NUMBER","TO_SECONDS","TO_TIMESTAMP","TRIM","TRUNC","TRUNCATE","UCASE","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","VALUES","VARIANCE","VAR_POP","VAR_SAMP","VECTOR_SUB","VERSION","WEEK","WEEKDAY","WEEKOFYEAR","YEAR"],Vl=d(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),xl=d(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [IGNORE] [INTO]","VALUES","REPLACE [INTO]","ON DUPLICATE KEY UPDATE","SET","CREATE [OR REPLACE] [TEMPORARY] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] [EXTERNAL] FUNCTION"]),pn=d(["CREATE [ROWSTORE] [REFERENCE | TEMPORARY | GLOBAL TEMPORARY] TABLE [IF NOT EXISTS]","CREATE VIEW","UPDATE","DELETE [FROM]","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] TABLE","ADD [COLUMN]","ADD [UNIQUE] {INDEX | KEY}","DROP [COLUMN]","MODIFY [COLUMN]","CHANGE","RENAME [TO | AS]","TRUNCATE [TABLE]","ADD AGGREGATOR","ADD LEAF","AGGREGATOR SET AS MASTER","ALTER DATABASE","ALTER PIPELINE","ALTER RESOURCE POOL","ALTER USER","ALTER VIEW","ANALYZE TABLE","ATTACH DATABASE","ATTACH LEAF","ATTACH LEAF ALL","BACKUP DATABASE","BINLOG","BOOTSTRAP AGGREGATOR","CACHE INDEX","CALL","CHANGE","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK BLOB CHECKSUM","CHECK TABLE","CHECKSUM TABLE","CLEAR ORPHAN DATABASES","CLONE","COMMIT","CREATE DATABASE","CREATE GROUP","CREATE INDEX","CREATE LINK","CREATE MILESTONE","CREATE PIPELINE","CREATE RESOURCE POOL","CREATE ROLE","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DETACH DATABASE","DETACH PIPELINE","DROP DATABASE","DROP FUNCTION","DROP INDEX","DROP LINK","DROP PIPELINE","DROP PROCEDURE","DROP RESOURCE POOL","DROP ROLE","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","FORCE","GRANT","HANDLER","HELP","KILL CONNECTION","KILLALL QUERIES","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","REBALANCE PARTITIONS","RELEASE SAVEPOINT","REMOVE AGGREGATOR","REMOVE LEAF","REPAIR TABLE","REPLACE","REPLICATE DATABASE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","RESTORE DATABASE","RESTORE REDUNDANCY","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE FUNCTION","SHOW CREATE PIPELINE","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SNAPSHOT DATABASE","SOURCE_POS_WAIT","START GROUP_REPLICATION","START PIPELINE","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP PIPELINE","STOP REPLICA","STOP REPLICATING","STOP SLAVE","TEST PIPELINE","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),wl=d(["UNION [ALL | DISTINCT]","EXCEPT","INTERSECT","MINUS"]),Wl=d(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),Xl=d(["ON DELETE","ON UPDATE","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),$l={name:"singlestoredb",tokenizerOptions:{reservedSelect:Vl,reservedClauses:[...xl,...pn],reservedSetOperations:wl,reservedJoins:Wl,reservedPhrases:Xl,reservedKeywords:Fl,reservedDataTypes:vl,reservedFunctionNames:Yl,stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_$]+"},{quote:"``",prefixes:["@"],requirePrefix:!0}],lineCommentTypes:["--","#"],operators:[":=","&","|","^","~","<<",">>","<=>","&&","||","::","::$","::%",":>","!:>","*.*"],postProcess:Qr},formatOptions:{alwaysDenseOperators:["::","::$","::%"],onelineClauses:pn}},Kl=["ABS","ACOS","ACOSH","ADD_MONTHS","ALL_USER_NAMES","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","APPROX_PERCENTILE_ACCUMULATE","APPROX_PERCENTILE_COMBINE","APPROX_PERCENTILE_ESTIMATE","APPROX_TOP_K","APPROX_TOP_K_ACCUMULATE","APPROX_TOP_K_COMBINE","APPROX_TOP_K_ESTIMATE","APPROXIMATE_JACCARD_INDEX","APPROXIMATE_SIMILARITY","ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_COMPACT","ARRAY_CONSTRUCT","ARRAY_CONSTRUCT_COMPACT","ARRAY_CONTAINS","ARRAY_INSERT","ARRAY_INTERSECTION","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_SIZE","ARRAY_SLICE","ARRAY_TO_STRING","ARRAY_UNION_AGG","ARRAY_UNIQUE_AGG","ARRAYS_OVERLAP","AS_ARRAY","AS_BINARY","AS_BOOLEAN","AS_CHAR","AS_VARCHAR","AS_DATE","AS_DECIMAL","AS_NUMBER","AS_DOUBLE","AS_REAL","AS_INTEGER","AS_OBJECT","AS_TIME","AS_TIMESTAMP_LTZ","AS_TIMESTAMP_NTZ","AS_TIMESTAMP_TZ","ASCII","ASIN","ASINH","ATAN","ATAN2","ATANH","AUTO_REFRESH_REGISTRATION_HISTORY","AUTOMATIC_CLUSTERING_HISTORY","AVG","BASE64_DECODE_BINARY","BASE64_DECODE_STRING","BASE64_ENCODE","BIT_LENGTH","BITAND","BITAND_AGG","BITMAP_BIT_POSITION","BITMAP_BUCKET_NUMBER","BITMAP_CONSTRUCT_AGG","BITMAP_COUNT","BITMAP_OR_AGG","BITNOT","BITOR","BITOR_AGG","BITSHIFTLEFT","BITSHIFTRIGHT","BITXOR","BITXOR_AGG","BOOLAND","BOOLAND_AGG","BOOLNOT","BOOLOR","BOOLOR_AGG","BOOLXOR","BOOLXOR_AGG","BUILD_SCOPED_FILE_URL","BUILD_STAGE_FILE_URL","CASE","CAST","CBRT","CEIL","CHARINDEX","CHECK_JSON","CHECK_XML","CHR","CHAR","COALESCE","COLLATE","COLLATION","COMPLETE_TASK_GRAPHS","COMPRESS","CONCAT","CONCAT_WS","CONDITIONAL_CHANGE_EVENT","CONDITIONAL_TRUE_EVENT","CONTAINS","CONVERT_TIMEZONE","COPY_HISTORY","CORR","COS","COSH","COT","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CUME_DIST","CURRENT_ACCOUNT","CURRENT_AVAILABLE_ROLES","CURRENT_CLIENT","CURRENT_DATABASE","CURRENT_DATE","CURRENT_IP_ADDRESS","CURRENT_REGION","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_SECONDARY_ROLES","CURRENT_SESSION","CURRENT_STATEMENT","CURRENT_TASK_GRAPHS","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TRANSACTION","CURRENT_USER","CURRENT_VERSION","CURRENT_WAREHOUSE","DATA_TRANSFER_HISTORY","DATABASE_REFRESH_HISTORY","DATABASE_REFRESH_PROGRESS","DATABASE_REFRESH_PROGRESS_BY_JOB","DATABASE_STORAGE_USAGE_HISTORY","DATE_FROM_PARTS","DATE_PART","DATE_TRUNC","DATEADD","DATEDIFF","DAYNAME","DECODE","DECOMPRESS_BINARY","DECOMPRESS_STRING","DECRYPT","DECRYPT_RAW","DEGREES","DENSE_RANK","DIV0","EDITDISTANCE","ENCRYPT","ENCRYPT_RAW","ENDSWITH","EQUAL_NULL","EXP","EXPLAIN_JSON","EXTERNAL_FUNCTIONS_HISTORY","EXTERNAL_TABLE_FILES","EXTERNAL_TABLE_FILE_REGISTRATION_HISTORY","EXTRACT","EXTRACT_SEMANTIC_CATEGORIES","FACTORIAL","FIRST_VALUE","FLATTEN","FLOOR","GENERATE_COLUMN_DESCRIPTION","GENERATOR","GET","GET_ABSOLUTE_PATH","GET_DDL","GET_IGNORE_CASE","GET_OBJECT_REFERENCES","GET_PATH","GET_PRESIGNED_URL","GET_RELATIVE_PATH","GET_STAGE_LOCATION","GETBIT","GREATEST","GROUPING","GROUPING_ID","HASH","HASH_AGG","HAVERSINE","HEX_DECODE_BINARY","HEX_DECODE_STRING","HEX_ENCODE","HLL","HLL_ACCUMULATE","HLL_COMBINE","HLL_ESTIMATE","HLL_EXPORT","HLL_IMPORT","HOUR","MINUTE","SECOND","IFF","IFNULL","ILIKE","ILIKE ANY","INFER_SCHEMA","INITCAP","INSERT","INVOKER_ROLE","INVOKER_SHARE","IS_ARRAY","IS_BINARY","IS_BOOLEAN","IS_CHAR","IS_VARCHAR","IS_DATE","IS_DATE_VALUE","IS_DECIMAL","IS_DOUBLE","IS_REAL","IS_GRANTED_TO_INVOKER_ROLE","IS_INTEGER","IS_NULL_VALUE","IS_OBJECT","IS_ROLE_IN_SESSION","IS_TIME","IS_TIMESTAMP_LTZ","IS_TIMESTAMP_NTZ","IS_TIMESTAMP_TZ","JAROWINKLER_SIMILARITY","JSON_EXTRACT_PATH_TEXT","KURTOSIS","LAG","LAST_DAY","LAST_QUERY_ID","LAST_TRANSACTION","LAST_VALUE","LEAD","LEAST","LEFT","LENGTH","LEN","LIKE","LIKE ALL","LIKE ANY","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOGIN_HISTORY","LOGIN_HISTORY_BY_USER","LOWER","LPAD","LTRIM","MATERIALIZED_VIEW_REFRESH_HISTORY","MD5","MD5_HEX","MD5_BINARY","MD5_NUMBER — Obsoleted","MD5_NUMBER_LOWER64","MD5_NUMBER_UPPER64","MEDIAN","MIN","MAX","MINHASH","MINHASH_COMBINE","MOD","MODE","MONTHNAME","MONTHS_BETWEEN","NEXT_DAY","NORMAL","NTH_VALUE","NTILE","NULLIF","NULLIFZERO","NVL","NVL2","OBJECT_AGG","OBJECT_CONSTRUCT","OBJECT_CONSTRUCT_KEEP_NULL","OBJECT_DELETE","OBJECT_INSERT","OBJECT_KEYS","OBJECT_PICK","OCTET_LENGTH","PARSE_IP","PARSE_JSON","PARSE_URL","PARSE_XML","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIPE_USAGE_HISTORY","POLICY_CONTEXT","POLICY_REFERENCES","POSITION","POW","POWER","PREVIOUS_DAY","QUERY_ACCELERATION_HISTORY","QUERY_HISTORY","QUERY_HISTORY_BY_SESSION","QUERY_HISTORY_BY_USER","QUERY_HISTORY_BY_WAREHOUSE","RADIANS","RANDOM","RANDSTR","RANK","RATIO_TO_REPORT","REGEXP","REGEXP_COUNT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","REGEXP_SUBSTR_ALL","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","REGR_VALX","REGR_VALY","REPEAT","REPLACE","REPLICATION_GROUP_REFRESH_HISTORY","REPLICATION_GROUP_REFRESH_PROGRESS","REPLICATION_GROUP_REFRESH_PROGRESS_BY_JOB","REPLICATION_GROUP_USAGE_HISTORY","REPLICATION_USAGE_HISTORY","REST_EVENT_HISTORY","RESULT_SCAN","REVERSE","RIGHT","RLIKE","ROUND","ROW_NUMBER","RPAD","RTRIM","RTRIMMED_LENGTH","SEARCH_OPTIMIZATION_HISTORY","SEQ1","SEQ2","SEQ4","SEQ8","SERVERLESS_TASK_HISTORY","SHA1","SHA1_HEX","SHA1_BINARY","SHA2","SHA2_HEX","SHA2_BINARY","SIGN","SIN","SINH","SKEW","SOUNDEX","SPACE","SPLIT","SPLIT_PART","SPLIT_TO_TABLE","SQRT","SQUARE","ST_AREA","ST_ASEWKB","ST_ASEWKT","ST_ASGEOJSON","ST_ASWKB","ST_ASBINARY","ST_ASWKT","ST_ASTEXT","ST_AZIMUTH","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DWITHIN","ST_ENDPOINT","ST_ENVELOPE","ST_GEOGFROMGEOHASH","ST_GEOGPOINTFROMGEOHASH","ST_GEOGRAPHYFROMWKB","ST_GEOGRAPHYFROMWKT","ST_GEOHASH","ST_GEOMETRYFROMWKB","ST_GEOMETRYFROMWKT","ST_HAUSDORFFDISTANCE","ST_INTERSECTION","ST_INTERSECTS","ST_LENGTH","ST_MAKEGEOMPOINT","ST_GEOM_POINT","ST_MAKELINE","ST_MAKEPOINT","ST_POINT","ST_MAKEPOLYGON","ST_POLYGON","ST_NPOINTS","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SETSRID","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","STAGE_DIRECTORY_FILE_REGISTRATION_HISTORY","STAGE_STORAGE_USAGE_HISTORY","STARTSWITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRIP_NULL_VALUE","STRTOK","STRTOK_SPLIT_TO_TABLE","STRTOK_TO_ARRAY","SUBSTR","SUBSTRING","SUM","SYSDATE","SYSTEM$ABORT_SESSION","SYSTEM$ABORT_TRANSACTION","SYSTEM$AUTHORIZE_PRIVATELINK","SYSTEM$AUTHORIZE_STAGE_PRIVATELINK_ACCESS","SYSTEM$BEHAVIOR_CHANGE_BUNDLE_STATUS","SYSTEM$CANCEL_ALL_QUERIES","SYSTEM$CANCEL_QUERY","SYSTEM$CLUSTERING_DEPTH","SYSTEM$CLUSTERING_INFORMATION","SYSTEM$CLUSTERING_RATIO ","SYSTEM$CURRENT_USER_TASK_NAME","SYSTEM$DATABASE_REFRESH_HISTORY ","SYSTEM$DATABASE_REFRESH_PROGRESS","SYSTEM$DATABASE_REFRESH_PROGRESS_BY_JOB ","SYSTEM$DISABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$DISABLE_DATABASE_REPLICATION","SYSTEM$ENABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$ESTIMATE_QUERY_ACCELERATION","SYSTEM$ESTIMATE_SEARCH_OPTIMIZATION_COSTS","SYSTEM$EXPLAIN_JSON_TO_TEXT","SYSTEM$EXPLAIN_PLAN_JSON","SYSTEM$EXTERNAL_TABLE_PIPE_STATUS","SYSTEM$GENERATE_SAML_CSR","SYSTEM$GENERATE_SCIM_ACCESS_TOKEN","SYSTEM$GET_AWS_SNS_IAM_POLICY","SYSTEM$GET_PREDECESSOR_RETURN_VALUE","SYSTEM$GET_PRIVATELINK","SYSTEM$GET_PRIVATELINK_AUTHORIZED_ENDPOINTS","SYSTEM$GET_PRIVATELINK_CONFIG","SYSTEM$GET_SNOWFLAKE_PLATFORM_INFO","SYSTEM$GET_TAG","SYSTEM$GET_TAG_ALLOWED_VALUES","SYSTEM$GET_TAG_ON_CURRENT_COLUMN","SYSTEM$GET_TAG_ON_CURRENT_TABLE","SYSTEM$GLOBAL_ACCOUNT_SET_PARAMETER","SYSTEM$LAST_CHANGE_COMMIT_TIME","SYSTEM$LINK_ACCOUNT_OBJECTS_BY_NAME","SYSTEM$MIGRATE_SAML_IDP_REGISTRATION","SYSTEM$PIPE_FORCE_RESUME","SYSTEM$PIPE_STATUS","SYSTEM$REVOKE_PRIVATELINK","SYSTEM$REVOKE_STAGE_PRIVATELINK_ACCESS","SYSTEM$SET_RETURN_VALUE","SYSTEM$SHOW_OAUTH_CLIENT_SECRETS","SYSTEM$STREAM_GET_TABLE_TIMESTAMP","SYSTEM$STREAM_HAS_DATA","SYSTEM$TASK_DEPENDENTS_ENABLE","SYSTEM$TYPEOF","SYSTEM$USER_TASK_CANCEL_ONGOING_EXECUTIONS","SYSTEM$VERIFY_EXTERNAL_OAUTH_TOKEN","SYSTEM$WAIT","SYSTEM$WHITELIST","SYSTEM$WHITELIST_PRIVATELINK","TAG_REFERENCES","TAG_REFERENCES_ALL_COLUMNS","TAG_REFERENCES_WITH_LINEAGE","TAN","TANH","TASK_DEPENDENTS","TASK_HISTORY","TIME_FROM_PARTS","TIME_SLICE","TIMEADD","TIMEDIFF","TIMESTAMP_FROM_PARTS","TIMESTAMPADD","TIMESTAMPDIFF","TO_ARRAY","TO_BINARY","TO_BOOLEAN","TO_CHAR","TO_VARCHAR","TO_DATE","DATE","TO_DECIMAL","TO_NUMBER","TO_NUMERIC","TO_DOUBLE","TO_GEOGRAPHY","TO_GEOMETRY","TO_JSON","TO_OBJECT","TO_TIME","TIME","TO_TIMESTAMP","TO_TIMESTAMP_LTZ","TO_TIMESTAMP_NTZ","TO_TIMESTAMP_TZ","TO_VARIANT","TO_XML","TRANSLATE","TRIM","TRUNCATE","TRUNC","TRUNC","TRY_BASE64_DECODE_BINARY","TRY_BASE64_DECODE_STRING","TRY_CAST","TRY_HEX_DECODE_BINARY","TRY_HEX_DECODE_STRING","TRY_PARSE_JSON","TRY_TO_BINARY","TRY_TO_BOOLEAN","TRY_TO_DATE","TRY_TO_DECIMAL","TRY_TO_NUMBER","TRY_TO_NUMERIC","TRY_TO_DOUBLE","TRY_TO_GEOGRAPHY","TRY_TO_GEOMETRY","TRY_TO_TIME","TRY_TO_TIMESTAMP","TRY_TO_TIMESTAMP_LTZ","TRY_TO_TIMESTAMP_NTZ","TRY_TO_TIMESTAMP_TZ","TYPEOF","UNICODE","UNIFORM","UPPER","UUID_STRING","VALIDATE","VALIDATE_PIPE_LOAD","VAR_POP","VAR_SAMP","VARIANCE","VARIANCE_SAMP","VARIANCE_POP","WAREHOUSE_LOAD_HISTORY","WAREHOUSE_METERING_HISTORY","WIDTH_BUCKET","XMLGET","YEAR","YEAROFWEEK","YEAROFWEEKISO","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFWEEKISO","DAYOFYEAR","WEEK","WEEK","WEEKOFYEAR","WEEKISO","MONTH","QUARTER","ZEROIFNULL","ZIPF"],Jl=["ACCOUNT","ALL","ALTER","AND","ANY","AS","BETWEEN","BY","CASE","CAST","CHECK","COLUMN","CONNECT","CONNECTION","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATABASE","DELETE","DISTINCT","DROP","ELSE","EXISTS","FALSE","FOLLOWING","FOR","FROM","FULL","GRANT","GROUP","GSCLUSTER","HAVING","ILIKE","IN","INCREMENT","INNER","INSERT","INTERSECT","INTO","IS","ISSUE","JOIN","LATERAL","LEFT","LIKE","LOCALTIME","LOCALTIMESTAMP","MINUS","NATURAL","NOT","NULL","OF","ON","OR","ORDER","ORGANIZATION","QUALIFY","REGEXP","REVOKE","RIGHT","RLIKE","ROW","ROWS","SAMPLE","SCHEMA","SELECT","SET","SOME","START","TABLE","TABLESAMPLE","THEN","TO","TRIGGER","TRUE","TRY_CAST","UNION","UNIQUE","UPDATE","USING","VALUES","VIEW","WHEN","WHENEVER","WHERE","WITH","COMMENT"],kl=["NUMBER","DECIMAL","NUMERIC","INT","INTEGER","BIGINT","SMALLINT","TINYINT","BYTEINT","FLOAT","FLOAT4","FLOAT8","DOUBLE","DOUBLE PRECISION","REAL","VARCHAR","CHAR","CHARACTER","STRING","TEXT","BINARY","VARBINARY","BOOLEAN","DATE","DATETIME","TIME","TIMESTAMP","TIMESTAMP_LTZ","TIMESTAMP_NTZ","TIMESTAMP","TIMESTAMP_TZ","VARIANT","OBJECT","ARRAY","GEOGRAPHY","GEOMETRY"],jl=d(["SELECT [ALL | DISTINCT]"]),ql=d(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","QUALIFY","LIMIT","OFFSET","FETCH [FIRST | NEXT]","INSERT [OVERWRITE] [ALL INTO | INTO | ALL | FIRST]","{THEN | ELSE} INTO","VALUES","SET","CLUSTER BY","[WITH] {MASKING POLICY | TAG | ROW ACCESS POLICY}","COPY GRANTS","USING TEMPLATE","MERGE INTO","WHEN MATCHED [AND]","THEN {UPDATE SET | DELETE}","WHEN NOT MATCHED THEN INSERT"]),fn=d(["CREATE [OR REPLACE] [VOLATILE] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [LOCAL | GLOBAL] {TEMP|TEMPORARY} TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [SECURE] [RECURSIVE] VIEW [IF NOT EXISTS]","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","RENAME TO","SWAP WITH","[SUSPEND | RESUME] RECLUSTER","DROP CLUSTERING KEY","ADD [COLUMN]","RENAME COLUMN","{ALTER | MODIFY} [COLUMN]","DROP [COLUMN]","{ADD | ALTER | MODIFY | DROP} [CONSTRAINT]","RENAME CONSTRAINT","{ADD | DROP} SEARCH OPTIMIZATION","{SET | UNSET} TAG","{ADD | DROP} ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","[SET DATA] TYPE","UNSET COMMENT","{SET | UNSET} MASKING POLICY","TRUNCATE [TABLE] [IF EXISTS]","ALTER ACCOUNT","ALTER API INTEGRATION","ALTER CONNECTION","ALTER DATABASE","ALTER EXTERNAL TABLE","ALTER FAILOVER GROUP","ALTER FILE FORMAT","ALTER FUNCTION","ALTER INTEGRATION","ALTER MASKING POLICY","ALTER MATERIALIZED VIEW","ALTER NETWORK POLICY","ALTER NOTIFICATION INTEGRATION","ALTER PIPE","ALTER PROCEDURE","ALTER REPLICATION GROUP","ALTER RESOURCE MONITOR","ALTER ROLE","ALTER ROW ACCESS POLICY","ALTER SCHEMA","ALTER SECURITY INTEGRATION","ALTER SEQUENCE","ALTER SESSION","ALTER SESSION POLICY","ALTER SHARE","ALTER STAGE","ALTER STORAGE INTEGRATION","ALTER STREAM","ALTER TAG","ALTER TASK","ALTER USER","ALTER VIEW","ALTER WAREHOUSE","BEGIN","CALL","COMMIT","COPY INTO","CREATE ACCOUNT","CREATE API INTEGRATION","CREATE CONNECTION","CREATE DATABASE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL TABLE","CREATE FAILOVER GROUP","CREATE FILE FORMAT","CREATE FUNCTION","CREATE INTEGRATION","CREATE MANAGED ACCOUNT","CREATE MASKING POLICY","CREATE MATERIALIZED VIEW","CREATE NETWORK POLICY","CREATE NOTIFICATION INTEGRATION","CREATE PIPE","CREATE PROCEDURE","CREATE REPLICATION GROUP","CREATE RESOURCE MONITOR","CREATE ROLE","CREATE ROW ACCESS POLICY","CREATE SCHEMA","CREATE SECURITY INTEGRATION","CREATE SEQUENCE","CREATE SESSION POLICY","CREATE SHARE","CREATE STAGE","CREATE STORAGE INTEGRATION","CREATE STREAM","CREATE TAG","CREATE TASK","CREATE USER","CREATE WAREHOUSE","DELETE","DESCRIBE DATABASE","DESCRIBE EXTERNAL TABLE","DESCRIBE FILE FORMAT","DESCRIBE FUNCTION","DESCRIBE INTEGRATION","DESCRIBE MASKING POLICY","DESCRIBE MATERIALIZED VIEW","DESCRIBE NETWORK POLICY","DESCRIBE PIPE","DESCRIBE PROCEDURE","DESCRIBE RESULT","DESCRIBE ROW ACCESS POLICY","DESCRIBE SCHEMA","DESCRIBE SEQUENCE","DESCRIBE SESSION POLICY","DESCRIBE SHARE","DESCRIBE STAGE","DESCRIBE STREAM","DESCRIBE TABLE","DESCRIBE TASK","DESCRIBE TRANSACTION","DESCRIBE USER","DESCRIBE VIEW","DESCRIBE WAREHOUSE","DROP CONNECTION","DROP DATABASE","DROP EXTERNAL TABLE","DROP FAILOVER GROUP","DROP FILE FORMAT","DROP FUNCTION","DROP INTEGRATION","DROP MANAGED ACCOUNT","DROP MASKING POLICY","DROP MATERIALIZED VIEW","DROP NETWORK POLICY","DROP PIPE","DROP PROCEDURE","DROP REPLICATION GROUP","DROP RESOURCE MONITOR","DROP ROLE","DROP ROW ACCESS POLICY","DROP SCHEMA","DROP SEQUENCE","DROP SESSION POLICY","DROP SHARE","DROP STAGE","DROP STREAM","DROP TAG","DROP TASK","DROP USER","DROP VIEW","DROP WAREHOUSE","EXECUTE IMMEDIATE","EXECUTE TASK","EXPLAIN","GET","GRANT OWNERSHIP","GRANT ROLE","INSERT","LIST","MERGE","PUT","REMOVE","REVOKE ROLE","ROLLBACK","SHOW COLUMNS","SHOW CONNECTIONS","SHOW DATABASES","SHOW DATABASES IN FAILOVER GROUP","SHOW DATABASES IN REPLICATION GROUP","SHOW DELEGATED AUTHORIZATIONS","SHOW EXTERNAL FUNCTIONS","SHOW EXTERNAL TABLES","SHOW FAILOVER GROUPS","SHOW FILE FORMATS","SHOW FUNCTIONS","SHOW GLOBAL ACCOUNTS","SHOW GRANTS","SHOW INTEGRATIONS","SHOW LOCKS","SHOW MANAGED ACCOUNTS","SHOW MASKING POLICIES","SHOW MATERIALIZED VIEWS","SHOW NETWORK POLICIES","SHOW OBJECTS","SHOW ORGANIZATION ACCOUNTS","SHOW PARAMETERS","SHOW PIPES","SHOW PRIMARY KEYS","SHOW PROCEDURES","SHOW REGIONS","SHOW REPLICATION ACCOUNTS","SHOW REPLICATION DATABASES","SHOW REPLICATION GROUPS","SHOW RESOURCE MONITORS","SHOW ROLES","SHOW ROW ACCESS POLICIES","SHOW SCHEMAS","SHOW SEQUENCES","SHOW SESSION POLICIES","SHOW SHARES","SHOW SHARES IN FAILOVER GROUP","SHOW SHARES IN REPLICATION GROUP","SHOW STAGES","SHOW STREAMS","SHOW TABLES","SHOW TAGS","SHOW TASKS","SHOW TRANSACTIONS","SHOW USER FUNCTIONS","SHOW USERS","SHOW VARIABLES","SHOW VIEWS","SHOW WAREHOUSES","TRUNCATE MATERIALIZED VIEW","UNDROP DATABASE","UNDROP SCHEMA","UNDROP TABLE","UNDROP TAG","UNSET","USE DATABASE","USE ROLE","USE SCHEMA","USE SECONDARY ROLES","USE WAREHOUSE"]),Ql=d(["UNION [ALL]","MINUS","EXCEPT","INTERSECT"]),Zl=d(["[INNER] JOIN","[NATURAL] {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | NATURAL} JOIN"]),zl=d(["{ROWS | RANGE} BETWEEN","ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]"]),e_={name:"snowflake",tokenizerOptions:{reservedSelect:jl,reservedClauses:[...ql,...fn],reservedSetOperations:Ql,reservedJoins:Zl,reservedPhrases:zl,reservedKeywords:Jl,reservedDataTypes:kl,reservedFunctionNames:Kl,stringTypes:["$$","''-qq-bs"],identTypes:['""-qq'],variableTypes:[{regex:"[$][1-9]\\d*"},{regex:"[$][_a-zA-Z][_a-zA-Z0-9$]*"}],extraParens:["[]"],identChars:{rest:"$"},lineCommentTypes:["--","//"],operators:["%","::","||",":","=>"]},formatOptions:{alwaysDenseOperators:[":","::"],onelineClauses:fn}},bt=e=>e[e.length-1],WA=e=>e.sort((E,t)=>t.length-E.length||E.localeCompare(t)),AT=e=>e.replace(/\s+/gu," "),ZT=e=>/\n/.test(e),eE=e=>e.replace(/[.*+?^${}()|[\]\\]/gu,"\\$&"),Pn=/\s+/uy,XE=e=>new RegExp(`(?:${e})`,"uy"),E_=e=>e.split("").map(E=>/ /gu.test(E)?"\\s+":`[${E.toUpperCase()}${E.toLowerCase()}]`).join(""),t_=e=>e+"(?:-"+e+")*",T_=({prefixes:e,requirePrefix:E})=>`(?:${e.map(E_).join("|")}${E?"":"|"})`,r_=e=>new RegExp(`(?:${e.map(eE).join("|")}).*?(?=\r
|\r|
|$)`,"uy"),Dn=(e,E=[])=>{const t=e==="open"?0:1,T=["()",...E].map(r=>r[t]);return XE(T.map(eE).join("|"))},s_=e=>XE(`${WA(e).map(eE).join("|")}`),n_=({rest:e,dashes:E})=>e||E?`(?![${e||""}${E?"-":""}])`:"",_E=(e,E={})=>{if(e.length===0)return/^\b$/u;const t=n_(E),T=WA(e).map(eE).join("|").replace(/ /gu,"\\s+");return new RegExp(`(?:${T})${t}\\b`,"iuy")},zT=(e,E)=>{if(!e.length)return;const t=e.map(eE).join("|");return XE(`(?:${t})(?:${E})`)},R_=()=>{const e={"<":">","[":"]","(":")","{":"}"},E="{left}(?:(?!{right}').)*?{right}",t=Object.entries(e).map(([n,R])=>E.replace(/{left}/g,eE(n)).replace(/{right}/g,eE(R))),T=eE(Object.keys(e).join(""));return`[Qq]'(?:${String.raw`(?<tag>[^\s${T}])(?:(?!\k<tag>').)*?\k<tag>`}|${t.join("|")})'`},dn={"``":"(?:`[^`]*`)+","[]":String.raw`(?:\[[^\]]*\])(?:\][^\]]*\])*`,'""-qq':String.raw`(?:"[^"]*")+`,'""-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")`,'""-qq-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")+`,'""-raw':String.raw`(?:"[^"]*")`,"''-qq":String.raw`(?:'[^']*')+`,"''-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')`,"''-qq-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')+`,"''-raw":String.raw`(?:'[^']*')`,$$:String.raw`(?<tag>\$\w*\$)[\s\S]*?\k<tag>`,"'''..'''":String.raw`'''[^\\]*?(?:\\.[^\\]*?)*?'''`,'""".."""':String.raw`"""[^\\]*?(?:\\.[^\\]*?)*?"""`,"{}":String.raw`(?:\{[^\}]*\})`,"q''":R_()},XA=e=>typeof e=="string"?dn[e]:"regex"in e?e.regex:T_(e)+dn[e.quote],A_=e=>XE(e.map(E=>"regex"in E?E.regex:XA(E)).join("|")),$A=e=>e.map(XA).join("|"),Mn=e=>XE($A(e)),o_=(e={})=>XE(KA(e)),KA=({first:e,rest:E,dashes:t,allowFirstCharNumber:T}={})=>{const r="\\p{Alphabetic}\\p{Mark}_",s="\\p{Decimal_Number}",n=eE(e??""),R=eE(E??""),o=T?`[${r}${s}${n}][${r}${s}${R}]*`:`[${r}${n}][${r}${s}${R}]*`;return t?t_(o):o};function JA(e,E){const t=e.slice(0,E).split(/\n/);return{line:t.length,col:t[t.length-1].length+1}}var i_=class{constructor(e,E){this.rules=e,this.dialectName=E,this.input="",this.index=0}tokenize(e){this.input=e,this.index=0;const E=[];let t;for(;this.index<this.input.length;){const T=this.getWhitespace();if(this.index<this.input.length){if(t=this.getNextToken(),!t)throw this.createParseError();E.push(Ve(ye({},t),{precedingWhitespace:T}))}}return E}createParseError(){const e=this.input.slice(this.index,this.index+10),{line:E,col:t}=JA(this.input,this.index);return new Error(`Parse error: Unexpected "${e}" at line ${E} column ${t}.
${this.dialectInfo()}`)}dialectInfo(){return this.dialectName==="sql"?`This likely happens because you're using the default "sql" dialect.
If possible, please select a more specific dialect (like sqlite, postgresql, etc).`:`SQL dialect used: "${this.dialectName}".`}getWhitespace(){Pn.lastIndex=this.index;const e=Pn.exec(this.input);if(e)return this.index+=e[0].length,e[0]}getNextToken(){for(const e of this.rules){const E=this.match(e);if(E)return E}}match(e){e.regex.lastIndex=this.index;const E=e.regex.exec(this.input);if(E){const t=E[0],T={type:e.type,raw:t,text:e.text?e.text(t):t,start:this.index};return e.key&&(T.key=e.key(t)),this.index+=t.length,T}}},Un=/\/\*/uy,S_=/([^/*]|\*[^/]|\/[^*])+/uy,O_=/\*\//uy,I_=class{constructor(){this.lastIndex=0}exec(e){let E="",t,T=0;if(t=this.matchSection(Un,e))E+=t,T++;else return null;for(;T>0;)if(t=this.matchSection(Un,e))E+=t,T++;else if(t=this.matchSection(O_,e))E+=t,T--;else if(t=this.matchSection(S_,e))E+=t;else return null;return[E]}matchSection(e,E){e.lastIndex=this.lastIndex;const t=e.exec(E);return t&&(this.lastIndex+=t[0].length),t?t[0]:null}},a_=class{constructor(e,E){this.cfg=e,this.dialectName=E,this.rulesBeforeParams=this.buildRulesBeforeParams(e),this.rulesAfterParams=this.buildRulesAfterParams(e)}tokenize(e,E){const t=[...this.rulesBeforeParams,...this.buildParamRules(this.cfg,E),...this.rulesAfterParams],T=new i_(t,this.dialectName).tokenize(e);return this.cfg.postProcess?this.cfg.postProcess(T):T}buildRulesBeforeParams(e){var E,t;return this.validRules([{type:"BLOCK_COMMENT",regex:e.nestedBlockComments?new I_:/(\/\*[^]*?\*\/)/uy},{type:"LINE_COMMENT",regex:r_((E=e.lineCommentTypes)!=null?E:["--"])},{type:"QUOTED_IDENTIFIER",regex:Mn(e.identTypes)},{type:"NUMBER",regex:/(?:0x[0-9a-fA-F]+|0b[01]+|(?:-\s*)?[0-9]+(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+(?:\.[0-9]+)?)?)(?![\w\p{Alphabetic}])/uy},{type:"RESERVED_PHRASE",regex:_E((t=e.reservedPhrases)!=null?t:[],e.identChars),text:Ue},{type:"CASE",regex:/CASE\b/iuy,text:Ue},{type:"END",regex:/END\b/iuy,text:Ue},{type:"BETWEEN",regex:/BETWEEN\b/iuy,text:Ue},{type:"LIMIT",regex:e.reservedClauses.includes("LIMIT")?/LIMIT\b/iuy:void 0,text:Ue},{type:"RESERVED_CLAUSE",regex:_E(e.reservedClauses,e.identChars),text:Ue},{type:"RESERVED_SELECT",regex:_E(e.reservedSelect,e.identChars),text:Ue},{type:"RESERVED_SET_OPERATION",regex:_E(e.reservedSetOperations,e.identChars),text:Ue},{type:"WHEN",regex:/WHEN\b/iuy,text:Ue},{type:"ELSE",regex:/ELSE\b/iuy,text:Ue},{type:"THEN",regex:/THEN\b/iuy,text:Ue},{type:"RESERVED_JOIN",regex:_E(e.reservedJoins,e.identChars),text:Ue},{type:"AND",regex:/AND\b/iuy,text:Ue},{type:"OR",regex:/OR\b/iuy,text:Ue},{type:"XOR",regex:e.supportsXor?/XOR\b/iuy:void 0,text:Ue},{type:"RESERVED_FUNCTION_NAME",regex:_E(e.reservedFunctionNames,e.identChars),text:Ue},{type:"RESERVED_DATA_TYPE",regex:_E(e.reservedDataTypes,e.identChars),text:Ue},{type:"RESERVED_KEYWORD",regex:_E(e.reservedKeywords,e.identChars),text:Ue}])}buildRulesAfterParams(e){var E;return this.validRules([{type:"VARIABLE",regex:e.variableTypes?A_(e.variableTypes):void 0},{type:"STRING",regex:Mn(e.stringTypes)},{type:"IDENTIFIER",regex:o_(e.identChars)},{type:"DELIMITER",regex:/[;]/uy},{type:"COMMA",regex:/[,]/y},{type:"OPEN_PAREN",regex:Dn("open",e.extraParens)},{type:"CLOSE_PAREN",regex:Dn("close",e.extraParens)},{type:"OPERATOR",regex:s_(["+","-","/",">","<","=","<>","<=",">=","!=",...(E=e.operators)!=null?E:[]])},{type:"ASTERISK",regex:/[*]/uy},{type:"DOT",regex:/[.]/uy}])}buildParamRules(e,E){var t,T,r,s,n;const R={named:(E==null?void 0:E.named)||((t=e.paramTypes)==null?void 0:t.named)||[],quoted:(E==null?void 0:E.quoted)||((T=e.paramTypes)==null?void 0:T.quoted)||[],numbered:(E==null?void 0:E.numbered)||((r=e.paramTypes)==null?void 0:r.numbered)||[],positional:typeof(E==null?void 0:E.positional)=="boolean"?E.positional:(s=e.paramTypes)==null?void 0:s.positional,custom:(E==null?void 0:E.custom)||((n=e.paramTypes)==null?void 0:n.custom)||[]};return this.validRules([{type:"NAMED_PARAMETER",regex:zT(R.named,KA(e.paramChars||e.identChars)),key:o=>o.slice(1)},{type:"QUOTED_PARAMETER",regex:zT(R.quoted,$A(e.identTypes)),key:o=>(({tokenKey:A,quoteChar:i})=>A.replace(new RegExp(eE("\\"+i),"gu"),i))({tokenKey:o.slice(2,-1),quoteChar:o.slice(-1)})},{type:"NUMBERED_PARAMETER",regex:zT(R.numbered,"[0-9]+"),key:o=>o.slice(1)},{type:"POSITIONAL_PARAMETER",regex:R.positional?/[?]/y:void 0},...R.custom.map(o=>{var A;return{type:"CUSTOM_PARAMETER",regex:XE(o.regex),key:(A=o.key)!=null?A:i=>i}})])}validRules(e){return e.filter(E=>!!E.regex)}},Ue=e=>AT(e.toUpperCase()),hn=new Map,N_=e=>{let E=hn.get(e);return E||(E=l_(e),hn.set(e,E)),E},l_=e=>({tokenizer:new a_(e.tokenizerOptions,e.name),formatOptions:__(e.formatOptions)}),__=e=>({alwaysDenseOperators:e.alwaysDenseOperators||[],onelineClauses:Object.fromEntries(e.onelineClauses.map(E=>[E,!0]))});function C_(e){return e.indentStyle==="tabularLeft"||e.indentStyle==="tabularRight"?" ".repeat(10):e.useTabs?"	":" ".repeat(e.tabWidth)}function ft(e){return e.indentStyle==="tabularLeft"||e.indentStyle==="tabularRight"}var c_=class{constructor(e){this.params=e,this.index=0}get({key:e,text:E}){return this.params?e?this.params[e]:this.params[this.index++]:E}getPositionalParameterIndex(){return this.index}setPositionalParameterIndex(e){this.index=e}};function L_(e){return e.map(u_).map(p_).map(f_).map(P_).map(D_)}var u_=(e,E,t)=>{if(wA(e.type)){const T=d_(t,E);if(T&&T.text===".")return Ve(ye({},e),{type:"IDENTIFIER",text:e.raw})}return e},p_=(e,E,t)=>{if(e.type==="RESERVED_FUNCTION_NAME"){const T=Kt(t,E);if(!T||!kA(T))return Ve(ye({},e),{type:"RESERVED_KEYWORD"})}return e},f_=(e,E,t)=>{if(e.type==="RESERVED_DATA_TYPE"){const T=Kt(t,E);if(T&&kA(T))return Ve(ye({},e),{type:"RESERVED_PARAMETERIZED_DATA_TYPE"})}return e},P_=(e,E,t)=>{if(e.type==="IDENTIFIER"){const T=Kt(t,E);if(T&&jA(T))return Ve(ye({},e),{type:"ARRAY_IDENTIFIER"})}return e},D_=(e,E,t)=>{if(e.type==="RESERVED_DATA_TYPE"){const T=Kt(t,E);if(T&&jA(T))return Ve(ye({},e),{type:"ARRAY_KEYWORD"})}return e},d_=(e,E)=>Kt(e,E,-1),Kt=(e,E,t=1)=>{let T=1;for(;e[E+T*t]&&M_(e[E+T*t]);)T++;return e[E+T*t]},kA=e=>e.type==="OPEN_PAREN"&&e.text==="(",jA=e=>e.type==="OPEN_PAREN"&&e.text==="[",M_=e=>e.type==="BLOCK_COMMENT"||e.type==="LINE_COMMENT",qA=class{constructor(e){this.tokenize=e,this.index=0,this.tokens=[],this.input=""}reset(e,E){this.input=e,this.index=0,this.tokens=this.tokenize(e)}next(){return this.tokens[this.index++]}save(){}formatError(e){const{line:E,col:t}=JA(this.input,e.start);return`Parse error at token: ${e.text} at line ${E} column ${t}`}has(e){return e in VA}};function er(e){return e[0]}var q=new qA(e=>[]),yE=([[e]])=>e,he=e=>({type:"keyword",tokenType:e.type,text:e.text,raw:e.raw}),Gn=e=>({type:"data_type",text:e.text,raw:e.raw}),Ge=(e,{leading:E,trailing:t})=>(E!=null&&E.length&&(e=Ve(ye({},e),{leadingComments:E})),t!=null&&t.length&&(e=Ve(ye({},e),{trailingComments:t})),e),U_=(e,{leading:E,trailing:t})=>{if(E!=null&&E.length){const[T,...r]=e;e=[Ge(T,{leading:E}),...r]}if(t!=null&&t.length){const T=e.slice(0,-1),r=e[e.length-1];e=[...T,Ge(r,{trailing:t})]}return e},h_={Lexer:q,ParserRules:[{name:"main$ebnf$1",symbols:[]},{name:"main$ebnf$1",symbols:["main$ebnf$1","statement"],postprocess:e=>e[0].concat([e[1]])},{name:"main",symbols:["main$ebnf$1"],postprocess:([e])=>{const E=e[e.length-1];return E&&!E.hasSemicolon?E.children.length>0?e:e.slice(0,-1):e}},{name:"statement$subexpression$1",symbols:[q.has("DELIMITER")?{type:"DELIMITER"}:DELIMITER]},{name:"statement$subexpression$1",symbols:[q.has("EOF")?{type:"EOF"}:EOF]},{name:"statement",symbols:["expressions_or_clauses","statement$subexpression$1"],postprocess:([e,[E]])=>({type:"statement",children:e,hasSemicolon:E.type==="DELIMITER"})},{name:"expressions_or_clauses$ebnf$1",symbols:[]},{name:"expressions_or_clauses$ebnf$1",symbols:["expressions_or_clauses$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"expressions_or_clauses$ebnf$2",symbols:[]},{name:"expressions_or_clauses$ebnf$2",symbols:["expressions_or_clauses$ebnf$2","clause"],postprocess:e=>e[0].concat([e[1]])},{name:"expressions_or_clauses",symbols:["expressions_or_clauses$ebnf$1","expressions_or_clauses$ebnf$2"],postprocess:([e,E])=>[...e,...E]},{name:"clause$subexpression$1",symbols:["limit_clause"]},{name:"clause$subexpression$1",symbols:["select_clause"]},{name:"clause$subexpression$1",symbols:["other_clause"]},{name:"clause$subexpression$1",symbols:["set_operation"]},{name:"clause",symbols:["clause$subexpression$1"],postprocess:yE},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["free_form_sql"]},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"limit_clause$ebnf$1$subexpression$1",symbols:[q.has("COMMA")?{type:"COMMA"}:COMMA,"limit_clause$ebnf$1$subexpression$1$ebnf$1"]},{name:"limit_clause$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1"],postprocess:er},{name:"limit_clause$ebnf$1",symbols:[],postprocess:()=>null},{name:"limit_clause",symbols:[q.has("LIMIT")?{type:"LIMIT"}:LIMIT,"_","expression_chain_","limit_clause$ebnf$1"],postprocess:([e,E,t,T])=>{if(T){const[r,s]=T;return{type:"limit_clause",limitKw:Ge(he(e),{trailing:E}),offset:t,count:s}}else return{type:"limit_clause",limitKw:Ge(he(e),{trailing:E}),count:t}}},{name:"select_clause$subexpression$1$ebnf$1",symbols:[]},{name:"select_clause$subexpression$1$ebnf$1",symbols:["select_clause$subexpression$1$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"select_clause$subexpression$1",symbols:["all_columns_asterisk","select_clause$subexpression$1$ebnf$1"]},{name:"select_clause$subexpression$1$ebnf$2",symbols:[]},{name:"select_clause$subexpression$1$ebnf$2",symbols:["select_clause$subexpression$1$ebnf$2","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"select_clause$subexpression$1",symbols:["asteriskless_free_form_sql","select_clause$subexpression$1$ebnf$2"]},{name:"select_clause",symbols:[q.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT,"select_clause$subexpression$1"],postprocess:([e,[E,t]])=>({type:"clause",nameKw:he(e),children:[E,...t]})},{name:"select_clause",symbols:[q.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT],postprocess:([e])=>({type:"clause",nameKw:he(e),children:[]})},{name:"all_columns_asterisk",symbols:[q.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK],postprocess:()=>({type:"all_columns_asterisk"})},{name:"other_clause$ebnf$1",symbols:[]},{name:"other_clause$ebnf$1",symbols:["other_clause$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"other_clause",symbols:[q.has("RESERVED_CLAUSE")?{type:"RESERVED_CLAUSE"}:RESERVED_CLAUSE,"other_clause$ebnf$1"],postprocess:([e,E])=>({type:"clause",nameKw:he(e),children:E})},{name:"set_operation$ebnf$1",symbols:[]},{name:"set_operation$ebnf$1",symbols:["set_operation$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"set_operation",symbols:[q.has("RESERVED_SET_OPERATION")?{type:"RESERVED_SET_OPERATION"}:RESERVED_SET_OPERATION,"set_operation$ebnf$1"],postprocess:([e,E])=>({type:"set_operation",nameKw:he(e),children:E})},{name:"expression_chain_$ebnf$1",symbols:["expression_with_comments_"]},{name:"expression_chain_$ebnf$1",symbols:["expression_chain_$ebnf$1","expression_with_comments_"],postprocess:e=>e[0].concat([e[1]])},{name:"expression_chain_",symbols:["expression_chain_$ebnf$1"],postprocess:er},{name:"expression_chain$ebnf$1",symbols:[]},{name:"expression_chain$ebnf$1",symbols:["expression_chain$ebnf$1","_expression_with_comments"],postprocess:e=>e[0].concat([e[1]])},{name:"expression_chain",symbols:["expression","expression_chain$ebnf$1"],postprocess:([e,E])=>[e,...E]},{name:"andless_expression_chain$ebnf$1",symbols:[]},{name:"andless_expression_chain$ebnf$1",symbols:["andless_expression_chain$ebnf$1","_andless_expression_with_comments"],postprocess:e=>e[0].concat([e[1]])},{name:"andless_expression_chain",symbols:["andless_expression","andless_expression_chain$ebnf$1"],postprocess:([e,E])=>[e,...E]},{name:"expression_with_comments_",symbols:["expression","_"],postprocess:([e,E])=>Ge(e,{trailing:E})},{name:"_expression_with_comments",symbols:["_","expression"],postprocess:([e,E])=>Ge(E,{leading:e})},{name:"_andless_expression_with_comments",symbols:["_","andless_expression"],postprocess:([e,E])=>Ge(E,{leading:e})},{name:"free_form_sql$subexpression$1",symbols:["asteriskless_free_form_sql"]},{name:"free_form_sql$subexpression$1",symbols:["asterisk"]},{name:"free_form_sql",symbols:["free_form_sql$subexpression$1"],postprocess:yE},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["logic_operator"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comma"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comment"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["other_keyword"]},{name:"asteriskless_free_form_sql",symbols:["asteriskless_free_form_sql$subexpression$1"],postprocess:yE},{name:"expression$subexpression$1",symbols:["andless_expression"]},{name:"expression$subexpression$1",symbols:["logic_operator"]},{name:"expression",symbols:["expression$subexpression$1"],postprocess:yE},{name:"andless_expression$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"andless_expression$subexpression$1",symbols:["asterisk"]},{name:"andless_expression",symbols:["andless_expression$subexpression$1"],postprocess:yE},{name:"asteriskless_andless_expression$subexpression$1",symbols:["atomic_expression"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["between_predicate"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["case_expression"]},{name:"asteriskless_andless_expression",symbols:["asteriskless_andless_expression$subexpression$1"],postprocess:yE},{name:"atomic_expression$subexpression$1",symbols:["array_subscript"]},{name:"atomic_expression$subexpression$1",symbols:["function_call"]},{name:"atomic_expression$subexpression$1",symbols:["property_access"]},{name:"atomic_expression$subexpression$1",symbols:["parenthesis"]},{name:"atomic_expression$subexpression$1",symbols:["curly_braces"]},{name:"atomic_expression$subexpression$1",symbols:["square_brackets"]},{name:"atomic_expression$subexpression$1",symbols:["operator"]},{name:"atomic_expression$subexpression$1",symbols:["identifier"]},{name:"atomic_expression$subexpression$1",symbols:["parameter"]},{name:"atomic_expression$subexpression$1",symbols:["literal"]},{name:"atomic_expression$subexpression$1",symbols:["data_type"]},{name:"atomic_expression$subexpression$1",symbols:["keyword"]},{name:"atomic_expression",symbols:["atomic_expression$subexpression$1"],postprocess:yE},{name:"array_subscript",symbols:[q.has("ARRAY_IDENTIFIER")?{type:"ARRAY_IDENTIFIER"}:ARRAY_IDENTIFIER,"_","square_brackets"],postprocess:([e,E,t])=>({type:"array_subscript",array:Ge({type:"identifier",quoted:!1,text:e.text},{trailing:E}),parenthesis:t})},{name:"array_subscript",symbols:[q.has("ARRAY_KEYWORD")?{type:"ARRAY_KEYWORD"}:ARRAY_KEYWORD,"_","square_brackets"],postprocess:([e,E,t])=>({type:"array_subscript",array:Ge(he(e),{trailing:E}),parenthesis:t})},{name:"function_call",symbols:[q.has("RESERVED_FUNCTION_NAME")?{type:"RESERVED_FUNCTION_NAME"}:RESERVED_FUNCTION_NAME,"_","parenthesis"],postprocess:([e,E,t])=>({type:"function_call",nameKw:Ge(he(e),{trailing:E}),parenthesis:t})},{name:"parenthesis",symbols:[{literal:"("},"expressions_or_clauses",{literal:")"}],postprocess:([e,E,t])=>({type:"parenthesis",children:E,openParen:"(",closeParen:")"})},{name:"curly_braces$ebnf$1",symbols:[]},{name:"curly_braces$ebnf$1",symbols:["curly_braces$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"curly_braces",symbols:[{literal:"{"},"curly_braces$ebnf$1",{literal:"}"}],postprocess:([e,E,t])=>({type:"parenthesis",children:E,openParen:"{",closeParen:"}"})},{name:"square_brackets$ebnf$1",symbols:[]},{name:"square_brackets$ebnf$1",symbols:["square_brackets$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"square_brackets",symbols:[{literal:"["},"square_brackets$ebnf$1",{literal:"]"}],postprocess:([e,E,t])=>({type:"parenthesis",children:E,openParen:"[",closeParen:"]"})},{name:"property_access$subexpression$1",symbols:["identifier"]},{name:"property_access$subexpression$1",symbols:["array_subscript"]},{name:"property_access$subexpression$1",symbols:["all_columns_asterisk"]},{name:"property_access$subexpression$1",symbols:["parameter"]},{name:"property_access",symbols:["atomic_expression","_",q.has("DOT")?{type:"DOT"}:DOT,"_","property_access$subexpression$1"],postprocess:([e,E,t,T,[r]])=>({type:"property_access",object:Ge(e,{trailing:E}),property:Ge(r,{leading:T})})},{name:"between_predicate",symbols:[q.has("BETWEEN")?{type:"BETWEEN"}:BETWEEN,"_","andless_expression_chain","_",q.has("AND")?{type:"AND"}:AND,"_","andless_expression"],postprocess:([e,E,t,T,r,s,n])=>({type:"between_predicate",betweenKw:he(e),expr1:U_(t,{leading:E,trailing:T}),andKw:he(r),expr2:[Ge(n,{leading:s})]})},{name:"case_expression$ebnf$1",symbols:["expression_chain_"],postprocess:er},{name:"case_expression$ebnf$1",symbols:[],postprocess:()=>null},{name:"case_expression$ebnf$2",symbols:[]},{name:"case_expression$ebnf$2",symbols:["case_expression$ebnf$2","case_clause"],postprocess:e=>e[0].concat([e[1]])},{name:"case_expression",symbols:[q.has("CASE")?{type:"CASE"}:CASE,"_","case_expression$ebnf$1","case_expression$ebnf$2",q.has("END")?{type:"END"}:END],postprocess:([e,E,t,T,r])=>({type:"case_expression",caseKw:Ge(he(e),{trailing:E}),endKw:he(r),expr:t||[],clauses:T})},{name:"case_clause",symbols:[q.has("WHEN")?{type:"WHEN"}:WHEN,"_","expression_chain_",q.has("THEN")?{type:"THEN"}:THEN,"_","expression_chain_"],postprocess:([e,E,t,T,r,s])=>({type:"case_when",whenKw:Ge(he(e),{trailing:E}),thenKw:Ge(he(T),{trailing:r}),condition:t,result:s})},{name:"case_clause",symbols:[q.has("ELSE")?{type:"ELSE"}:ELSE,"_","expression_chain_"],postprocess:([e,E,t])=>({type:"case_else",elseKw:Ge(he(e),{trailing:E}),result:t})},{name:"comma$subexpression$1",symbols:[q.has("COMMA")?{type:"COMMA"}:COMMA]},{name:"comma",symbols:["comma$subexpression$1"],postprocess:([[e]])=>({type:"comma"})},{name:"asterisk$subexpression$1",symbols:[q.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK]},{name:"asterisk",symbols:["asterisk$subexpression$1"],postprocess:([[e]])=>({type:"operator",text:e.text})},{name:"operator$subexpression$1",symbols:[q.has("OPERATOR")?{type:"OPERATOR"}:OPERATOR]},{name:"operator",symbols:["operator$subexpression$1"],postprocess:([[e]])=>({type:"operator",text:e.text})},{name:"identifier$subexpression$1",symbols:[q.has("IDENTIFIER")?{type:"IDENTIFIER"}:IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[q.has("QUOTED_IDENTIFIER")?{type:"QUOTED_IDENTIFIER"}:QUOTED_IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[q.has("VARIABLE")?{type:"VARIABLE"}:VARIABLE]},{name:"identifier",symbols:["identifier$subexpression$1"],postprocess:([[e]])=>({type:"identifier",quoted:e.type!=="IDENTIFIER",text:e.text})},{name:"parameter$subexpression$1",symbols:[q.has("NAMED_PARAMETER")?{type:"NAMED_PARAMETER"}:NAMED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[q.has("QUOTED_PARAMETER")?{type:"QUOTED_PARAMETER"}:QUOTED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[q.has("NUMBERED_PARAMETER")?{type:"NUMBERED_PARAMETER"}:NUMBERED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[q.has("POSITIONAL_PARAMETER")?{type:"POSITIONAL_PARAMETER"}:POSITIONAL_PARAMETER]},{name:"parameter$subexpression$1",symbols:[q.has("CUSTOM_PARAMETER")?{type:"CUSTOM_PARAMETER"}:CUSTOM_PARAMETER]},{name:"parameter",symbols:["parameter$subexpression$1"],postprocess:([[e]])=>({type:"parameter",key:e.key,text:e.text})},{name:"literal$subexpression$1",symbols:[q.has("NUMBER")?{type:"NUMBER"}:NUMBER]},{name:"literal$subexpression$1",symbols:[q.has("STRING")?{type:"STRING"}:STRING]},{name:"literal",symbols:["literal$subexpression$1"],postprocess:([[e]])=>({type:"literal",text:e.text})},{name:"keyword$subexpression$1",symbols:[q.has("RESERVED_KEYWORD")?{type:"RESERVED_KEYWORD"}:RESERVED_KEYWORD]},{name:"keyword$subexpression$1",symbols:[q.has("RESERVED_PHRASE")?{type:"RESERVED_PHRASE"}:RESERVED_PHRASE]},{name:"keyword$subexpression$1",symbols:[q.has("RESERVED_JOIN")?{type:"RESERVED_JOIN"}:RESERVED_JOIN]},{name:"keyword",symbols:["keyword$subexpression$1"],postprocess:([[e]])=>he(e)},{name:"data_type$subexpression$1",symbols:[q.has("RESERVED_DATA_TYPE")?{type:"RESERVED_DATA_TYPE"}:RESERVED_DATA_TYPE]},{name:"data_type",symbols:["data_type$subexpression$1"],postprocess:([[e]])=>Gn(e)},{name:"data_type",symbols:[q.has("RESERVED_PARAMETERIZED_DATA_TYPE")?{type:"RESERVED_PARAMETERIZED_DATA_TYPE"}:RESERVED_PARAMETERIZED_DATA_TYPE,"_","parenthesis"],postprocess:([e,E,t])=>({type:"parameterized_data_type",dataType:Ge(Gn(e),{trailing:E}),parenthesis:t})},{name:"logic_operator$subexpression$1",symbols:[q.has("AND")?{type:"AND"}:AND]},{name:"logic_operator$subexpression$1",symbols:[q.has("OR")?{type:"OR"}:OR]},{name:"logic_operator$subexpression$1",symbols:[q.has("XOR")?{type:"XOR"}:XOR]},{name:"logic_operator",symbols:["logic_operator$subexpression$1"],postprocess:([[e]])=>he(e)},{name:"other_keyword$subexpression$1",symbols:[q.has("WHEN")?{type:"WHEN"}:WHEN]},{name:"other_keyword$subexpression$1",symbols:[q.has("THEN")?{type:"THEN"}:THEN]},{name:"other_keyword$subexpression$1",symbols:[q.has("ELSE")?{type:"ELSE"}:ELSE]},{name:"other_keyword$subexpression$1",symbols:[q.has("END")?{type:"END"}:END]},{name:"other_keyword",symbols:["other_keyword$subexpression$1"],postprocess:([[e]])=>he(e)},{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","comment"],postprocess:e=>e[0].concat([e[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:([e])=>e},{name:"comment",symbols:[q.has("LINE_COMMENT")?{type:"LINE_COMMENT"}:LINE_COMMENT],postprocess:([e])=>({type:"line_comment",text:e.text,precedingWhitespace:e.precedingWhitespace})},{name:"comment",symbols:[q.has("BLOCK_COMMENT")?{type:"BLOCK_COMMENT"}:BLOCK_COMMENT],postprocess:([e])=>({type:"block_comment",text:e.text,precedingWhitespace:e.precedingWhitespace})}],ParserStart:"main"},G_=h_,{Parser:g_,Grammar:m_}=XI;function H_(e){let E={};const t=new qA(r=>[...L_(e.tokenize(r,E)),xA(r.length)]),T=new g_(m_.fromCompiled(G_),{lexer:t});return{parse:(r,s)=>{E=s;const{results:n}=T.feed(r);if(n.length===1)return n[0];throw n.length===0?new Error("Parse error: Invalid SQL"):new Error(`Parse error: Ambiguous grammar
${JSON.stringify(n,void 0,2)}`)}}}var QA=class{constructor(e){this.indentation=e,this.items=[]}add(...e){for(const E of e)switch(E){case 0:this.items.push(0);break;case 1:this.trimHorizontalWhitespace();break;case 2:this.trimWhitespace();break;case 3:this.trimHorizontalWhitespace(),this.addNewline(3);break;case 4:this.trimHorizontalWhitespace(),this.addNewline(4);break;case 5:this.addIndentation();break;case 6:this.items.push(6);break;default:this.items.push(E)}}trimHorizontalWhitespace(){for(;y_(bt(this.items));)this.items.pop()}trimWhitespace(){for(;b_(bt(this.items));)this.items.pop()}addNewline(e){if(this.items.length>0)switch(bt(this.items)){case 3:this.items.pop(),this.items.push(e);break;case 4:break;default:this.items.push(e);break}}addIndentation(){for(let e=0;e<this.indentation.getLevel();e++)this.items.push(6)}toString(){return this.items.map(e=>this.itemToString(e)).join("")}getLayoutItems(){return this.items}itemToString(e){switch(e){case 0:return" ";case 3:case 4:return`
`;case 6:return this.indentation.getSingleIndent();default:return e}}},y_=e=>e===0||e===6,b_=e=>e===0||e===6||e===3;function gn(e,E){if(E==="standard")return e;let t=[];return e.length>=10&&e.includes(" ")&&([e,...t]=e.split(" ")),E==="tabularLeft"?e=e.padEnd(9," "):e=e.padStart(9," "),e+["",...t].join(" ")}function mn(e){return Ta(e)||e==="RESERVED_CLAUSE"||e==="RESERVED_SELECT"||e==="RESERVED_SET_OPERATION"||e==="RESERVED_JOIN"||e==="LIMIT"}var Er="top-level",B_="block-level",ZA=class{constructor(e){this.indent=e,this.indentTypes=[]}getSingleIndent(){return this.indent}getLevel(){return this.indentTypes.length}increaseTopLevel(){this.indentTypes.push(Er)}increaseBlockLevel(){this.indentTypes.push(B_)}decreaseTopLevel(){this.indentTypes.length>0&&bt(this.indentTypes)===Er&&this.indentTypes.pop()}decreaseBlockLevel(){for(;this.indentTypes.length>0&&this.indentTypes.pop()===Er;);}},F_=class extends QA{constructor(e){super(new ZA("")),this.expressionWidth=e,this.length=0,this.trailingSpace=!1}add(...e){if(e.forEach(E=>this.addToLength(E)),this.length>this.expressionWidth)throw new cr;super.add(...e)}addToLength(e){if(typeof e=="string")this.length+=e.length,this.trailingSpace=!1;else{if(e===4||e===3)throw new cr;e===5||e===6||e===0?this.trailingSpace||(this.length++,this.trailingSpace=!0):(e===2||e===1)&&this.trailingSpace&&(this.trailingSpace=!1,this.length--)}}},cr=class extends Error{},v_=class Lr{constructor({cfg:E,dialectCfg:t,params:T,layout:r,inline:s=!1}){this.inline=!1,this.nodes=[],this.index=-1,this.cfg=E,this.dialectCfg=t,this.inline=s,this.params=T,this.layout=r}format(E){for(this.nodes=E,this.index=0;this.index<this.nodes.length;this.index++)this.formatNode(this.nodes[this.index]);return this.layout}formatNode(E){this.formatComments(E.leadingComments),this.formatNodeWithoutComments(E),this.formatComments(E.trailingComments)}formatNodeWithoutComments(E){switch(E.type){case"function_call":return this.formatFunctionCall(E);case"parameterized_data_type":return this.formatParameterizedDataType(E);case"array_subscript":return this.formatArraySubscript(E);case"property_access":return this.formatPropertyAccess(E);case"parenthesis":return this.formatParenthesis(E);case"between_predicate":return this.formatBetweenPredicate(E);case"case_expression":return this.formatCaseExpression(E);case"case_when":return this.formatCaseWhen(E);case"case_else":return this.formatCaseElse(E);case"clause":return this.formatClause(E);case"set_operation":return this.formatSetOperation(E);case"limit_clause":return this.formatLimitClause(E);case"all_columns_asterisk":return this.formatAllColumnsAsterisk(E);case"literal":return this.formatLiteral(E);case"identifier":return this.formatIdentifier(E);case"parameter":return this.formatParameter(E);case"operator":return this.formatOperator(E);case"comma":return this.formatComma(E);case"line_comment":return this.formatLineComment(E);case"block_comment":return this.formatBlockComment(E);case"data_type":return this.formatDataType(E);case"keyword":return this.formatKeywordNode(E)}}formatFunctionCall(E){this.withComments(E.nameKw,()=>{this.layout.add(this.showFunctionKw(E.nameKw))}),this.formatNode(E.parenthesis)}formatParameterizedDataType(E){this.withComments(E.dataType,()=>{this.layout.add(this.showDataType(E.dataType))}),this.formatNode(E.parenthesis)}formatArraySubscript(E){let t;switch(E.array.type){case"data_type":t=this.showDataType(E.array);break;case"keyword":t=this.showKw(E.array);break;default:t=this.showIdentifier(E.array);break}this.withComments(E.array,()=>{this.layout.add(t)}),this.formatNode(E.parenthesis)}formatPropertyAccess(E){this.formatNode(E.object),this.layout.add(1,"."),this.formatNode(E.property)}formatParenthesis(E){const t=this.formatInlineExpression(E.children);t?(this.layout.add(E.openParen),this.layout.add(...t.getLayoutItems()),this.layout.add(1,E.closeParen,0)):(this.layout.add(E.openParen,3),ft(this.cfg)?(this.layout.add(5),this.layout=this.formatSubExpression(E.children)):(this.layout.indentation.increaseBlockLevel(),this.layout.add(5),this.layout=this.formatSubExpression(E.children),this.layout.indentation.decreaseBlockLevel()),this.layout.add(3,5,E.closeParen,0))}formatBetweenPredicate(E){this.layout.add(this.showKw(E.betweenKw),0),this.layout=this.formatSubExpression(E.expr1),this.layout.add(1,0,this.showNonTabularKw(E.andKw),0),this.layout=this.formatSubExpression(E.expr2),this.layout.add(0)}formatCaseExpression(E){this.formatNode(E.caseKw),this.layout.indentation.increaseBlockLevel(),this.layout=this.formatSubExpression(E.expr),this.layout=this.formatSubExpression(E.clauses),this.layout.indentation.decreaseBlockLevel(),this.layout.add(3,5),this.formatNode(E.endKw)}formatCaseWhen(E){this.layout.add(3,5),this.formatNode(E.whenKw),this.layout=this.formatSubExpression(E.condition),this.formatNode(E.thenKw),this.layout=this.formatSubExpression(E.result)}formatCaseElse(E){this.layout.add(3,5),this.formatNode(E.elseKw),this.layout=this.formatSubExpression(E.result)}formatClause(E){this.isOnelineClause(E)?this.formatClauseInOnelineStyle(E):ft(this.cfg)?this.formatClauseInTabularStyle(E):this.formatClauseInIndentedStyle(E)}isOnelineClause(E){return this.dialectCfg.onelineClauses[E.nameKw.text]}formatClauseInIndentedStyle(E){this.layout.add(3,5,this.showKw(E.nameKw),3),this.layout.indentation.increaseTopLevel(),this.layout.add(5),this.layout=this.formatSubExpression(E.children),this.layout.indentation.decreaseTopLevel()}formatClauseInOnelineStyle(E){this.layout.add(3,5,this.showKw(E.nameKw),0),this.layout=this.formatSubExpression(E.children)}formatClauseInTabularStyle(E){this.layout.add(3,5,this.showKw(E.nameKw),0),this.layout.indentation.increaseTopLevel(),this.layout=this.formatSubExpression(E.children),this.layout.indentation.decreaseTopLevel()}formatSetOperation(E){this.layout.add(3,5,this.showKw(E.nameKw),3),this.layout.add(5),this.layout=this.formatSubExpression(E.children)}formatLimitClause(E){this.withComments(E.limitKw,()=>{this.layout.add(3,5,this.showKw(E.limitKw))}),this.layout.indentation.increaseTopLevel(),ft(this.cfg)?this.layout.add(0):this.layout.add(3,5),E.offset?(this.layout=this.formatSubExpression(E.offset),this.layout.add(1,",",0),this.layout=this.formatSubExpression(E.count)):this.layout=this.formatSubExpression(E.count),this.layout.indentation.decreaseTopLevel()}formatAllColumnsAsterisk(E){this.layout.add("*",0)}formatLiteral(E){this.layout.add(E.text,0)}formatIdentifier(E){this.layout.add(this.showIdentifier(E),0)}formatParameter(E){this.layout.add(this.params.get(E),0)}formatOperator({text:E}){this.cfg.denseOperators||this.dialectCfg.alwaysDenseOperators.includes(E)?this.layout.add(1,E):E===":"?this.layout.add(1,E,0):this.layout.add(E,0)}formatComma(E){this.inline?this.layout.add(1,",",0):this.layout.add(1,",",3,5)}withComments(E,t){this.formatComments(E.leadingComments),t(),this.formatComments(E.trailingComments)}formatComments(E){E&&E.forEach(t=>{t.type==="line_comment"?this.formatLineComment(t):this.formatBlockComment(t)})}formatLineComment(E){ZT(E.precedingWhitespace||"")?this.layout.add(3,5,E.text,4,5):this.layout.getLayoutItems().length>0?this.layout.add(2,0,E.text,4,5):this.layout.add(E.text,4,5)}formatBlockComment(E){this.isMultilineBlockComment(E)?(this.splitBlockComment(E.text).forEach(t=>{this.layout.add(3,5,t)}),this.layout.add(3,5)):this.layout.add(E.text,0)}isMultilineBlockComment(E){return ZT(E.text)||ZT(E.precedingWhitespace||"")}isDocComment(E){const t=E.split(/\n/);return/^\/\*\*?$/.test(t[0])&&t.slice(1,t.length-1).every(T=>/^\s*\*/.test(T))&&/^\s*\*\/$/.test(bt(t))}splitBlockComment(E){return this.isDocComment(E)?E.split(/\n/).map(t=>/^\s*\*/.test(t)?" "+t.replace(/^\s*/,""):t):E.split(/\n/).map(t=>t.replace(/^\s*/,""))}formatSubExpression(E){return new Lr({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:this.layout,inline:this.inline}).format(E)}formatInlineExpression(E){const t=this.params.getPositionalParameterIndex();try{return new Lr({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:new F_(this.cfg.expressionWidth),inline:!0}).format(E)}catch(T){if(T instanceof cr){this.params.setPositionalParameterIndex(t);return}else throw T}}formatKeywordNode(E){switch(E.tokenType){case"RESERVED_JOIN":return this.formatJoin(E);case"AND":case"OR":case"XOR":return this.formatLogicalOperator(E);default:return this.formatKeyword(E)}}formatJoin(E){ft(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(3,5,this.showKw(E),0),this.layout.indentation.increaseTopLevel()):this.layout.add(3,5,this.showKw(E),0)}formatKeyword(E){this.layout.add(this.showKw(E),0)}formatLogicalOperator(E){this.cfg.logicalOperatorNewline==="before"?ft(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(3,5,this.showKw(E),0),this.layout.indentation.increaseTopLevel()):this.layout.add(3,5,this.showKw(E),0):this.layout.add(this.showKw(E),3,5)}formatDataType(E){this.layout.add(this.showDataType(E),0)}showKw(E){return mn(E.tokenType)?gn(this.showNonTabularKw(E),this.cfg.indentStyle):this.showNonTabularKw(E)}showNonTabularKw(E){switch(this.cfg.keywordCase){case"preserve":return AT(E.raw);case"upper":return E.text;case"lower":return E.text.toLowerCase()}}showFunctionKw(E){return mn(E.tokenType)?gn(this.showNonTabularFunctionKw(E),this.cfg.indentStyle):this.showNonTabularFunctionKw(E)}showNonTabularFunctionKw(E){switch(this.cfg.functionCase){case"preserve":return AT(E.raw);case"upper":return E.text;case"lower":return E.text.toLowerCase()}}showIdentifier(E){if(E.quoted)return E.text;switch(this.cfg.identifierCase){case"preserve":return E.text;case"upper":return E.text.toUpperCase();case"lower":return E.text.toLowerCase()}}showDataType(E){switch(this.cfg.dataTypeCase){case"preserve":return AT(E.raw);case"upper":return E.text;case"lower":return E.text.toLowerCase()}}},Y_=class{constructor(e,E){this.dialect=e,this.cfg=E,this.params=new c_(this.cfg.params)}format(e){const E=this.parse(e);return this.formatAst(E).trimEnd()}parse(e){return H_(this.dialect.tokenizer).parse(e,this.cfg.paramTypes||{})}formatAst(e){return e.map(E=>this.formatStatement(E)).join(`
`.repeat(this.cfg.linesBetweenQueries+1))}formatStatement(e){const E=new v_({cfg:this.cfg,dialectCfg:this.dialect.formatOptions,params:this.params,layout:new QA(new ZA(C_(this.cfg)))}).format(e.children);return e.hasSemicolon&&(this.cfg.newlineBeforeSemicolon?E.add(3,";"):E.add(2,";")),E.toString()}},ur=class extends Error{};function V_(e){const E=["multilineLists","newlineBeforeOpenParen","newlineBeforeCloseParen","aliasAs","commaPosition","tabulateAlias"];for(const t of E)if(t in e)throw new ur(`${t} config is no more supported.`);if(e.expressionWidth<=0)throw new ur(`expressionWidth config must be positive number. Received ${e.expressionWidth} instead.`);return e.params&&!x_(e.params)&&console.warn('WARNING: All "params" option values should be strings.'),e}function x_(e){return(e instanceof Array?e:Object.values(e)).every(t=>typeof t=="string")}var zA={bigquery:"bigquery",db2:"db2",db2i:"db2i",hive:"hive",mariadb:"mariadb",mysql:"mysql",n1ql:"n1ql",plsql:"plsql",postgresql:"postgresql",redshift:"redshift",spark:"spark",sqlite:"sqlite",sql:"sql",trino:"trino",transactsql:"transactsql",tsql:"transactsql",singlestoredb:"singlestoredb",snowflake:"snowflake"},w_=Object.keys(zA),W_={tabWidth:2,useTabs:!1,keywordCase:"preserve",identifierCase:"preserve",dataTypeCase:"preserve",functionCase:"preserve",indentStyle:"standard",logicalOperatorNewline:"before",expressionWidth:50,linesBetweenQueries:1,denseOperators:!1,newlineBeforeSemicolon:!1},X_=(e,E={})=>{if(typeof E.language=="string"&&!w_.includes(E.language))throw new ur(`Unsupported SQL dialect: ${E.language}`);const t=zA[E.language||"sql"];return $_(e,Ve(ye({},E),{dialect:YA[t]}))},$_=(e,E)=>{var t=E,{dialect:T}=t,r=JI(t,["dialect"]);if(typeof e!="string")throw new Error("Invalid query argument. Expected string, instead got "+typeof e);const s=V_(ye(ye({},W_),r));return new Y_(N_(T),s).format(e)};const K_={class:"flex items-center space-x-3"},J_={class:"font-bold text-lg"},k_={key:0,class:"px-1 py-0.5 rounded text-xs bg-sky-600 text-white"},j_={key:1,class:"px-1 py-0.5 rounded text-xs bg-emerald-600 text-white"},q_={key:2},Q_=["textContent"],Z_={key:0,class:"mt-4 ml-4"},z_={class:""},eC={class:"mt-3 text-stone-400 text-sm"},EC=["textContent"],tC=["textContent"],TC=me({__name:"QueryItem",props:{query:{}},setup(e){const E=e,t=ME({isOpen:!0,isFormatted:!1});function T(r){const s="text/plain",n=new Blob([r],{type:s}),R=[new ClipboardItem({[s]:n})];navigator.clipboard.write(R)}return(r,s)=>{const n=sE("highlightjs");return H(),X("div",null,[I("div",K_,[I("button",{class:"flex items-center space-x-1",onClick:s[0]||(s[0]=R=>t.isOpen=!t.isOpen)},[K(Re(HA),{class:$e(["size-4",{"-rotate-90":!t.isOpen}])},null,8,["class"]),I("span",J_,ne(r.query.name),1)]),E.query.cached?(H(),X("span",k_,"cached")):ie("",!0),E.query.async?(H(),X("span",j_,"async")):ie("",!0),t.isOpen?(H(),X("div",q_,[I("span",{onClick:s[1]||(s[1]=R=>t.isFormatted=!t.isFormatted),class:"px-3 text-xs uppercase text-stone-400 cursor-pointer",title:"Format SQL query",textContent:ne(t.isFormatted?"unformat":"format")},null,8,Q_),I("span",{onClick:s[2]||(s[2]=R=>T(r.query.sql)),class:"px-3 text-xs uppercase text-stone-400 cursor-pointer",title:"Copy SQL query to clipboard"},"copy")])):ie("",!0)]),t.isOpen?(H(),X("div",Z_,[I("div",z_,[K(n,{language:"sql",code:t.isFormatted?Re(X_)(r.query.sql):r.query.sql},null,8,["code"])]),I("div",eC,[I("div",{textContent:ne(r.query.source[0])},null,8,EC),r.query.source.length>1?(H(!0),X(ce,{key:0},Je(r.query.source.slice(1),R=>(H(),X("div",{class:"pl-4",textContent:ne("↳ "+R)},null,8,tC))),256)):ie("",!0)])])):ie("",!0)])}}}),rC={class:"flex flex-col space-y-8"},sC=me({__name:"QueriesPanel",props:{currentRequest:{}},setup(e){const E=e;return(t,T)=>(H(),Pe(IE,null,{default:oe(()=>[I("div",rC,[(H(!0),X(ce,null,Je(E.currentRequest.queries,r=>(H(),Pe(TC,{key:r.id,query:r},null,8,["query"]))),128))])]),_:1}))}}),nC={key:0},RC=I("div",{class:"text-gray-500"},"No jobs enqueued.",-1),AC=[RC],oC={key:1,class:"my-4 mx-6 divide-y divide-stone-300"},iC=I("thead",null,[I("tr",null,[I("th",{scope:"col",class:"w-36 py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-stone-900 sm:pl-0"},"Job"),I("th",{scope:"col",class:"px-3 py-3.5 text-left text-sm font-semibold text-stone-900"},"Args"),I("th",{scope:"col",class:"px-3 py-3.5 text-left text-sm font-semibold text-stone-900"},"Logs")])],-1),SC={class:"divide-y divide-stone-200"},OC={class:"whitespace-nowrap p-4 pr-8 text-stone-900"},IC=["textContent"],aC={class:"text-stone-600 text-sm"},NC=["textContent"],lC=["textContent"],_C={class:"whitespace-nowrap px-3 p-4 pr-8 text-sm"},CC={class:"whitespace-nowrap px-3 p-4 pr-8 text-sm text-stone-500"},cC=["innerHTML"],LC=me({__name:"JobsPanel",props:{jobs:{}},setup(e){const E=e;function t(T){return T==null?"-":new Date(T*1e3).toLocaleString()}return(T,r)=>{const s=sE("highlightjs");return H(),Pe(IE,null,{default:oe(()=>[E.jobs.length==0?(H(),X("div",nC,AC)):ie("",!0),E.jobs.length>0?(H(),X("table",oC,[iC,I("tbody",SC,[(H(!0),X(ce,null,Je(E.jobs,(n,R)=>(H(),X("tr",{key:n.id},[I("td",OC,[I("div",{class:"text-lg font-bold",textContent:ne(n.class)},null,8,IC),I("div",aC,[I("div",{textContent:ne("Queue: "+n.queue)},null,8,NC),I("div",{textContent:ne("At: "+t(n.scheduled_at))},null,8,lC)])]),I("td",_C,[K(s,{language:"json",code:JSON.stringify(n.args,null,2)},null,8,["code"])]),I("td",CC,[(H(!0),X(ce,null,Je(n.logs,(o,A)=>(H(),X("div",{innerHTML:(A>0?"  ".repeat(A)+"↳ ":"")+o,class:""},null,8,cC))),256))])]))),128))])])):ie("",!0)]),_:1})}}}),uC={key:0},pC=I("div",{class:"text-gray-500"},"No logs to show. Are you using the correct minimum level in your config?",-1),fC=[pC],PC={class:"flex items-center space-y-1 space-x-3"},DC={class:"w-32 text-right text-gray-400"},dC={class:"w-20 text-center"},MC=["title"],UC=["innerHTML"],hC=me({__name:"LogsPanel",props:{logs:{}},setup(e){const E=e;function t(T){return(T.progname||T.message||"").replace(" ","&nbsp;&nbsp;")}return(T,r)=>(H(),Pe(IE,null,{default:oe(()=>[E.logs.length==0?(H(),X("div",uC,fC)):ie("",!0),(H(!0),X(ce,null,Je(E.logs,s=>(H(),X("div",PC,[I("div",DC,ne(s.time),1),I("div",dC,[I("span",{class:$e(["px-1 py-0.5 rounded text-white text-xs font-mono font-medium",{"bg-stone-400":s.severity==0,"bg-blue-500":s.severity==1,"bg-amber-400":s.severity==2,"bg-red-400":s.severity==2,"bg-fuchsia-500":s.severity>=3}]),title:s.severity_label},ne(s.severity_label),11,MC)]),I("div",{class:"text-gray-800",innerHTML:t(s)},null,8,UC)]))),256))]),_:1}))}}),GC={class:"flex flex-col space-y-8"},gC={class:"space-y-3"},mC=["textContent"],HC={class:"ml-4"},yC={key:0},bC=me({__name:"MessagesPanel",props:{messages:{}},setup(e){const E=e;return(t,T)=>{const r=sE("highlightjs");return H(),Pe(IE,null,{default:oe(()=>[I("div",GC,[(H(!0),X(ce,null,Je(E.messages,(s,n)=>(H(),X("div",gC,[I("div",{class:"font-bold text-lg",textContent:ne(s.msg)},null,8,mC),I("div",HC,[s.extra?ie("",!0):(H(),X("div",yC,"–")),s.extra?(H(),Pe(r,{key:1,language:"json",code:JSON.stringify(s.extra)},null,8,["code"])):ie("",!0)])]))),256))])]),_:1})}}});class BC{constructor(E){je(this,"id");je(this,"meta");je(this,"request");je(this,"response");je(this,"models");je(this,"queries");je(this,"jobs");je(this,"messages");je(this,"cache");je(this,"logs");this.id=(E==null?void 0:E.id)||"null",this.meta=(E==null?void 0:E.meta)||{},this.request=(E==null?void 0:E.request)||{},this.response=(E==null?void 0:E.response)||{},this.models=(E==null?void 0:E.models)||{},this.queries=(E==null?void 0:E.queries)||[],this.jobs=(E==null?void 0:E.jobs)||[],this.messages=(E==null?void 0:E.messages)||[],this.cache=(E==null?void 0:E.cache)||[],this.logs=(E==null?void 0:E.logs)||[]}get modelsCount(){return Object.values(this.models).reduce((E,t)=>E+t,0)}get queryCount(){return this.queries.length}get jobsCount(){return this.jobs.length}get messagesCount(){return this.messages.length}get cacheCount(){return this.cache.reduce((E,t)=>(E.indexOf(t.transaction_id)===-1&&E.push(t.transaction_id),E),[]).length}get pathWithVerb(){return`${this.meta.method.toUpperCase()} ${this.meta.path}`}get dataForTabs(){const E={messages:{label:"Debug",count:this.messagesCount},models:{label:"Models",count:this.modelsCount},queries:{label:"Queries",count:this.queryCount},jobs:{label:"Jobs",count:this.jobsCount},cache:{label:"Cache",count:this.cacheCount}};return this.logs.length>0&&(E.logs={label:"Logs"}),E}}let FC=gA("requests",{state:()=>({requests:[],currentRequest:null}),actions:{addRequests(e){const E=[];return e.forEach(t=>{this.requests.find(T=>T.id===t.id)||this.requests.push(new BC(t)),E.push(t.id)}),E},setCurrentRequestById(e){this.currentRequest=this.requests.find(E=>E.id===e)},clearRequests(){this.requests=[],this.currentRequest=null}}});function vC(e,E,t){switch(t.length){case 0:return e.call(E);case 1:return e.call(E,t[0]);case 2:return e.call(E,t[0],t[1]);case 3:return e.call(E,t[0],t[1],t[2])}return e.apply(E,t)}var eo=vC;function YC(e){return e}var Eo=YC,VC=eo,Hn=Math.max;function xC(e,E,t){return E=Hn(E===void 0?e.length-1:E,0),function(){for(var T=arguments,r=-1,s=Hn(T.length-E,0),n=Array(s);++r<s;)n[r]=T[E+r];r=-1;for(var R=Array(E+1);++r<E;)R[r]=T[r];return R[E]=t(n),VC(e,this,R)}}var to=xC;function wC(e){return function(){return e}}var WC=wC,XC=typeof QE=="object"&&QE&&QE.Object===Object&&QE,To=XC,$C=To,KC=typeof self=="object"&&self&&self.Object===Object&&self,JC=$C||KC||Function("return this")(),oE=JC,kC=oE,jC=kC.Symbol,Jt=jC,yn=Jt,ro=Object.prototype,qC=ro.hasOwnProperty,QC=ro.toString,Pt=yn?yn.toStringTag:void 0;function ZC(e){var E=qC.call(e,Pt),t=e[Pt];try{e[Pt]=void 0;var T=!0}catch{}var r=QC.call(e);return T&&(E?e[Pt]=t:delete e[Pt]),r}var zC=ZC,ec=Object.prototype,Ec=ec.toString;function tc(e){return Ec.call(e)}var Tc=tc,bn=Jt,rc=zC,sc=Tc,nc="[object Null]",Rc="[object Undefined]",Bn=bn?bn.toStringTag:void 0;function Ac(e){return e==null?e===void 0?Rc:nc:Bn&&Bn in Object(e)?rc(e):sc(e)}var Ot=Ac;function oc(e){var E=typeof e;return e!=null&&(E=="object"||E=="function")}var NE=oc,ic=Ot,Sc=NE,Oc="[object AsyncFunction]",Ic="[object Function]",ac="[object GeneratorFunction]",Nc="[object Proxy]";function lc(e){if(!Sc(e))return!1;var E=ic(e);return E==Ic||E==ac||E==Oc||E==Nc}var Zr=lc,_c=oE,Cc=_c["__core-js_shared__"],cc=Cc,tr=cc,Fn=function(){var e=/[^.]+$/.exec(tr&&tr.keys&&tr.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}();function Lc(e){return!!Fn&&Fn in e}var uc=Lc,pc=Function.prototype,fc=pc.toString;function Pc(e){if(e!=null){try{return fc.call(e)}catch{}try{return e+""}catch{}}return""}var so=Pc,Dc=Zr,dc=uc,Mc=NE,Uc=so,hc=/[\\^$.*+?()[\]{}|]/g,Gc=/^\[object .+?Constructor\]$/,gc=Function.prototype,mc=Object.prototype,Hc=gc.toString,yc=mc.hasOwnProperty,bc=RegExp("^"+Hc.call(yc).replace(hc,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function Bc(e){if(!Mc(e)||dc(e))return!1;var E=Dc(e)?bc:Gc;return E.test(Uc(e))}var Fc=Bc;function vc(e,E){return e==null?void 0:e[E]}var Yc=vc,Vc=Fc,xc=Yc;function wc(e,E){var t=xc(e,E);return Vc(t)?t:void 0}var $E=wc,Wc=$E,Xc=function(){try{var e=Wc(Object,"defineProperty");return e({},"",{}),e}catch{}}(),no=Xc,$c=WC,vn=no,Kc=Eo,Jc=vn?function(e,E){return vn(e,"toString",{configurable:!0,enumerable:!1,value:$c(E),writable:!0})}:Kc,kc=Jc,jc=800,qc=16,Qc=Date.now;function Zc(e){var E=0,t=0;return function(){var T=Qc(),r=qc-(T-t);if(t=T,r>0){if(++E>=jc)return arguments[0]}else E=0;return e.apply(void 0,arguments)}}var zc=Zc,eL=kc,EL=zc,tL=EL(eL),Ro=tL,TL=Eo,rL=to,sL=Ro;function nL(e,E){return sL(rL(e,E,TL),e+"")}var Ao=nL;function RL(){this.__data__=[],this.size=0}var AL=RL;function oL(e,E){return e===E||e!==e&&E!==E}var vT=oL,iL=vT;function SL(e,E){for(var t=e.length;t--;)if(iL(e[t][0],E))return t;return-1}var YT=SL,OL=YT,IL=Array.prototype,aL=IL.splice;function NL(e){var E=this.__data__,t=OL(E,e);if(t<0)return!1;var T=E.length-1;return t==T?E.pop():aL.call(E,t,1),--this.size,!0}var lL=NL,_L=YT;function CL(e){var E=this.__data__,t=_L(E,e);return t<0?void 0:E[t][1]}var cL=CL,LL=YT;function uL(e){return LL(this.__data__,e)>-1}var pL=uL,fL=YT;function PL(e,E){var t=this.__data__,T=fL(t,e);return T<0?(++this.size,t.push([e,E])):t[T][1]=E,this}var DL=PL,dL=AL,ML=lL,UL=cL,hL=pL,GL=DL;function It(e){var E=-1,t=e==null?0:e.length;for(this.clear();++E<t;){var T=e[E];this.set(T[0],T[1])}}It.prototype.clear=dL;It.prototype.delete=ML;It.prototype.get=UL;It.prototype.has=hL;It.prototype.set=GL;var VT=It,gL=VT;function mL(){this.__data__=new gL,this.size=0}var HL=mL;function yL(e){var E=this.__data__,t=E.delete(e);return this.size=E.size,t}var bL=yL;function BL(e){return this.__data__.get(e)}var FL=BL;function vL(e){return this.__data__.has(e)}var YL=vL,VL=$E,xL=oE,wL=VL(xL,"Map"),zr=wL,WL=$E,XL=WL(Object,"create"),xT=XL,Yn=xT;function $L(){this.__data__=Yn?Yn(null):{},this.size=0}var KL=$L;function JL(e){var E=this.has(e)&&delete this.__data__[e];return this.size-=E?1:0,E}var kL=JL,jL=xT,qL="__lodash_hash_undefined__",QL=Object.prototype,ZL=QL.hasOwnProperty;function zL(e){var E=this.__data__;if(jL){var t=E[e];return t===qL?void 0:t}return ZL.call(E,e)?E[e]:void 0}var eu=zL,Eu=xT,tu=Object.prototype,Tu=tu.hasOwnProperty;function ru(e){var E=this.__data__;return Eu?E[e]!==void 0:Tu.call(E,e)}var su=ru,nu=xT,Ru="__lodash_hash_undefined__";function Au(e,E){var t=this.__data__;return this.size+=this.has(e)?0:1,t[e]=nu&&E===void 0?Ru:E,this}var ou=Au,iu=KL,Su=kL,Ou=eu,Iu=su,au=ou;function at(e){var E=-1,t=e==null?0:e.length;for(this.clear();++E<t;){var T=e[E];this.set(T[0],T[1])}}at.prototype.clear=iu;at.prototype.delete=Su;at.prototype.get=Ou;at.prototype.has=Iu;at.prototype.set=au;var Nu=at,Vn=Nu,lu=VT,_u=zr;function Cu(){this.size=0,this.__data__={hash:new Vn,map:new(_u||lu),string:new Vn}}var cu=Cu;function Lu(e){var E=typeof e;return E=="string"||E=="number"||E=="symbol"||E=="boolean"?e!=="__proto__":e===null}var uu=Lu,pu=uu;function fu(e,E){var t=e.__data__;return pu(E)?t[typeof E=="string"?"string":"hash"]:t.map}var wT=fu,Pu=wT;function Du(e){var E=Pu(this,e).delete(e);return this.size-=E?1:0,E}var du=Du,Mu=wT;function Uu(e){return Mu(this,e).get(e)}var hu=Uu,Gu=wT;function gu(e){return Gu(this,e).has(e)}var mu=gu,Hu=wT;function yu(e,E){var t=Hu(this,e),T=t.size;return t.set(e,E),this.size+=t.size==T?0:1,this}var bu=yu,Bu=cu,Fu=du,vu=hu,Yu=mu,Vu=bu;function Nt(e){var E=-1,t=e==null?0:e.length;for(this.clear();++E<t;){var T=e[E];this.set(T[0],T[1])}}Nt.prototype.clear=Bu;Nt.prototype.delete=Fu;Nt.prototype.get=vu;Nt.prototype.has=Yu;Nt.prototype.set=Vu;var oo=Nt,xu=VT,wu=zr,Wu=oo,Xu=200;function $u(e,E){var t=this.__data__;if(t instanceof xu){var T=t.__data__;if(!wu||T.length<Xu-1)return T.push([e,E]),this.size=++t.size,this;t=this.__data__=new Wu(T)}return t.set(e,E),this.size=t.size,this}var Ku=$u,Ju=VT,ku=HL,ju=bL,qu=FL,Qu=YL,Zu=Ku;function lt(e){var E=this.__data__=new Ju(e);this.size=E.size}lt.prototype.clear=ku;lt.prototype.delete=ju;lt.prototype.get=qu;lt.prototype.has=Qu;lt.prototype.set=Zu;var io=lt,xn=no;function zu(e,E,t){E=="__proto__"&&xn?xn(e,E,{configurable:!0,enumerable:!0,value:t,writable:!0}):e[E]=t}var es=zu,ep=es,Ep=vT;function tp(e,E,t){(t!==void 0&&!Ep(e[E],t)||t===void 0&&!(E in e))&&ep(e,E,t)}var So=tp;function Tp(e){return function(E,t,T){for(var r=-1,s=Object(E),n=T(E),R=n.length;R--;){var o=n[e?R:++r];if(t(s[o],o,s)===!1)break}return E}}var rp=Tp,sp=rp,np=sp(),Rp=np,LT={exports:{}};LT.exports;(function(e,E){var t=oE,T=E&&!E.nodeType&&E,r=T&&!0&&e&&!e.nodeType&&e,s=r&&r.exports===T,n=s?t.Buffer:void 0,R=n?n.allocUnsafe:void 0;function o(A,i){if(i)return A.slice();var O=A.length,a=R?R(O):new A.constructor(O);return A.copy(a),a}e.exports=o})(LT,LT.exports);var Oo=LT.exports,Ap=oE,op=Ap.Uint8Array,ip=op,wn=ip;function Sp(e){var E=new e.constructor(e.byteLength);return new wn(E).set(new wn(e)),E}var Es=Sp,Op=Es;function Ip(e,E){var t=E?Op(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.length)}var Io=Ip;function ap(e,E){var t=-1,T=e.length;for(E||(E=Array(T));++t<T;)E[t]=e[t];return E}var ao=ap,Np=NE,Wn=Object.create,lp=function(){function e(){}return function(E){if(!Np(E))return{};if(Wn)return Wn(E);e.prototype=E;var t=new e;return e.prototype=void 0,t}}(),_p=lp;function Cp(e,E){return function(t){return e(E(t))}}var No=Cp,cp=No,Lp=cp(Object.getPrototypeOf,Object),ts=Lp,up=Object.prototype;function pp(e){var E=e&&e.constructor,t=typeof E=="function"&&E.prototype||up;return e===t}var Ts=pp,fp=_p,Pp=ts,Dp=Ts;function dp(e){return typeof e.constructor=="function"&&!Dp(e)?fp(Pp(e)):{}}var lo=dp;function Mp(e){return e!=null&&typeof e=="object"}var UE=Mp,Up=Ot,hp=UE,Gp="[object Arguments]";function gp(e){return hp(e)&&Up(e)==Gp}var mp=gp,Xn=mp,Hp=UE,_o=Object.prototype,yp=_o.hasOwnProperty,bp=_o.propertyIsEnumerable,Bp=Xn(function(){return arguments}())?Xn:function(e){return Hp(e)&&yp.call(e,"callee")&&!bp.call(e,"callee")},rs=Bp,Fp=Array.isArray,hE=Fp,vp=9007199254740991;function Yp(e){return typeof e=="number"&&e>-1&&e%1==0&&e<=vp}var Co=Yp,Vp=Zr,xp=Co;function wp(e){return e!=null&&xp(e.length)&&!Vp(e)}var WT=wp,Wp=WT,Xp=UE;function $p(e){return Xp(e)&&Wp(e)}var Kp=$p,uT={exports:{}};function Jp(){return!1}var kp=Jp;uT.exports;(function(e,E){var t=oE,T=kp,r=E&&!E.nodeType&&E,s=r&&!0&&e&&!e.nodeType&&e,n=s&&s.exports===r,R=n?t.Buffer:void 0,o=R?R.isBuffer:void 0,A=o||T;e.exports=A})(uT,uT.exports);var ss=uT.exports,jp=Ot,qp=ts,Qp=UE,Zp="[object Object]",zp=Function.prototype,ef=Object.prototype,co=zp.toString,Ef=ef.hasOwnProperty,tf=co.call(Object);function Tf(e){if(!Qp(e)||jp(e)!=Zp)return!1;var E=qp(e);if(E===null)return!0;var t=Ef.call(E,"constructor")&&E.constructor;return typeof t=="function"&&t instanceof t&&co.call(t)==tf}var Lo=Tf,rf=Ot,sf=Co,nf=UE,Rf="[object Arguments]",Af="[object Array]",of="[object Boolean]",Sf="[object Date]",Of="[object Error]",If="[object Function]",af="[object Map]",Nf="[object Number]",lf="[object Object]",_f="[object RegExp]",Cf="[object Set]",cf="[object String]",Lf="[object WeakMap]",uf="[object ArrayBuffer]",pf="[object DataView]",ff="[object Float32Array]",Pf="[object Float64Array]",Df="[object Int8Array]",df="[object Int16Array]",Mf="[object Int32Array]",Uf="[object Uint8Array]",hf="[object Uint8ClampedArray]",Gf="[object Uint16Array]",gf="[object Uint32Array]",_e={};_e[ff]=_e[Pf]=_e[Df]=_e[df]=_e[Mf]=_e[Uf]=_e[hf]=_e[Gf]=_e[gf]=!0;_e[Rf]=_e[Af]=_e[uf]=_e[of]=_e[pf]=_e[Sf]=_e[Of]=_e[If]=_e[af]=_e[Nf]=_e[lf]=_e[_f]=_e[Cf]=_e[cf]=_e[Lf]=!1;function mf(e){return nf(e)&&sf(e.length)&&!!_e[rf(e)]}var Hf=mf;function yf(e){return function(E){return e(E)}}var ns=yf,pT={exports:{}};pT.exports;(function(e,E){var t=To,T=E&&!E.nodeType&&E,r=T&&!0&&e&&!e.nodeType&&e,s=r&&r.exports===T,n=s&&t.process,R=function(){try{var o=r&&r.require&&r.require("util").types;return o||n&&n.binding&&n.binding("util")}catch{}}();e.exports=R})(pT,pT.exports);var Rs=pT.exports,bf=Hf,Bf=ns,$n=Rs,Kn=$n&&$n.isTypedArray,Ff=Kn?Bf(Kn):bf,uo=Ff;function vf(e,E){if(!(E==="constructor"&&typeof e[E]=="function")&&E!="__proto__")return e[E]}var po=vf,Yf=es,Vf=vT,xf=Object.prototype,wf=xf.hasOwnProperty;function Wf(e,E,t){var T=e[E];(!(wf.call(e,E)&&Vf(T,t))||t===void 0&&!(E in e))&&Yf(e,E,t)}var fo=Wf,Xf=fo,$f=es;function Kf(e,E,t,T){var r=!t;t||(t={});for(var s=-1,n=E.length;++s<n;){var R=E[s],o=T?T(t[R],e[R],R,t,e):void 0;o===void 0&&(o=e[R]),r?$f(t,R,o):Xf(t,R,o)}return t}var _t=Kf;function Jf(e,E){for(var t=-1,T=Array(e);++t<e;)T[t]=E(t);return T}var kf=Jf,jf=9007199254740991,qf=/^(?:0|[1-9]\d*)$/;function Qf(e,E){var t=typeof e;return E=E??jf,!!E&&(t=="number"||t!="symbol"&&qf.test(e))&&e>-1&&e%1==0&&e<E}var Po=Qf,Zf=kf,zf=rs,eP=hE,EP=ss,tP=Po,TP=uo,rP=Object.prototype,sP=rP.hasOwnProperty;function nP(e,E){var t=eP(e),T=!t&&zf(e),r=!t&&!T&&EP(e),s=!t&&!T&&!r&&TP(e),n=t||T||r||s,R=n?Zf(e.length,String):[],o=R.length;for(var A in e)(E||sP.call(e,A))&&!(n&&(A=="length"||r&&(A=="offset"||A=="parent")||s&&(A=="buffer"||A=="byteLength"||A=="byteOffset")||tP(A,o)))&&R.push(A);return R}var Do=nP;function RP(e){var E=[];if(e!=null)for(var t in Object(e))E.push(t);return E}var AP=RP,oP=NE,iP=Ts,SP=AP,OP=Object.prototype,IP=OP.hasOwnProperty;function aP(e){if(!oP(e))return SP(e);var E=iP(e),t=[];for(var T in e)T=="constructor"&&(E||!IP.call(e,T))||t.push(T);return t}var NP=aP,lP=Do,_P=NP,CP=WT;function cP(e){return CP(e)?lP(e,!0):_P(e)}var kt=cP,LP=_t,uP=kt;function pP(e){return LP(e,uP(e))}var fP=pP,Jn=So,PP=Oo,DP=Io,dP=ao,MP=lo,kn=rs,jn=hE,UP=Kp,hP=ss,GP=Zr,gP=NE,mP=Lo,HP=uo,qn=po,yP=fP;function bP(e,E,t,T,r,s,n){var R=qn(e,t),o=qn(E,t),A=n.get(o);if(A){Jn(e,t,A);return}var i=s?s(R,o,t+"",e,E,n):void 0,O=i===void 0;if(O){var a=jn(o),P=!a&&hP(o),U=!a&&!P&&HP(o);i=o,a||P||U?jn(R)?i=R:UP(R)?i=dP(R):P?(O=!1,i=PP(o,!0)):U?(O=!1,i=DP(o,!0)):i=[]:mP(o)||kn(o)?(i=R,kn(R)?i=yP(R):(!gP(R)||GP(R))&&(i=MP(o))):O=!1}O&&(n.set(o,i),r(i,o,T,s,n),n.delete(o)),Jn(e,t,i)}var BP=bP,FP=io,vP=So,YP=Rp,VP=BP,xP=NE,wP=kt,WP=po;function Mo(e,E,t,T,r){e!==E&&YP(E,function(s,n){if(r||(r=new FP),xP(s))VP(e,E,n,t,Mo,T,r);else{var R=T?T(WP(e,n),s,n+"",e,E,r):void 0;R===void 0&&(R=s),vP(e,n,R)}},wP)}var Uo=Mo,XP=Uo,Qn=NE;function ho(e,E,t,T,r,s){return Qn(e)&&Qn(E)&&(s.set(E,e),XP(e,E,void 0,ho,s),s.delete(E)),e}var $P=ho,KP=vT,JP=WT,kP=Po,jP=NE;function qP(e,E,t){if(!jP(t))return!1;var T=typeof E;return(T=="number"?JP(t)&&kP(E,t.length):T=="string"&&E in t)?KP(t[E],e):!1}var QP=qP,ZP=Ao,zP=QP;function eD(e){return ZP(function(E,t){var T=-1,r=t.length,s=r>1?t[r-1]:void 0,n=r>2?t[2]:void 0;for(s=e.length>3&&typeof s=="function"?(r--,s):void 0,n&&zP(t[0],t[1],n)&&(s=r<3?void 0:s,r=1),E=Object(E);++T<r;){var R=t[T];R&&e(E,R,T,s)}return E})}var ED=eD,tD=Uo,TD=ED,rD=TD(function(e,E,t,T){tD(e,E,t,T)}),sD=rD,nD=eo,RD=Ao,AD=$P,oD=sD,iD=RD(function(e){return e.push(void 0,AD),nD(oD,void 0,e)}),SD=iD;const OD=fT(SD);function ID(e){const E=OD(e,{mode:"ws",cable:{url:"ws://127.0.0.1:3000",prefix:"/_debugbar"},channelName:"Debugbar::DebugbarChannel",height:360});return E.actionCableUrl=`${E.cable.url}${E.cable.prefix}/cable`,E}let aD=gA("config",{state:()=>({config:ID(window._debugbarConfigOptions)})});const ND={key:0},lD=I("div",{class:"text-gray-500"},"No cache used.",-1),_D=[lD],CD={class:"space-y-3"},cD={class:"flex items-center space-x-8"},LD={class:"w-24 text-sm text-right text-gray-400"},uD={class:"w-16 text-right"},pD={class:"text-gray-800"},fD={class:"font-medium",title:"cache key"},PD={class:"text-xs text-gray-400",title:"transaction_id"},DD=me({__name:"CachePanel",props:{cache:{}},setup(e){const E=e;return(t,T)=>(H(),Pe(IE,null,{default:oe(()=>[E.cache.length==0?(H(),X("div",ND,_D)):ie("",!0),I("div",CD,[(H(!0),X(ce,null,Je(E.cache,r=>(H(),X("div",cD,[I("div",LD,ne(r.time),1),I("div",uD,[I("span",{class:$e(["px-1 py-0.5 rounded text-white text-xs font-mono font-medium bg-stone-400",{"!bg-emerald-500":r.label=="hit","!bg-indigo-500":r.label=="write","!bg-amber-400":r.label=="read","!bg-red-400":r.label=="delete"}])},ne(r.label),3)]),I("div",pD,[I("div",fD,ne(r.key),1),I("div",PD,ne(r.transaction_id),1)])]))),256))])]),_:1}))}});function dD(e,E){for(var t=-1,T=e==null?0:e.length,r=Array(T);++t<T;)r[t]=E(e[t],t,e);return r}var Go=dD;function MD(e,E){for(var t=-1,T=e==null?0:e.length;++t<T&&E(e[t],t,e)!==!1;);return e}var UD=MD,hD=No,GD=hD(Object.keys,Object),gD=GD,mD=Ts,HD=gD,yD=Object.prototype,bD=yD.hasOwnProperty;function BD(e){if(!mD(e))return HD(e);var E=[];for(var t in Object(e))bD.call(e,t)&&t!="constructor"&&E.push(t);return E}var FD=BD,vD=Do,YD=FD,VD=WT;function xD(e){return VD(e)?vD(e):YD(e)}var As=xD,wD=_t,WD=As;function XD(e,E){return e&&wD(E,WD(E),e)}var $D=XD,KD=_t,JD=kt;function kD(e,E){return e&&KD(E,JD(E),e)}var jD=kD;function qD(e,E){for(var t=-1,T=e==null?0:e.length,r=0,s=[];++t<T;){var n=e[t];E(n,t,e)&&(s[r++]=n)}return s}var QD=qD;function ZD(){return[]}var go=ZD,zD=QD,ed=go,Ed=Object.prototype,td=Ed.propertyIsEnumerable,Zn=Object.getOwnPropertySymbols,Td=Zn?function(e){return e==null?[]:(e=Object(e),zD(Zn(e),function(E){return td.call(e,E)}))}:ed,os=Td,rd=_t,sd=os;function nd(e,E){return rd(e,sd(e),E)}var Rd=nd;function Ad(e,E){for(var t=-1,T=E.length,r=e.length;++t<T;)e[r+t]=E[t];return e}var is=Ad,od=is,id=ts,Sd=os,Od=go,Id=Object.getOwnPropertySymbols,ad=Id?function(e){for(var E=[];e;)od(E,Sd(e)),e=id(e);return E}:Od,mo=ad,Nd=_t,ld=mo;function _d(e,E){return Nd(e,ld(e),E)}var Cd=_d,cd=is,Ld=hE;function ud(e,E,t){var T=E(e);return Ld(e)?T:cd(T,t(e))}var Ho=ud,pd=Ho,fd=os,Pd=As;function Dd(e){return pd(e,Pd,fd)}var dd=Dd,Md=Ho,Ud=mo,hd=kt;function Gd(e){return Md(e,hd,Ud)}var yo=Gd,gd=$E,md=oE,Hd=gd(md,"DataView"),yd=Hd,bd=$E,Bd=oE,Fd=bd(Bd,"Promise"),vd=Fd,Yd=$E,Vd=oE,xd=Yd(Vd,"Set"),wd=xd,Wd=$E,Xd=oE,$d=Wd(Xd,"WeakMap"),Kd=$d,pr=yd,fr=zr,Pr=vd,Dr=wd,dr=Kd,bo=Ot,Ct=so,zn="[object Map]",Jd="[object Object]",eR="[object Promise]",ER="[object Set]",tR="[object WeakMap]",TR="[object DataView]",kd=Ct(pr),jd=Ct(fr),qd=Ct(Pr),Qd=Ct(Dr),Zd=Ct(dr),bE=bo;(pr&&bE(new pr(new ArrayBuffer(1)))!=TR||fr&&bE(new fr)!=zn||Pr&&bE(Pr.resolve())!=eR||Dr&&bE(new Dr)!=ER||dr&&bE(new dr)!=tR)&&(bE=function(e){var E=bo(e),t=E==Jd?e.constructor:void 0,T=t?Ct(t):"";if(T)switch(T){case kd:return TR;case jd:return zn;case qd:return eR;case Qd:return ER;case Zd:return tR}return E});var Ss=bE,zd=Object.prototype,eM=zd.hasOwnProperty;function EM(e){var E=e.length,t=new e.constructor(E);return E&&typeof e[0]=="string"&&eM.call(e,"index")&&(t.index=e.index,t.input=e.input),t}var tM=EM,TM=Es;function rM(e,E){var t=E?TM(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.byteLength)}var sM=rM,nM=/\w*$/;function RM(e){var E=new e.constructor(e.source,nM.exec(e));return E.lastIndex=e.lastIndex,E}var AM=RM,rR=Jt,sR=rR?rR.prototype:void 0,nR=sR?sR.valueOf:void 0;function oM(e){return nR?Object(nR.call(e)):{}}var iM=oM,SM=Es,OM=sM,IM=AM,aM=iM,NM=Io,lM="[object Boolean]",_M="[object Date]",CM="[object Map]",cM="[object Number]",LM="[object RegExp]",uM="[object Set]",pM="[object String]",fM="[object Symbol]",PM="[object ArrayBuffer]",DM="[object DataView]",dM="[object Float32Array]",MM="[object Float64Array]",UM="[object Int8Array]",hM="[object Int16Array]",GM="[object Int32Array]",gM="[object Uint8Array]",mM="[object Uint8ClampedArray]",HM="[object Uint16Array]",yM="[object Uint32Array]";function bM(e,E,t){var T=e.constructor;switch(E){case PM:return SM(e);case lM:case _M:return new T(+e);case DM:return OM(e,t);case dM:case MM:case UM:case hM:case GM:case gM:case mM:case HM:case yM:return NM(e,t);case CM:return new T;case cM:case pM:return new T(e);case LM:return IM(e);case uM:return new T;case fM:return aM(e)}}var BM=bM,FM=Ss,vM=UE,YM="[object Map]";function VM(e){return vM(e)&&FM(e)==YM}var xM=VM,wM=xM,WM=ns,RR=Rs,AR=RR&&RR.isMap,XM=AR?WM(AR):wM,$M=XM,KM=Ss,JM=UE,kM="[object Set]";function jM(e){return JM(e)&&KM(e)==kM}var qM=jM,QM=qM,ZM=ns,oR=Rs,iR=oR&&oR.isSet,zM=iR?ZM(iR):QM,eU=zM,EU=io,tU=UD,TU=fo,rU=$D,sU=jD,nU=Oo,RU=ao,AU=Rd,oU=Cd,iU=dd,SU=yo,OU=Ss,IU=tM,aU=BM,NU=lo,lU=hE,_U=ss,CU=$M,cU=NE,LU=eU,uU=As,pU=kt,fU=1,PU=2,DU=4,Bo="[object Arguments]",dU="[object Array]",MU="[object Boolean]",UU="[object Date]",hU="[object Error]",Fo="[object Function]",GU="[object GeneratorFunction]",gU="[object Map]",mU="[object Number]",vo="[object Object]",HU="[object RegExp]",yU="[object Set]",bU="[object String]",BU="[object Symbol]",FU="[object WeakMap]",vU="[object ArrayBuffer]",YU="[object DataView]",VU="[object Float32Array]",xU="[object Float64Array]",wU="[object Int8Array]",WU="[object Int16Array]",XU="[object Int32Array]",$U="[object Uint8Array]",KU="[object Uint8ClampedArray]",JU="[object Uint16Array]",kU="[object Uint32Array]",Ne={};Ne[Bo]=Ne[dU]=Ne[vU]=Ne[YU]=Ne[MU]=Ne[UU]=Ne[VU]=Ne[xU]=Ne[wU]=Ne[WU]=Ne[XU]=Ne[gU]=Ne[mU]=Ne[vo]=Ne[HU]=Ne[yU]=Ne[bU]=Ne[BU]=Ne[$U]=Ne[KU]=Ne[JU]=Ne[kU]=!0;Ne[hU]=Ne[Fo]=Ne[FU]=!1;function oT(e,E,t,T,r,s){var n,R=E&fU,o=E&PU,A=E&DU;if(t&&(n=r?t(e,T,r,s):t(e)),n!==void 0)return n;if(!cU(e))return e;var i=lU(e);if(i){if(n=IU(e),!R)return RU(e,n)}else{var O=OU(e),a=O==Fo||O==GU;if(_U(e))return nU(e,R);if(O==vo||O==Bo||a&&!r){if(n=o||a?{}:NU(e),!R)return o?oU(e,sU(n,e)):AU(e,rU(n,e))}else{if(!Ne[O])return r?e:{};n=aU(e,O,R)}}s||(s=new EU);var P=s.get(e);if(P)return P;s.set(e,n),LU(e)?e.forEach(function(x){n.add(oT(x,E,t,x,e,s))}):CU(e)&&e.forEach(function(x,$){n.set($,oT(x,E,t,$,e,s))});var U=A?o?SU:iU:o?pU:uU,b=i?void 0:U(e);return tU(b||e,function(x,$){b&&($=x,x=e[$]),TU(n,$,oT(x,E,t,$,e,s))}),n}var jU=oT,qU=Ot,QU=UE,ZU="[object Symbol]";function zU(e){return typeof e=="symbol"||QU(e)&&qU(e)==ZU}var Os=zU,eh=hE,Eh=Os,th=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,Th=/^\w*$/;function rh(e,E){if(eh(e))return!1;var t=typeof e;return t=="number"||t=="symbol"||t=="boolean"||e==null||Eh(e)?!0:Th.test(e)||!th.test(e)||E!=null&&e in Object(E)}var sh=rh,Yo=oo,nh="Expected a function";function Is(e,E){if(typeof e!="function"||E!=null&&typeof E!="function")throw new TypeError(nh);var t=function(){var T=arguments,r=E?E.apply(this,T):T[0],s=t.cache;if(s.has(r))return s.get(r);var n=e.apply(this,T);return t.cache=s.set(r,n)||s,n};return t.cache=new(Is.Cache||Yo),t}Is.Cache=Yo;var Rh=Is,Ah=Rh,oh=500;function ih(e){var E=Ah(e,function(T){return t.size===oh&&t.clear(),T}),t=E.cache;return E}var Sh=ih,Oh=Sh,Ih=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,ah=/\\(\\)?/g,Nh=Oh(function(e){var E=[];return e.charCodeAt(0)===46&&E.push(""),e.replace(Ih,function(t,T,r,s){E.push(r?s.replace(ah,"$1"):T||t)}),E}),lh=Nh,SR=Jt,_h=Go,Ch=hE,ch=Os,Lh=1/0,IR=SR?SR.prototype:void 0,aR=IR?IR.toString:void 0;function Vo(e){if(typeof e=="string")return e;if(Ch(e))return _h(e,Vo)+"";if(ch(e))return aR?aR.call(e):"";var E=e+"";return E=="0"&&1/e==-Lh?"-0":E}var uh=Vo,ph=uh;function fh(e){return e==null?"":ph(e)}var Ph=fh,Dh=hE,dh=sh,Mh=lh,Uh=Ph;function hh(e,E){return Dh(e)?e:dh(e,E)?[e]:Mh(Uh(e))}var as=hh;function Gh(e){var E=e==null?0:e.length;return E?e[E-1]:void 0}var gh=Gh,mh=Os,Hh=1/0;function yh(e){if(typeof e=="string"||mh(e))return e;var E=e+"";return E=="0"&&1/e==-Hh?"-0":E}var xo=yh,bh=as,Bh=xo;function Fh(e,E){E=bh(E,e);for(var t=0,T=E.length;e!=null&&t<T;)e=e[Bh(E[t++])];return t&&t==T?e:void 0}var vh=Fh;function Yh(e,E,t){var T=-1,r=e.length;E<0&&(E=-E>r?0:r+E),t=t>r?r:t,t<0&&(t+=r),r=E>t?0:t-E>>>0,E>>>=0;for(var s=Array(r);++T<r;)s[T]=e[T+E];return s}var Vh=Yh,xh=vh,wh=Vh;function Wh(e,E){return E.length<2?e:xh(e,wh(E,0,-1))}var Xh=Wh,$h=as,Kh=gh,Jh=Xh,kh=xo;function jh(e,E){return E=$h(E,e),e=Jh(e,E),e==null||delete e[kh(Kh(E))]}var qh=jh,Qh=Lo;function Zh(e){return Qh(e)?void 0:e}var zh=Zh,NR=Jt,eG=rs,EG=hE,lR=NR?NR.isConcatSpreadable:void 0;function tG(e){return EG(e)||eG(e)||!!(lR&&e&&e[lR])}var TG=tG,rG=is,sG=TG;function wo(e,E,t,T,r){var s=-1,n=e.length;for(t||(t=sG),r||(r=[]);++s<n;){var R=e[s];E>0&&t(R)?E>1?wo(R,E-1,t,T,r):rG(r,R):T||(r[r.length]=R)}return r}var nG=wo,RG=nG;function AG(e){var E=e==null?0:e.length;return E?RG(e,1):[]}var oG=AG,iG=oG,SG=to,OG=Ro;function IG(e){return OG(SG(e,void 0,iG),e+"")}var aG=IG,NG=Go,lG=jU,_G=qh,CG=as,cG=_t,LG=zh,uG=aG,pG=yo,fG=1,PG=2,DG=4,dG=uG(function(e,E){var t={};if(e==null)return t;var T=!1;E=NG(E,function(s){return s=CG(s,e),T||(T=s.length>1),s}),cG(e,pG(e),t),T&&(t=lG(t,fG|PG|DG,LG));for(var r=E.length;r--;)_G(t,E[r]);return t}),MG=dG;const UG=fT(MG),hG={class:"break-all w-full border-separate border-spacing-1"},GG={key:0},gG=["textContent"],mG=["textContent"],Dt=me({__name:"KeyValueTable",props:{keyLabel:{},valueLabel:{}},setup(e){const E=e;return(t,T)=>(H(),X("table",hG,[E.keyLabel||E.valueLabel?(H(),X("tr",GG,[I("th",{textContent:ne(E.keyLabel),class:"bg-amber-50 w-40 px-3 py-1"},null,8,gG),I("th",{textContent:ne(E.valueLabel),class:"bg-amber-50 px-3 py-1"},null,8,mG)])):ie("",!0),$t(t.$slots,"default")]))}}),HG=["textContent"],yG={class:"px-3 py-1"},qe=me({__name:"Row",props:{label:{}},setup(e){const E=e;return(t,T)=>(H(),X("tr",null,[I("td",{textContent:ne(E.label),class:"w-40 font-medium bg-stone-50 px-3 py-1"},null,8,HG),I("td",yG,[$t(t.$slots,"default")])]))}}),bG={class:"font-medium"},BG={key:0},_R=me({__name:"Foldable",props:{label:{},isOpen:{type:Boolean,default:!1}},setup(e){const E=e,t=ME({isOpen:E.isOpen});return(T,r)=>(H(),X("div",null,[I("div",null,[I("button",{class:"flex items-center space-x-1",onClick:r[0]||(r[0]=s=>t.isOpen=!t.isOpen)},[K(Re(HA),{class:$e(["size-4",{"-rotate-90":!t.isOpen}])},null,8,["class"]),I("span",bG,ne(E.label),1)])]),t.isOpen?(H(),X("div",BG,[$t(T.$slots,"default")])):ie("",!0)]))}}),FG={class:"flex"},vG={class:"w-1/2"},YG=I("h2",{class:"mt-0.5 mb-2 px-2 py-1 bg-stone-300 text-black tracking-wide text-xs uppercase font-bold rounded"}," HTTP Request ",-1),VG=I("div",{class:"py-3 text-right italic text-sm text-stone-500"},[be(" What else would like to see here? "),I("a",{target:"_blank",class:"underline font-bold",href:"https://github.com/julienbourdeau/debugbar/discussions"},"Tell me!")],-1),xG={class:"w-1/2"},wG=I("h2",{class:"mt-0.5 mb-2 px-2 py-1 bg-stone-300 text-black tracking-wide text-xs uppercase font-bold rounded"}," Routing ",-1),WG=I("h2",{class:"mt-0.5 mb-2 px-2 py-1 bg-stone-300 text-black tracking-wide text-xs uppercase font-bold rounded"}," HTTP Response ",-1),XG={key:0},$G=I("div",{class:"py-3 text-sm text-stone-500"},[be(" The response was not captured. "),I("a",{target:"_blank",class:"underline font-bold",href:"https://debugbar.dev/docs/known-limitations/"},"Learn more")],-1),KG=[$G],JG={key:1},kG=me({__name:"RequestPanel",props:{request:{}},setup(e){return(E,t)=>{const T=sE("highlightjs");return H(),X("div",FG,[I("div",vG,[K(IE,null,{default:oe(()=>[YG,K(Dt,null,{default:oe(()=>[K(qe,{label:"Method"},{default:oe(()=>[be(ne(E.request.meta.method),1)]),_:1}),K(qe,{label:"URL"},{default:oe(()=>[be(ne(E.request.meta.path),1)]),_:1}),K(qe,{label:"Params"},{default:oe(()=>[K(T,{class:"text-sm",language:"json",code:JSON.stringify(Re(UG)(E.request.meta.params,["controller","action"]),null,2)},null,8,["code"])]),_:1}),K(qe,{label:"Header: Version"},{default:oe(()=>[be(ne(E.request.request.headers.Version),1)]),_:1}),K(qe,{label:"Header: Cache-Control"},{default:oe(()=>[be(ne(E.request.request.headers["Cache-Control"]),1)]),_:1})]),_:1}),K(_R,{class:"py-4",label:"All Headers"},{default:oe(()=>[K(Dt,null,{default:oe(()=>[(H(!0),X(ce,null,Je(E.request.request.headers,(r,s)=>(H(),Pe(qe,{key:s,label:s},{default:oe(()=>[be(ne(r),1)]),_:2},1032,["label"]))),128))]),_:1})]),_:1}),VG]),_:1})]),I("div",xG,[K(IE,null,{default:oe(()=>[wG,K(Dt,null,{default:oe(()=>[K(qe,{title:"Controller"},{default:oe(()=>[be(ne(E.request.meta.controller)+" > "+ne(E.request.meta.action),1)]),_:1})]),_:1})]),_:1}),K(IE,null,{default:oe(()=>{var r,s;return[WG,(r=E.request.response)!=null&&r.status?ie("",!0):(H(),X("div",XG,KG)),(s=E.request.response)!=null&&s.status?(H(),X("div",JG,[K(Dt,null,{default:oe(()=>[K(qe,{label:"Status"},{default:oe(()=>[be(ne(E.request.response.status),1)]),_:1}),K(qe,{label:"Body"},{default:oe(()=>[be(ne(E.request.response.body.substring(0,140)),1)]),_:1}),K(qe,{label:"Header: Content-Type"},{default:oe(()=>[be(ne(E.request.response.headers["Content-Type"]),1)]),_:1})]),_:1}),K(_R,{class:"py-4",label:"All Headers"},{default:oe(()=>[K(Dt,null,{default:oe(()=>[(H(!0),X(ce,null,Je(E.request.response.headers,(n,R)=>(H(),Pe(qe,{key:R,label:R},{default:oe(()=>[be(ne(n),1)]),_:2},1032,["label"]))),128))]),_:1})]),_:1})])):ie("",!0)]}),_:1})])])}}}),jG={class:"p-4 leading-8"},qG=me({__name:"JsonPanel",props:{currentRequest:{}},setup(e){const E=e;return(t,T)=>{const r=sE("highlightjs");return H(),X("div",jG,[K(r,{language:"json",code:JSON.stringify(E.currentRequest,null,2)},null,8,["code"])])}}}),QG={},ZG={class:"size-5","xmlns:dc":"http://purl.org/dc/elements/1.1/","xmlns:cc":"http://creativecommons.org/ns#","xmlns:rdf":"http://www.w3.org/1999/02/22-rdf-syntax-ns#","xmlns:svg":"http://www.w3.org/2000/svg",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink","xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd","xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape",version:"1.1",id:"Layer_1",width:"198.13",height:"197.58",viewBox:"0 0 198.13 197.58",overflow:"visible","enable-background":"new 0 0 198.13 197.58","xml:space":"preserve","inkscape:version":"0.48.0 r9654","sodipodi:docname":"Logo-Ruby.svg"},zG={id:"metadata3320"},eg=I("defs",{id:"defs3489"},[I("linearGradient",{id:"XMLID_17_-9",gradientUnits:"userSpaceOnUse",x1:"174.0737",y1:"215.5488",x2:"132.27631",y2:"141.7533"},[I("stop",{offset:"0",style:{"stop-color":"#fb7655"},id:"stop3272-4"}),I("stop",{offset:"0",style:{"stop-color":"#fb7655"},id:"stop3274-5"}),I("stop",{offset:"0.41",style:{"stop-color":"#e42b1e"},id:"stop3276-1"}),I("stop",{offset:"0.99",style:{"stop-color":"#990000"},id:"stop3278-0"}),I("stop",{offset:"1",style:{"stop-color":"#990000"},id:"stop3280-3"})]),I("linearGradient",{id:"XMLID_18_-7",gradientUnits:"userSpaceOnUse",x1:"194.895",y1:"153.5576",x2:"141.0276",y2:"117.4093"},[I("stop",{offset:"0",style:{"stop-color":"#871101"},id:"stop3285-8"}),I("stop",{offset:"0",style:{"stop-color":"#871101"},id:"stop3287-8"}),I("stop",{offset:"0.99",style:{"stop-color":"#911209"},id:"stop3289-6"}),I("stop",{offset:"1",style:{"stop-color":"#911209"},id:"stop3291-0"})]),I("linearGradient",{id:"XMLID_19_-4",gradientUnits:"userSpaceOnUse",x1:"151.79539",y1:"217.7852",x2:"97.929703",y2:"181.638"},[I("stop",{offset:"0",style:{"stop-color":"#871101"},id:"stop3296-6"}),I("stop",{offset:"0",style:{"stop-color":"#871101"},id:"stop3298-7"}),I("stop",{offset:"0.99",style:{"stop-color":"#911209"},id:"stop3300-6"}),I("stop",{offset:"1",style:{"stop-color":"#911209"},id:"stop3302-0"})]),I("linearGradient",{id:"XMLID_20_-9",gradientUnits:"userSpaceOnUse",x1:"38.696301",y1:"127.3906",x2:"47.046902",y2:"181.66141"},[I("stop",{offset:"0",style:{"stop-color":"#ffffff"},id:"stop3307-7"}),I("stop",{offset:"0",style:{"stop-color":"#ffffff"},id:"stop3309-5"}),I("stop",{offset:"0.23",style:{"stop-color":"#e57252"},id:"stop3311-9"}),I("stop",{offset:"0.46",style:{"stop-color":"#de3b20"},id:"stop3313-7"}),I("stop",{offset:"0.99",style:{"stop-color":"#a60003"},id:"stop3315-8"}),I("stop",{offset:"1",style:{"stop-color":"#a60003"},id:"stop3317-5"})]),I("linearGradient",{id:"XMLID_21_-3",gradientUnits:"userSpaceOnUse",x1:"96.132797",y1:"76.715302",x2:"99.209602",y2:"132.1021"},[I("stop",{offset:"0",style:{"stop-color":"#ffffff"},id:"stop3322-3"}),I("stop",{offset:"0",style:{"stop-color":"#ffffff"},id:"stop3324-8"}),I("stop",{offset:"0.23",style:{"stop-color":"#e4714e"},id:"stop3326-3"}),I("stop",{offset:"0.56",style:{"stop-color":"#be1a0d"},id:"stop3328-7"}),I("stop",{offset:"0.99",style:{"stop-color":"#a80d00"},id:"stop3330-9"}),I("stop",{offset:"1",style:{"stop-color":"#a80d00"},id:"stop3332-3"})]),I("linearGradient",{id:"XMLID_22_-7",gradientUnits:"userSpaceOnUse",x1:"147.103",y1:"25.521",x2:"156.3141",y2:"65.216202"},[I("stop",{offset:"0",style:{"stop-color":"#ffffff"},id:"stop3337-8"}),I("stop",{offset:"0",style:{"stop-color":"#ffffff"},id:"stop3339-7"}),I("stop",{offset:"0.18",style:{"stop-color":"#e46342"},id:"stop3341-4"}),I("stop",{offset:"0.4",style:{"stop-color":"#c82410"},id:"stop3343-1"}),I("stop",{offset:"0.99",style:{"stop-color":"#a80d00"},id:"stop3345-9"}),I("stop",{offset:"1",style:{"stop-color":"#a80d00"},id:"stop3347-0"})]),I("linearGradient",{id:"XMLID_23_-9",gradientUnits:"userSpaceOnUse",x1:"118.9761",y1:"11.5415",x2:"158.66859",y2:"-8.3048"},[I("stop",{offset:"0",style:{"stop-color":"#ffffff"},id:"stop3352-8"}),I("stop",{offset:"0",style:{"stop-color":"#ffffff"},id:"stop3354-8"}),I("stop",{offset:"0.54",style:{"stop-color":"#c81f11"},id:"stop3356-5"}),I("stop",{offset:"0.99",style:{"stop-color":"#bf0905"},id:"stop3358-8"}),I("stop",{offset:"1",style:{"stop-color":"#bf0905"},id:"stop3360-4"})]),I("linearGradient",{id:"XMLID_24_-3",gradientUnits:"userSpaceOnUse",x1:"3.9033",y1:"113.5547",x2:"7.1701999",y2:"146.2628"},[I("stop",{offset:"0",style:{"stop-color":"#ffffff"},id:"stop3365-7"}),I("stop",{offset:"0",style:{"stop-color":"#ffffff"},id:"stop3367-1"}),I("stop",{offset:"0.31",style:{"stop-color":"#de4024"},id:"stop3369-3"}),I("stop",{offset:"0.99",style:{"stop-color":"#bf190b"},id:"stop3371-8"}),I("stop",{offset:"1",style:{"stop-color":"#bf190b"},id:"stop3373-0"})]),I("linearGradient",{id:"XMLID_25_-9",gradientUnits:"userSpaceOnUse",x1:"-18.5557",y1:"155.10451",x2:"135.0152",y2:"-2.8092999"},[I("stop",{offset:"0",style:{"stop-color":"#bd0012"},id:"stop3380-7"}),I("stop",{offset:"0",style:{"stop-color":"#bd0012"},id:"stop3382-9"}),I("stop",{offset:"0.07",style:{"stop-color":"#ffffff"},id:"stop3384-9"}),I("stop",{offset:"0.17",style:{"stop-color":"#ffffff"},id:"stop3386-3"}),I("stop",{offset:"0.27",style:{"stop-color":"#c82f1c"},id:"stop3388-2"}),I("stop",{offset:"0.33",style:{"stop-color":"#820c01"},id:"stop3390-4"}),I("stop",{offset:"0.46",style:{"stop-color":"#a31601"},id:"stop3392-3"}),I("stop",{offset:"0.72",style:{"stop-color":"#b31301"},id:"stop3394-7"}),I("stop",{offset:"0.99",style:{"stop-color":"#e82609"},id:"stop3396-1"}),I("stop",{offset:"1",style:{"stop-color":"#e82609"},id:"stop3398-2"})]),I("linearGradient",{id:"XMLID_26_-2",gradientUnits:"userSpaceOnUse",x1:"99.074699",y1:"171.0332",x2:"52.817699",y2:"159.61659"},[I("stop",{offset:"0",style:{"stop-color":"#8c0c01"},id:"stop3403-0"}),I("stop",{offset:"0",style:{"stop-color":"#8c0c01"},id:"stop3405-2"}),I("stop",{offset:"0.54",style:{"stop-color":"#990c00"},id:"stop3407-1"}),I("stop",{offset:"0.99",style:{"stop-color":"#a80d0e"},id:"stop3409-7"}),I("stop",{offset:"1",style:{"stop-color":"#a80d0e"},id:"stop3411-5"})]),I("linearGradient",{id:"XMLID_27_-1",gradientUnits:"userSpaceOnUse",x1:"178.52589",y1:"115.5146",x2:"137.43269",y2:"78.683998"},[I("stop",{offset:"0",style:{"stop-color":"#7e110b"},id:"stop3416-7"}),I("stop",{offset:"0",style:{"stop-color":"#7e110b"},id:"stop3418-4"}),I("stop",{offset:"0.99",style:{"stop-color":"#9e0c00"},id:"stop3420-1"}),I("stop",{offset:"1",style:{"stop-color":"#9e0c00"},id:"stop3422-7"})]),I("linearGradient",{id:"XMLID_28_-1",gradientUnits:"userSpaceOnUse",x1:"193.6235",y1:"47.937",x2:"173.15421",y2:"26.053801"},[I("stop",{offset:"0",style:{"stop-color":"#79130d"},id:"stop3427-1"}),I("stop",{offset:"0",style:{"stop-color":"#79130d"},id:"stop3429-1"}),I("stop",{offset:"0.99",style:{"stop-color":"#9e120b"},id:"stop3431-7"}),I("stop",{offset:"1",style:{"stop-color":"#9e120b"},id:"stop3433-0"})]),I("radialGradient",{id:"XMLID_29_-4",cx:"143.8315",cy:"79.388199",r:"50.357601",gradientUnits:"userSpaceOnUse"},[I("stop",{offset:"0",style:{"stop-color":"#a80d00"},id:"stop3440-0"}),I("stop",{offset:"0",style:{"stop-color":"#a80d00"},id:"stop3442-8"}),I("stop",{offset:"0.99",style:{"stop-color":"#7e0e08"},id:"stop3444-5"}),I("stop",{offset:"1",style:{"stop-color":"#7e0e08"},id:"stop3446-1"})]),I("radialGradient",{id:"XMLID_30_-6",cx:"74.0923",cy:"145.75101",r:"66.943703",gradientUnits:"userSpaceOnUse"},[I("stop",{offset:"0",style:{"stop-color":"#a30c00"},id:"stop3451-6"}),I("stop",{offset:"0",style:{"stop-color":"#a30c00"},id:"stop3453-2"}),I("stop",{offset:"0.99",style:{"stop-color":"#800e08"},id:"stop3455-1"}),I("stop",{offset:"1",style:{"stop-color":"#800e08"},id:"stop3457-9"})]),I("linearGradient",{id:"XMLID_31_-6",gradientUnits:"userSpaceOnUse",x1:"26.669901",y1:"197.33591",x2:"9.9886999",y2:"140.742"},[I("stop",{offset:"0",style:{"stop-color":"#8b2114"},id:"stop3462-4"}),I("stop",{offset:"0",style:{"stop-color":"#8b2114"},id:"stop3464-8"}),I("stop",{offset:"0.43",style:{"stop-color":"#9e100a"},id:"stop3466-0"}),I("stop",{offset:"0.99",style:{"stop-color":"#b3100c"},id:"stop3468-8"}),I("stop",{offset:"1",style:{"stop-color":"#b3100c"},id:"stop3470-1"})]),I("linearGradient",{id:"XMLID_32_-0",gradientUnits:"userSpaceOnUse",x1:"154.6411",y1:"9.7979002",x2:"192.039",y2:"26.305901"},[I("stop",{offset:"0",style:{"stop-color":"#b31000"},id:"stop3475-2"}),I("stop",{offset:"0",style:{"stop-color":"#b31000"},id:"stop3477-2"}),I("stop",{offset:"0.44",style:{"stop-color":"#910f08"},id:"stop3479-9"}),I("stop",{offset:"0.99",style:{"stop-color":"#791c12"},id:"stop3481-7"}),I("stop",{offset:"1",style:{"stop-color":"#791c12"},id:"stop3483-5"})]),I("linearGradient",{y2:"141.7533",x2:"132.27631",y1:"215.5488",x1:"174.0737",gradientUnits:"userSpaceOnUse",id:"linearGradient3448","xlink:href":"#XMLID_17_-9","inkscape:collect":"always"})],-1),Eg=MO('<linearGradient id="XMLID_17_" gradientUnits="userSpaceOnUse" x1="174.0737" y1="215.5488" x2="132.2763" y2="141.7533"><stop offset="0" style="stop-color:#fb7655;" id="stop3272"></stop><stop offset="0" style="stop-color:#fb7655;" id="stop3274"></stop><stop offset="0.41" style="stop-color:#e42b1e;" id="stop3276"></stop><stop offset="0.99" style="stop-color:#990000;" id="stop3278"></stop><stop offset="1" style="stop-color:#990000;" id="stop3280"></stop></linearGradient><linearGradient id="XMLID_18_" gradientUnits="userSpaceOnUse" x1="194.895" y1="153.5576" x2="141.0276" y2="117.4093"><stop offset="0" style="stop-color:#871101;" id="stop3285"></stop><stop offset="0" style="stop-color:#871101;" id="stop3287"></stop><stop offset="0.99" style="stop-color:#911209;" id="stop3289"></stop><stop offset="1" style="stop-color:#911209;" id="stop3291"></stop></linearGradient><linearGradient id="XMLID_19_" gradientUnits="userSpaceOnUse" x1="151.7954" y1="217.7852" x2="97.9297" y2="181.638"><stop offset="0" style="stop-color:#871101;" id="stop3296"></stop><stop offset="0" style="stop-color:#871101;" id="stop3298"></stop><stop offset="0.99" style="stop-color:#911209;" id="stop3300"></stop><stop offset="1" style="stop-color:#911209;" id="stop3302"></stop></linearGradient><linearGradient id="XMLID_20_" gradientUnits="userSpaceOnUse" x1="38.6963" y1="127.3906" x2="47.0469" y2="181.6614"><stop offset="0" style="stop-color:#ffffff;" id="stop3307"></stop><stop offset="0" style="stop-color:#ffffff;" id="stop3309"></stop><stop offset="0.23" style="stop-color:#e57252;" id="stop3311"></stop><stop offset="0.46" style="stop-color:#de3b20;" id="stop3313"></stop><stop offset="0.99" style="stop-color:#a60003;" id="stop3315"></stop><stop offset="1" style="stop-color:#a60003;" id="stop3317"></stop></linearGradient><linearGradient id="XMLID_21_" gradientUnits="userSpaceOnUse" x1="96.1328" y1="76.7153" x2="99.2096" y2="132.1021"><stop offset="0" style="stop-color:#ffffff;" id="stop3322"></stop><stop offset="0" style="stop-color:#ffffff;" id="stop3324"></stop><stop offset="0.23" style="stop-color:#e4714e;" id="stop3326"></stop><stop offset="0.56" style="stop-color:#be1a0d;" id="stop3328"></stop><stop offset="0.99" style="stop-color:#a80d00;" id="stop3330"></stop><stop offset="1" style="stop-color:#a80d00;" id="stop3332"></stop></linearGradient><linearGradient id="XMLID_22_" gradientUnits="userSpaceOnUse" x1="147.103" y1="25.521" x2="156.3141" y2="65.2162"><stop offset="0" style="stop-color:#ffffff;" id="stop3337"></stop><stop offset="0" style="stop-color:#ffffff;" id="stop3339"></stop><stop offset="0.18" style="stop-color:#e46342;" id="stop3341"></stop><stop offset="0.4" style="stop-color:#c82410;" id="stop3343"></stop><stop offset="0.99" style="stop-color:#a80d00;" id="stop3345"></stop><stop offset="1" style="stop-color:#a80d00;" id="stop3347"></stop></linearGradient><linearGradient id="XMLID_23_" gradientUnits="userSpaceOnUse" x1="118.9761" y1="11.5415" x2="158.6686" y2="-8.3048"><stop offset="0" style="stop-color:#ffffff;" id="stop3352"></stop><stop offset="0" style="stop-color:#ffffff;" id="stop3354"></stop><stop offset="0.54" style="stop-color:#c81f11;" id="stop3356"></stop><stop offset="0.99" style="stop-color:#bf0905;" id="stop3358"></stop><stop offset="1" style="stop-color:#bf0905;" id="stop3360"></stop></linearGradient><linearGradient id="XMLID_24_" gradientUnits="userSpaceOnUse" x1="3.9033" y1="113.5547" x2="7.1702" y2="146.2628"><stop offset="0" style="stop-color:#ffffff;" id="stop3365"></stop><stop offset="0" style="stop-color:#ffffff;" id="stop3367"></stop><stop offset="0.31" style="stop-color:#de4024;" id="stop3369"></stop><stop offset="0.99" style="stop-color:#bf190b;" id="stop3371"></stop><stop offset="1" style="stop-color:#bf190b;" id="stop3373"></stop></linearGradient><linearGradient id="XMLID_25_" gradientUnits="userSpaceOnUse" x1="-18.5557" y1="155.1045" x2="135.0152" y2="-2.8093"><stop offset="0" style="stop-color:#bd0012;" id="stop3380"></stop><stop offset="0" style="stop-color:#bd0012;" id="stop3382"></stop><stop offset="0.07" style="stop-color:#ffffff;" id="stop3384"></stop><stop offset="0.17" style="stop-color:#ffffff;" id="stop3386"></stop><stop offset="0.27" style="stop-color:#c82f1c;" id="stop3388"></stop><stop offset="0.33" style="stop-color:#820c01;" id="stop3390"></stop><stop offset="0.46" style="stop-color:#a31601;" id="stop3392"></stop><stop offset="0.72" style="stop-color:#b31301;" id="stop3394"></stop><stop offset="0.99" style="stop-color:#e82609;" id="stop3396"></stop><stop offset="1" style="stop-color:#e82609;" id="stop3398"></stop></linearGradient><linearGradient id="XMLID_26_" gradientUnits="userSpaceOnUse" x1="99.0747" y1="171.0332" x2="52.8177" y2="159.6166"><stop offset="0" style="stop-color:#8c0c01;" id="stop3403"></stop><stop offset="0" style="stop-color:#8c0c01;" id="stop3405"></stop><stop offset="0.54" style="stop-color:#990c00;" id="stop3407"></stop><stop offset="0.99" style="stop-color:#a80d0e;" id="stop3409"></stop><stop offset="1" style="stop-color:#a80d0e;" id="stop3411"></stop></linearGradient><linearGradient id="XMLID_27_" gradientUnits="userSpaceOnUse" x1="178.5259" y1="115.5146" x2="137.4327" y2="78.684"><stop offset="0" style="stop-color:#7e110b;" id="stop3416"></stop><stop offset="0" style="stop-color:#7e110b;" id="stop3418"></stop><stop offset="0.99" style="stop-color:#9e0c00;" id="stop3420"></stop><stop offset="1" style="stop-color:#9e0c00;" id="stop3422"></stop></linearGradient><linearGradient id="XMLID_28_" gradientUnits="userSpaceOnUse" x1="193.6235" y1="47.937" x2="173.1542" y2="26.0538"><stop offset="0" style="stop-color:#79130d;" id="stop3427"></stop><stop offset="0" style="stop-color:#79130d;" id="stop3429"></stop><stop offset="0.99" style="stop-color:#9e120b;" id="stop3431"></stop><stop offset="1" style="stop-color:#9e120b;" id="stop3433"></stop></linearGradient><radialGradient id="XMLID_29_" cx="143.8315" cy="79.3882" r="50.3576" gradientUnits="userSpaceOnUse"><stop offset="0" style="stop-color:#a80d00;" id="stop3440"></stop><stop offset="0" style="stop-color:#a80d00;" id="stop3442"></stop><stop offset="0.99" style="stop-color:#7e0e08;" id="stop3444"></stop><stop offset="1" style="stop-color:#7e0e08;" id="stop3446"></stop></radialGradient><radialGradient id="XMLID_30_" cx="74.0923" cy="145.751" r="66.9437" gradientUnits="userSpaceOnUse"><stop offset="0" style="stop-color:#a30c00;" id="stop3451"></stop><stop offset="0" style="stop-color:#a30c00;" id="stop3453"></stop><stop offset="0.99" style="stop-color:#800e08;" id="stop3455"></stop><stop offset="1" style="stop-color:#800e08;" id="stop3457"></stop></radialGradient><linearGradient id="XMLID_31_" gradientUnits="userSpaceOnUse" x1="26.6699" y1="197.3359" x2="9.9887" y2="140.742"><stop offset="0" style="stop-color:#8b2114;" id="stop3462"></stop><stop offset="0" style="stop-color:#8b2114;" id="stop3464"></stop><stop offset="0.43" style="stop-color:#9e100a;" id="stop3466"></stop><stop offset="0.99" style="stop-color:#b3100c;" id="stop3468"></stop><stop offset="1" style="stop-color:#b3100c;" id="stop3470"></stop></linearGradient><linearGradient id="XMLID_32_" gradientUnits="userSpaceOnUse" x1="154.6411" y1="9.7979" x2="192.039" y2="26.3059"><stop offset="0" style="stop-color:#b31000;" id="stop3475"></stop><stop offset="0" style="stop-color:#b31000;" id="stop3477"></stop><stop offset="0.44" style="stop-color:#910f08;" id="stop3479"></stop><stop offset="0.99" style="stop-color:#791c12;" id="stop3481"></stop><stop offset="1" style="stop-color:#791c12;" id="stop3483"></stop></linearGradient><polygon style="fill:url(#linearGradient3448);fill-rule:evenodd;" clip-rule="evenodd" points="153.5,130.41 40.38,197.58 186.849,187.641 198.13,39.95 " id="polygon3282"></polygon><polygon style="fill:url(#XMLID_18_-7);fill-rule:evenodd;" clip-rule="evenodd" points="187.089,187.54 174.5,100.65 140.209,145.93 " id="polygon3293"></polygon><polygon style="fill:url(#XMLID_19_-4);fill-rule:evenodd;" clip-rule="evenodd" points="187.259,187.54 95.03,180.3 40.87,197.391 " id="polygon3304"></polygon><polygon style="fill:url(#XMLID_20_-9);fill-rule:evenodd;" clip-rule="evenodd" points="41,197.41 64.04,121.93 13.34,132.771 " id="polygon3319"></polygon><polygon style="fill:url(#XMLID_21_-3);fill-rule:evenodd;" clip-rule="evenodd" points="140.2,146.18 119,63.14 58.33,120.01 " id="polygon3334"></polygon><polygon style="fill:url(#XMLID_22_-7);fill-rule:evenodd;" clip-rule="evenodd" points="193.32,64.31 135.97,17.47 120,69.1 " id="polygon3349"></polygon><polygon style="fill:url(#XMLID_23_-9);fill-rule:evenodd;" clip-rule="evenodd" points="166.5,0.77 132.77,19.41 111.49,0.52 " id="polygon3362"></polygon><polygon style="fill:url(#XMLID_24_-3);fill-rule:evenodd;" clip-rule="evenodd" points="0,158.09 14.13,132.32 2.7,101.62 " id="polygon3375"></polygon>',24),tg=I("path",{style:{fill:"#ffffff","fill-rule":"evenodd"},"inkscape:connector-curvature":"0","clip-rule":"evenodd",d:"m 1.94,100.65 11.5,32.62 49.97,-11.211 57.05,-53.02 L 136.56,17.9 111.209,0 68.109,16.13 C 54.53,28.76 28.18,53.75 27.23,54.22 26.29,54.7 9.83,85.81 1.94,100.65 z",id:"path3377"},null,-1),Tg=I("path",{style:{fill:"url(#XMLID_25_-9)","fill-rule":"evenodd"},"inkscape:connector-curvature":"0","clip-rule":"evenodd",d:"m 42.32,42.05 c 29.43,-29.18 67.37,-46.42 81.93,-31.73 14.551,14.69 -0.88,50.39 -30.31,79.56 -29.43,29.17 -66.9,47.36 -81.45,32.67 -14.56,-14.68 0.4,-51.33 29.83,-80.5 z",id:"path3400"},null,-1),rg=I("path",{style:{fill:"url(#XMLID_26_-2)","fill-rule":"evenodd"},"inkscape:connector-curvature":"0","clip-rule":"evenodd",d:"m 41,197.38 22.86,-75.72 75.92,24.39 C 112.33,171.79 81.8,193.55 41,197.38 z",id:"path3413"},null,-1),sg=I("path",{style:{fill:"url(#XMLID_27_-1)","fill-rule":"evenodd"},"inkscape:connector-curvature":"0","clip-rule":"evenodd",d:"m 120.56,68.89 19.49,77.2 C 162.98,121.98 183.56,96.06 193.639,64 l -73.079,4.89 z",id:"path3424"},null,-1),ng=I("path",{style:{fill:"url(#XMLID_28_-1)","fill-rule":"evenodd"},"inkscape:connector-curvature":"0","clip-rule":"evenodd",d:"m 193.44,64.39 c 7.8,-23.54 9.6,-57.31 -27.181,-63.58 l -30.18,16.67 57.361,46.91 z",id:"path3435"},null,-1),Rg=I("path",{style:{fill:"#9e1209","fill-rule":"evenodd"},"inkscape:connector-curvature":"0","clip-rule":"evenodd",d:"m 0,157.75 c 1.08,38.851 29.11,39.43 41.05,39.771 L 13.47,133.11 0,157.75 z",id:"path3437"},null,-1),Ag=I("path",{style:{fill:"url(#XMLID_29_-4)","fill-rule":"evenodd"},"inkscape:connector-curvature":"0","clip-rule":"evenodd",d:"m 120.669,69.01 c 17.62,10.83 53.131,32.58 53.851,32.98 1.119,0.63 15.31,-23.93 18.53,-37.81 l -72.381,4.83 z",id:"path3448"},null,-1),og=I("path",{style:{fill:"url(#XMLID_30_-6)","fill-rule":"evenodd"},"inkscape:connector-curvature":"0","clip-rule":"evenodd",d:"m 63.83,121.66 30.56,58.96 c 18.07,-9.8 32.22,-21.74 45.18,-34.53 L 63.83,121.66 z",id:"path3459"},null,-1),ig=I("path",{style:{fill:"url(#XMLID_31_-6)","fill-rule":"evenodd"},"inkscape:connector-curvature":"0","clip-rule":"evenodd",d:"m 13.35,133.19 -4.33,51.56 c 8.17,11.16 19.41,12.13 31.2,11.26 -8.53,-21.23 -25.57,-63.68 -26.87,-62.82 z",id:"path3472"},null,-1),Sg=I("path",{style:{fill:"url(#XMLID_32_-0)","fill-rule":"evenodd"},"inkscape:connector-curvature":"0","clip-rule":"evenodd",d:"m 135.9,17.61 60.71,8.52 C 193.37,12.4 183.42,3.54 166.46,0.77 L 135.9,17.61 z",id:"path3485"},null,-1);function Og(e,E){const t=sE("dc:format"),T=sE("dc:type"),r=sE("cc:Work"),s=sE("rdf:RDF"),n=sE("sodipodi:namedview");return H(),X("svg",ZG,[I("metadata",zG,[K(s,null,{default:oe(()=>[K(r,{"rdf:about":""},{default:oe(()=>[K(t,null,{default:oe(()=>[be("image/svg+xml")]),_:1}),K(T,{"rdf:resource":"http://purl.org/dc/dcmitype/StillImage"})]),_:1})]),_:1})]),eg,K(n,{pagecolor:"#ffffff",bordercolor:"#666666",borderopacity:"1",objecttolerance:"10",gridtolerance:"10",guidetolerance:"10","inkscape:pageopacity":"0","inkscape:pageshadow":"2","inkscape:window-width":"1036","inkscape:window-height":"1124",id:"namedview3487",showgrid:"false","inkscape:zoom":"1.3412289","inkscape:cx":"99.065005","inkscape:cy":"98.790004","inkscape:window-x":"882","inkscape:window-y":"24","inkscape:window-maximized":"0","inkscape:current-layer":"Layer_1"}),Eg,tg,Tg,rg,sg,ng,Rg,Ag,og,ig,Sg])}const Ig=yA(QG,[["render",Og]]),ag=I("div",{class:"p-1 pt-1.5"},[I("img",{class:"h-5",src:PI,alt:"Logo"})],-1),Ng=[ag],lg={key:1,class:"z-[9999] fixed left-0 bottom-0 w-full"},_g=I("div",{class:"h-0.5 bg-red-700 cursor-row-resize"},null,-1),Cg={class:"flex items-center justify-between bg-stone-100 border-b border-stone-200"},cg=I("div",{class:"px-5 py-1.5 italic"},"No request yet",-1),Lg={class:"px-3"},ug={key:2,class:"z-[9999] fixed left-0 bottom-0 w-full"},pg={class:"flex"},fg={class:"p-1 pt-1.5"},Pg={class:"flex items-center space-x-2.5 pr-1"},Dg={class:"text-sm text-stone-600 font-medium tracking-wide"},dg={key:1,class:"text-sm font-bold text-red-600 bg-red-100 px-1 rounded"},Mg=["selected","textContent","value"],Ug={class:"flex items-center pl-2 space-x-2"},hg=["disabled"],Gg=me({__name:"Debugbar",setup(e){let E=FC(),t=aD();const T=uE(null),r=ME({activeTab:"",minimized:!1,isResizing:!1,height:t.config.height}),s=nE(()=>r.activeTab!=""),n=nE(()=>!1),R=nE(()=>{var O,a;return((O=E.currentRequest)==null?void 0:O.meta.params.controller)+"#"+((a=E.currentRequest)==null?void 0:a.meta.params.action)});let o;t.config.mode=="ws"?o=DI.createConsumer(t.config.actionCableUrl).subscriptions.create({channel:t.config.channelName},{connected(){console.log("🟢 Connected to channel"),o.send({ids:[]})},disconnected(){console.log("🔴 Disconnected from channel")},received(O){if(O.length==0)return;const a=E.addRequests(O);s.value||E.setCurrentRequestById(a[a.length-1]),setTimeout(()=>{o.send({ids:a})},50)}}):(console.log('Using debugbar in "offline mode", ideal for demoing with fixtures.'),o={send:O=>{console.log("Ignoring `send` call",O)}});const A=()=>{console.log("Clearing requests"),r.activeTab="",E.clearRequests(),o.send({clear:!0})};Wr(()=>{window.onresize=function(){window.innerHeight<r.height&&(r.height=window.innerHeight-T.value.clientHeight)},document.onmousemove=function(O){r.isResizing&&(r.height=window.innerHeight-O.clientY-T.value.clientHeight)},document.onmouseup=function(O){r.isResizing=!1}});const i=O=>{r.activeTab==O?r.activeTab="":(window.innerHeight<r.height&&(r.height=window.innerHeight-T.value.clientHeight*2),r.activeTab=O)};return(O,a)=>{var P,U,b,x,$,k;return H(),X(ce,null,[r.minimized?(H(),X("div",{key:0,onClick:a[0]||(a[0]=V=>r.minimized=!1),class:"z-[9999] fixed left-0 bottom-0 bg-transparent cursor-pointer"},Ng)):ie("",!0),!r.minimized&&Re(E).currentRequest==null?(H(),X("div",lg,[_g,I("div",Cg,[cg,I("div",Lg,[I("button",{onClick:a[1]||(a[1]=V=>r.minimized=!0),title:"Hide in the corner"},[K(Re(Tn),{class:"size-4"})])])])])):ie("",!0),!r.minimized&&Re(E).currentRequest?(H(),X("div",ug,[I("div",{id:"draggable-bar",onMousedown:a[2]||(a[2]=V=>r.isResizing=!0),class:"h-0.5 bg-red-700 cursor-row-resize"},null,32),I("div",{id:"debubgbar-header",ref_key:"header",ref:T,class:"flex px-1 items-center justify-between bg-stone-100 border-b-2 border-stone-300"},[I("div",null,[I("div",pg,[I("div",fg,[K(Ig)]),(H(!0),X(ce,null,Je(Re(E).currentRequest.dataForTabs,(V,v)=>(H(),Pe(GI,{key:"k",label:V.label,count:V==null?void 0:V.count,"is-active":v===r.activeTab,disabled:V.count==0,onClick:re=>i(v)},{default:oe(()=>[be(ne(V.label),1)]),_:2},1032,["label","count","is-active","disabled","onClick"]))),128)),n.value?(H(),X("button",{key:0,onClick:a[3]||(a[3]=V=>i("debug")),class:$e(["px-3 py-1.5 text-stone-600",{"bg-stone-300":r.activeTab=="debug"}])},[K(Re(dI),{class:"size-4"})],2)):ie("",!0)])]),I("div",Pg,[I("div",{onClick:a[4]||(a[4]=V=>i("request")),class:"flex space-x-2 cursor-pointer"},[I("span",Dg,ne(R.value),1),Re(E).currentRequest.meta.duration<1e3?(H(),X("span",{key:0,class:$e(["text-sm font-bold",{"text-orange-600":Re(E).currentRequest.meta.duration>=800}])},ne(Re(E).currentRequest.meta.duration.toFixed(1))+"ms",3)):ie("",!0),Re(E).currentRequest.meta.duration>=1e3?(H(),X("span",dg,ne((Re(E).currentRequest.meta.duration/1e3).toFixed(2))+"s",1)):ie("",!0),I("span",{class:$e(["px-1 py-0.5 rounded text-xs",{"bg-green-600 text-white":Re(E).currentRequest.meta.status<300,"bg-amber-600 text-white":Re(E).currentRequest.meta.status>=400&&Re(E).currentRequest.meta.status<500,"bg-red-600 text-white":Re(E).currentRequest.meta.status>=500}])},ne(Re(E).currentRequest.meta.status),3)]),I("select",{class:"px-2 py-1.5 bg-white border border-stone-200 rounded w-[330px] text-sm",name:"current_request_id",onChange:a[5]||(a[5]=V=>{const v=V.target;Re(E).setCurrentRequestById(v.value)})},[(H(!0),X(ce,null,Je(Re(E).requests,V=>(H(),X("option",{selected:Re(E).currentRequest.id==V.id,textContent:ne(V.pathWithVerb),value:V.id},null,8,Mg))),256))],32),I("button",{onClick:A,title:"Clear all requests (frontend and backend)"},[K(Re(MI),{class:"size-4"})]),I("div",Ug,[I("button",{onClick:a[6]||(a[6]=V=>r.minimized=!0),title:"Hide in the corner"},[K(Re(Tn),{class:"size-4"})]),I("button",{disabled:!s.value,onClick:a[7]||(a[7]=V=>r.activeTab=""),title:"Close"},[K(Re(UI),{class:"size-4"})],8,hg)])])],512),r.activeTab!=""?(H(),X("div",{key:0,ref:"body",id:"debugbar-body",class:"bg-white overflow-scroll",style:hT(`height: ${r.height}px`)},[r.activeTab=="request"?(H(),Pe(kG,{key:0,request:Re(E).currentRequest},null,8,["request"])):ie("",!0),r.activeTab=="messages"?(H(),Pe(bC,{key:1,messages:(P=Re(E).currentRequest)==null?void 0:P.messages},null,8,["messages"])):ie("",!0),r.activeTab=="models"?(H(),Pe(wI,{key:2,models:(U=Re(E).currentRequest)==null?void 0:U.models,count:(b=Re(E).currentRequest)==null?void 0:b.modelsCount},null,8,["models","count"])):ie("",!0),r.activeTab=="queries"?(H(),Pe(sC,{key:3,"current-request":Re(E).currentRequest},null,8,["current-request"])):ie("",!0),r.activeTab=="jobs"?(H(),Pe(LC,{key:4,jobs:(x=Re(E).currentRequest)==null?void 0:x.jobs},null,8,["jobs"])):ie("",!0),r.activeTab=="cache"?(H(),Pe(DD,{key:5,cache:($=Re(E).currentRequest)==null?void 0:$.cache},null,8,["cache"])):ie("",!0),r.activeTab=="logs"?(H(),Pe(hC,{key:6,logs:(k=Re(E).currentRequest)==null?void 0:k.logs},null,8,["logs"])):ie("",!0),n.value&&r.activeTab=="debug"?(H(),Pe(qG,{key:7,"current-request":Re(E).currentRequest,class:"px-3 py-2"},null,8,["current-request"])):ie("",!0)],4)):ie("",!0)])):ie("",!0)],64)}}}),gg=`pre code.hljs{display:block;overflow-x:auto;padding:1em}code.hljs{padding:3px 5px}/*!
  Theme: GitHub
  Description: Light theme as seen on github.com
  Author: github.com
  Maintainer: @Hirse
  Updated: 2021-05-15

  Outdated base version: https://github.com/primer/github-syntax-light
  Current colors taken from GitHub's CSS
*/.hljs{color:#24292e;background:#fff}.hljs-doctag,.hljs-keyword,.hljs-meta .hljs-keyword,.hljs-template-tag,.hljs-template-variable,.hljs-type,.hljs-variable.language_{color:#d73a49}.hljs-title,.hljs-title.class_,.hljs-title.class_.inherited__,.hljs-title.function_{color:#6f42c1}.hljs-attr,.hljs-attribute,.hljs-literal,.hljs-meta,.hljs-number,.hljs-operator,.hljs-variable,.hljs-selector-attr,.hljs-selector-class,.hljs-selector-id{color:#005cc5}.hljs-regexp,.hljs-string,.hljs-meta .hljs-string{color:#032f62}.hljs-built_in,.hljs-symbol{color:#e36209}.hljs-comment,.hljs-code,.hljs-formula{color:#6a737d}.hljs-name,.hljs-quote,.hljs-selector-tag,.hljs-selector-pseudo{color:#22863a}.hljs-subst{color:#24292e}.hljs-section{color:#005cc5;font-weight:700}.hljs-bullet{color:#735c0f}.hljs-emphasis{color:#24292e;font-style:italic}.hljs-strong{color:#24292e;font-weight:700}.hljs-addition{color:#22863a;background-color:#f0fff4}.hljs-deletion{color:#b31d28;background-color:#ffeef0}/*! tailwindcss v3.4.0 | MIT License | https://tailwindcss.com
*/*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}:before,:after{--tw-content: ""}html,:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}*,:before,:after{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }pre,pre code.hljs{margin:0!important;width:100%;padding:0!important}.visible{visibility:visible}.fixed{position:fixed}.bottom-0{bottom:0}.left-0{left:0}.z-\\[9999\\]{z-index:9999}.mx-6{margin-left:1.5rem;margin-right:1.5rem}.mx-auto{margin-left:auto;margin-right:auto}.my-4{margin-top:1rem;margin-bottom:1rem}.mb-2{margin-bottom:.5rem}.ml-4{margin-left:1rem}.mt-0{margin-top:0}.mt-0\\.5{margin-top:.125rem}.mt-1{margin-top:.25rem}.mt-10{margin-top:2.5rem}.mt-16{margin-top:4rem}.mt-2{margin-top:.5rem}.mt-3{margin-top:.75rem}.mt-4{margin-top:1rem}.mt-6{margin-top:1.5rem}.mt-8{margin-top:2rem}.inline{display:inline}.flex{display:flex}.table{display:table}.hidden{display:none}.aspect-video{aspect-ratio:16 / 9}.size-4{width:1rem;height:1rem}.size-5{width:1.25rem;height:1.25rem}.h-0{height:0px}.h-0\\.5{height:.125rem}.h-5{height:1.25rem}.h-6{height:1.5rem}.w-1\\/2{width:50%}.w-16{width:4rem}.w-20{width:5rem}.w-24{width:6rem}.w-32{width:8rem}.w-36{width:9rem}.w-40{width:10rem}.w-5{width:1.25rem}.w-6{width:1.5rem}.w-\\[330px\\]{width:330px}.w-full{width:100%}.max-w-2xl{max-width:42rem}.max-w-3xl{max-width:48rem}.max-w-xl{max-width:36rem}.flex-none{flex:none}.border-separate{border-collapse:separate}.border-spacing-1{--tw-border-spacing-x: .25rem;--tw-border-spacing-y: .25rem;border-spacing:var(--tw-border-spacing-x) var(--tw-border-spacing-y)}.-rotate-90{--tw-rotate: -90deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.cursor-pointer{cursor:pointer}.cursor-row-resize{cursor:row-resize}.flex-col{flex-direction:column}.items-center{align-items:center}.justify-between{justify-content:space-between}.gap-x-2{-moz-column-gap:.5rem;column-gap:.5rem}.gap-x-3{-moz-column-gap:.75rem;column-gap:.75rem}.gap-x-4{-moz-column-gap:1rem;column-gap:1rem}.space-x-1>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.25rem * var(--tw-space-x-reverse));margin-left:calc(.25rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-2\\.5>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.625rem * var(--tw-space-x-reverse));margin-left:calc(.625rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-3>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.75rem * var(--tw-space-x-reverse));margin-left:calc(.75rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-8>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(2rem * var(--tw-space-x-reverse));margin-left:calc(2rem * calc(1 - var(--tw-space-x-reverse)))}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.25rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.25rem * var(--tw-space-y-reverse))}.space-y-3>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.75rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.75rem * var(--tw-space-y-reverse))}.space-y-8>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(2rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(2rem * var(--tw-space-y-reverse))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse: 0;border-top-width:calc(1px * calc(1 - var(--tw-divide-y-reverse)));border-bottom-width:calc(1px * var(--tw-divide-y-reverse))}.divide-stone-200>:not([hidden])~:not([hidden]){--tw-divide-opacity: 1;border-color:rgb(231 229 228 / var(--tw-divide-opacity))}.divide-stone-300>:not([hidden])~:not([hidden]){--tw-divide-opacity: 1;border-color:rgb(214 211 209 / var(--tw-divide-opacity))}.overflow-scroll{overflow:scroll}.whitespace-nowrap{white-space:nowrap}.break-all{word-break:break-all}.rounded{border-radius:.25rem}.rounded-full{border-radius:9999px}.rounded-sm{border-radius:.125rem}.rounded-xl{border-radius:.75rem}.border{border-width:1px}.border-0{border-width:0px}.border-b{border-bottom-width:1px}.border-b-2{border-bottom-width:2px}.border-l{border-left-width:1px}.border-indigo-600{--tw-border-opacity: 1;border-color:rgb(79 70 229 / var(--tw-border-opacity))}.border-stone-200{--tw-border-opacity: 1;border-color:rgb(231 229 228 / var(--tw-border-opacity))}.border-stone-300{--tw-border-opacity: 1;border-color:rgb(214 211 209 / var(--tw-border-opacity))}.\\!bg-amber-400{--tw-bg-opacity: 1 !important;background-color:rgb(251 191 36 / var(--tw-bg-opacity))!important}.\\!bg-emerald-500{--tw-bg-opacity: 1 !important;background-color:rgb(16 185 129 / var(--tw-bg-opacity))!important}.\\!bg-indigo-500{--tw-bg-opacity: 1 !important;background-color:rgb(99 102 241 / var(--tw-bg-opacity))!important}.\\!bg-red-400{--tw-bg-opacity: 1 !important;background-color:rgb(248 113 113 / var(--tw-bg-opacity))!important}.\\!bg-red-700{--tw-bg-opacity: 1 !important;background-color:rgb(185 28 28 / var(--tw-bg-opacity))!important}.bg-amber-400{--tw-bg-opacity: 1;background-color:rgb(251 191 36 / var(--tw-bg-opacity))}.bg-amber-50{--tw-bg-opacity: 1;background-color:rgb(255 251 235 / var(--tw-bg-opacity))}.bg-amber-600{--tw-bg-opacity: 1;background-color:rgb(217 119 6 / var(--tw-bg-opacity))}.bg-blue-500{--tw-bg-opacity: 1;background-color:rgb(59 130 246 / var(--tw-bg-opacity))}.bg-emerald-600{--tw-bg-opacity: 1;background-color:rgb(5 150 105 / var(--tw-bg-opacity))}.bg-fuchsia-500{--tw-bg-opacity: 1;background-color:rgb(217 70 239 / var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity: 1;background-color:rgb(249 250 251 / var(--tw-bg-opacity))}.bg-green-600{--tw-bg-opacity: 1;background-color:rgb(22 163 74 / var(--tw-bg-opacity))}.bg-red-100{--tw-bg-opacity: 1;background-color:rgb(254 226 226 / var(--tw-bg-opacity))}.bg-red-400{--tw-bg-opacity: 1;background-color:rgb(248 113 113 / var(--tw-bg-opacity))}.bg-red-600{--tw-bg-opacity: 1;background-color:rgb(220 38 38 / var(--tw-bg-opacity))}.bg-red-700{--tw-bg-opacity: 1;background-color:rgb(185 28 28 / var(--tw-bg-opacity))}.bg-sky-600{--tw-bg-opacity: 1;background-color:rgb(2 132 199 / var(--tw-bg-opacity))}.bg-stone-100{--tw-bg-opacity: 1;background-color:rgb(245 245 244 / var(--tw-bg-opacity))}.bg-stone-300{--tw-bg-opacity: 1;background-color:rgb(214 211 209 / var(--tw-bg-opacity))}.bg-stone-400{--tw-bg-opacity: 1;background-color:rgb(168 162 158 / var(--tw-bg-opacity))}.bg-stone-50{--tw-bg-opacity: 1;background-color:rgb(250 250 249 / var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-white{--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.object-cover{-o-object-fit:cover;object-fit:cover}.p-0{padding:0}.p-0\\.5{padding:.125rem}.p-1{padding:.25rem}.p-4{padding:1rem}.px-1{padding-left:.25rem;padding-right:.25rem}.px-1\\.5{padding-left:.375rem;padding-right:.375rem}.px-2{padding-left:.5rem;padding-right:.5rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-0{padding-top:0;padding-bottom:0}.py-0\\.5{padding-top:.125rem;padding-bottom:.125rem}.py-1{padding-top:.25rem;padding-bottom:.25rem}.py-1\\.5{padding-top:.375rem;padding-bottom:.375rem}.py-2{padding-top:.5rem;padding-bottom:.5rem}.py-3{padding-top:.75rem;padding-bottom:.75rem}.py-3\\.5{padding-top:.875rem;padding-bottom:.875rem}.py-32{padding-top:8rem;padding-bottom:8rem}.py-4{padding-top:1rem;padding-bottom:1rem}.pl-2{padding-left:.5rem}.pl-4{padding-left:1rem}.pl-9{padding-left:2.25rem}.pr-1{padding-right:.25rem}.pr-3{padding-right:.75rem}.pr-8{padding-right:2rem}.pt-1{padding-top:.25rem}.pt-1\\.5{padding-top:.375rem}.text-left{text-align:left}.text-center{text-align:center}.text-right{text-align:right}.font-mono{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}.text-2xl{font-size:1.5rem;line-height:2rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-base{font-size:1rem;line-height:1.5rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-xs{font-size:.75rem;line-height:1rem}.font-bold{font-weight:700}.font-medium{font-weight:500}.font-semibold{font-weight:600}.uppercase{text-transform:uppercase}.italic{font-style:italic}.leading-6{line-height:1.5rem}.leading-7{line-height:1.75rem}.leading-8{line-height:2rem}.tracking-tight{letter-spacing:-.025em}.tracking-wide{letter-spacing:.025em}.\\!text-white{--tw-text-opacity: 1 !important;color:rgb(255 255 255 / var(--tw-text-opacity))!important}.text-black{--tw-text-opacity: 1;color:rgb(0 0 0 / var(--tw-text-opacity))}.text-gray-300{--tw-text-opacity: 1;color:rgb(209 213 219 / var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity: 1;color:rgb(156 163 175 / var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity: 1;color:rgb(107 114 128 / var(--tw-text-opacity))}.text-gray-600{--tw-text-opacity: 1;color:rgb(75 85 99 / var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity: 1;color:rgb(55 65 81 / var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity: 1;color:rgb(31 41 55 / var(--tw-text-opacity))}.text-gray-900{--tw-text-opacity: 1;color:rgb(17 24 39 / var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity: 1;color:rgb(79 70 229 / var(--tw-text-opacity))}.text-orange-600{--tw-text-opacity: 1;color:rgb(234 88 12 / var(--tw-text-opacity))}.text-red-600{--tw-text-opacity: 1;color:rgb(220 38 38 / var(--tw-text-opacity))}.text-stone-400{--tw-text-opacity: 1;color:rgb(168 162 158 / var(--tw-text-opacity))}.text-stone-500{--tw-text-opacity: 1;color:rgb(120 113 108 / var(--tw-text-opacity))}.text-stone-600{--tw-text-opacity: 1;color:rgb(87 83 78 / var(--tw-text-opacity))}.text-stone-900{--tw-text-opacity: 1;color:rgb(28 25 23 / var(--tw-text-opacity))}.text-white{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity))}.underline{text-decoration-line:underline}.shadow{--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}button{cursor:pointer}.simple-button{border-width:1px;--tw-border-opacity: 1;border-color:rgb(214 211 209 / var(--tw-border-opacity));padding-left:.375rem;padding-right:.375rem;font-size:.875rem;line-height:1.25rem;--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.simple-button:hover{--tw-bg-opacity: 1;background-color:rgb(231 229 228 / var(--tw-bg-opacity));--tw-shadow: 0 4px 6px -1px rgb(0 0 0 / .1), 0 2px 4px -2px rgb(0 0 0 / .1);--tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}button[disabled]{cursor:not-allowed;opacity:.5}@media (min-width: 640px){.sm\\:pl-0{padding-left:0}.sm\\:text-4xl{font-size:2.25rem;line-height:2.5rem}}@media (min-width: 1024px){.lg\\:px-8{padding-left:2rem;padding-right:2rem}}`,mg=me({__name:"App",setup(e){return(E,t)=>(H(),X("div",null,[K(Re(CT),{id:"__debugbar-shadow-root"},{default:oe(()=>[K(Gg),K(Re(_T),null,{default:oe(()=>[be(ne(Re(gg)),1)]),_:1})]),_:1})]))}});Ut.registerLanguage("sql",vi);Ut.registerLanguage("json",Yi);const Hg=II();oI(mg).use(SI).use(Hg).use(fI).mount("#__debugbar");
